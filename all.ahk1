#SingleInstance
#NoTrayIcon
IbSendInit(send_type := "AnyDriver", mode := 1, args*){
workding_dir := A_WorkingDir
SetWorkingDir, %A_ScriptDir%
bd_config := A_ScriptDir . "\newconfig\bd_config.ini"
static hModule := DllCall("LoadLibrary", "Str", A_ScriptDir "\IbInputSimulator.dll", "Ptr")
if (hModule == 0){
if (A_PtrSize == 4)
throw "SendLibLoadFailed: Please use AutoHotkey x64"
else if (!FileExist("IbInputSimulator.dll"))
throw "SendLibLoadFailed: Please put IbInputSimulator.dll with your script file (or use AHK v2 instead, which can locate those DLLs that are put with the library files)"
else
throw "SendLibLoadFailed: " A_LastError
}
if (send_type == "AnyDriver")
result := DllCall("IbInputSimulator\IbSendInit", "Int", 0, "Int", 0, "Ptr", 0, "Int")
else
if (send_type == "SendInput")
result := DllCall("IbInputSimulator\IbSendInit", "Int", 1, "Int", 0, "Ptr", 0, "Int")
else
if (send_type == "Logitech")
result := DllCall("IbInputSimulator\IbSendInit", "Int", 2, "Int", 0, "Ptr", 0, "Int")
else
if (send_type == "LogitechGHubNew")
result := DllCall("IbInputSimulator\IbSendInit", "Int", 6, "Int", 0, "Ptr", 0, "Int")
else
if (send_type == "Razer")
result := DllCall("IbInputSimulator\IbSendInit", "Int", 3, "Int", 0, "Ptr", 0, "Int")
else
if (send_type == "DD")
{
if (args.MaxIndex() == 1)
result := DllCall("IbInputSimulator\IbSendInit", "Int", 4, "Int", 0, "WStr", args[1], "Int")
else
result := DllCall("IbInputSimulator\IbSendInit", "Int", 4, "Int", 0, "Ptr", 0, "Int")
} else
if (send_type == "MouClassInputInjection"){
if (args.MaxIndex() != 1)
throw "MouClassInputInjection: Please specify the process ID of the target process"
result := DllCall("IbInputSimulator\IbSendInit", "Int", 5, "Int", 0, "UInt64", args[1], "Int")
} else
throw "Invalid send type"
SetWorkingDir, %workding_dir%
if (result != 0){
tooltip "鼠标驱动模式选择错误，已恢复默认，请重新呼出面板设置鼠标模式"
IniWrite,其他,%bd_config%,mousemode,mousemode
sleep 2000
tooltip
}
if (mode != 0){
IbSendMode(mode)
}
}
IbSendMode(mode){
static ahk_mode := ""
if (mode == 1){
DllCall("IbInputSimulator\IbSendInputHook", "Int", 1)
ahk_mode := A_SendMode
SendMode Input
} else if (mode == 0){
SendMode %ahk_mode%
DllCall("IbInputSimulator\IbSendInputHook", "Int", 0)
} else {
throw "Invalid send mode"
}
}
IbSendDestroy(){
DllCall("IbInputSimulator\IbSendDestroy")
}
IbSyncKeyStates(){
DllCall("IbInputSimulator\IbSendSyncKeyStates")
}
IbSend(keys){
DllCall("IbInputSimulator\IbSendInputHook", "Int", 1)
SendInput %keys%
DllCall("IbInputSimulator\IbSendInputHook", "Int", 0)
}
UpdateLayeredWindow(hwnd, hdc, x:="", y:="", w:="", h:="", Alpha:=255)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
if ((x != "") && (y != ""))
VarSetCapacity(pt, 8), NumPut(x, pt, 0, "UInt"), NumPut(y, pt, 4, "UInt")
if (w = "") || (h = "")
{
WinGetRect(hwnd,,, w, h)
}
return DllCall("UpdateLayeredWindow"
, Ptr, hwnd
, Ptr, 0
, Ptr, ((x = "") && (y = "")) ? 0 : &pt
, "int64*", w|h<<32
, Ptr, hdc
, "int64*", 0
, "uint", 0
, "UInt*", Alpha<<16|1<<24
, "uint", 2)
}
BitBlt(ddc, dx, dy, dw, dh, sdc, sx, sy, Raster:="")
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
return DllCall("gdi32\BitBlt"
, Ptr, dDC
, "int", dx
, "int", dy
, "int", dw
, "int", dh
, Ptr, sDC
, "int", sx
, "int", sy
, "uint", Raster ? Raster : 0x00CC0020)
}
StretchBlt(ddc, dx, dy, dw, dh, sdc, sx, sy, sw, sh, Raster:="")
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
return DllCall("gdi32\StretchBlt"
, Ptr, ddc
, "int", dx
, "int", dy
, "int", dw
, "int", dh
, Ptr, sdc
, "int", sx
, "int", sy
, "int", sw
, "int", sh
, "uint", Raster ? Raster : 0x00CC0020)
}
SetStretchBltMode(hdc, iStretchMode:=4)
{
return DllCall("gdi32\SetStretchBltMode"
, A_PtrSize ? "UPtr" : "UInt", hdc
, "int", iStretchMode)
}
SetImage(hwnd, hBitmap)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
E := DllCall( "SendMessage", Ptr, hwnd, "UInt", 0x172, "UInt", 0x0, Ptr, hBitmap )
DeleteObject(E)
return E
}
SetSysColorToControl(hwnd, SysColor:=15)
{
WinGetRect(hwnd,,, w, h)
bc := DllCall("GetSysColor", "Int", SysColor, "UInt")
pBrushClear := Gdip_BrushCreateSolid(0xff000000 | (bc >> 16 | bc & 0xff00 | (bc & 0xff) << 16))
pBitmap := Gdip_CreateBitmap(w, h), G := Gdip_GraphicsFromImage(pBitmap)
Gdip_FillRectangle(G, pBrushClear, 0, 0, w, h)
hBitmap := Gdip_CreateHBITMAPFromBitmap(pBitmap)
SetImage(hwnd, hBitmap)
Gdip_DeleteBrush(pBrushClear)
Gdip_DeleteGraphics(G), Gdip_DisposeImage(pBitmap), DeleteObject(hBitmap)
return 0
}
Gdip_BitmapFromScreen(Screen:=0, Raster:="")
{
hhdc := 0
Ptr := A_PtrSize ? "UPtr" : "UInt"
if (Screen = 0)
{
_x := DllCall( "GetSystemMetrics", "Int", 76 )
_y := DllCall( "GetSystemMetrics", "Int", 77 )
_w := DllCall( "GetSystemMetrics", "Int", 78 )
_h := DllCall( "GetSystemMetrics", "Int", 79 )
}
else if (SubStr(Screen, 1, 5) = "hwnd:")
{
Screen := SubStr(Screen, 6)
if !WinExist("ahk_id " Screen)
return -2
WinGetRect(Screen,,, _w, _h)
_x := _y := 0
hhdc := GetDCEx(Screen, 3)
}
else if IsInteger(Screen)
{
M := GetMonitorInfo(Screen)
_x := M.Left, _y := M.Top, _w := M.Right-M.Left, _h := M.Bottom-M.Top
}
else
{
S := StrSplit(Screen, "|")
_x := S[1], _y := S[2], _w := S[3], _h := S[4]
}
if (_x = "") || (_y = "") || (_w = "") || (_h = "")
return -1
chdc := CreateCompatibleDC(), hbm := CreateDIBSection(_w, _h, chdc), obm := SelectObject(chdc, hbm), hhdc := hhdc ? hhdc : GetDC()
BitBlt(chdc, 0, 0, _w, _h, hhdc, _x, _y, Raster)
ReleaseDC(hhdc)
pBitmap := Gdip_CreateBitmapFromHBITMAP(hbm)
SelectObject(chdc, obm), DeleteObject(hbm), DeleteDC(hhdc), DeleteDC(chdc)
return pBitmap
}
Gdip_BitmapFromHWND(hwnd)
{
WinGetRect(hwnd,,, Width, Height)
hbm := CreateDIBSection(Width, Height), hdc := CreateCompatibleDC(), obm := SelectObject(hdc, hbm)
PrintWindow(hwnd, hdc)
pBitmap := Gdip_CreateBitmapFromHBITMAP(hbm)
SelectObject(hdc, obm), DeleteObject(hbm), DeleteDC(hdc)
return pBitmap
}
CreateRectF(ByRef RectF, x, y, w, h)
{
VarSetCapacity(RectF, 16)
NumPut(x, RectF, 0, "float"), NumPut(y, RectF, 4, "float"), NumPut(w, RectF, 8, "float"), NumPut(h, RectF, 12, "float")
}
CreateRect(ByRef Rect, x, y, w, h)
{
VarSetCapacity(Rect, 16)
NumPut(x, Rect, 0, "uint"), NumPut(y, Rect, 4, "uint"), NumPut(w, Rect, 8, "uint"), NumPut(h, Rect, 12, "uint")
}
CreateSizeF(ByRef SizeF, w, h)
{
VarSetCapacity(SizeF, 8)
NumPut(w, SizeF, 0, "float"), NumPut(h, SizeF, 4, "float")
}
CreatePointF(ByRef PointF, x, y)
{
VarSetCapacity(PointF, 8)
NumPut(x, PointF, 0, "float"), NumPut(y, PointF, 4, "float")
}
CreateDIBSection(w, h, hdc:="", bpp:=32, ByRef ppvBits:=0)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
hdc2 := hdc ? hdc : GetDC()
VarSetCapacity(bi, 40, 0)
NumPut(w, bi, 4, "uint")
, NumPut(h, bi, 8, "uint")
, NumPut(40, bi, 0, "uint")
, NumPut(1, bi, 12, "ushort")
, NumPut(0, bi, 16, "uInt")
, NumPut(bpp, bi, 14, "ushort")
hbm := DllCall("CreateDIBSection"
, Ptr, hdc2
, Ptr, &bi
, "uint", 0
, A_PtrSize ? "UPtr*" : "uint*", ppvBits
, Ptr, 0
, "uint", 0, Ptr)
if !hdc
ReleaseDC(hdc2)
return hbm
}
PrintWindow(hwnd, hdc, Flags:=0)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
return DllCall("PrintWindow", Ptr, hwnd, Ptr, hdc, "uint", Flags)
}
DestroyIcon(hIcon)
{
return DllCall("DestroyIcon", A_PtrSize ? "UPtr" : "UInt", hIcon)
}
GetIconDimensions(hIcon, ByRef Width, ByRef Height) {
Ptr := A_PtrSize ? "UPtr" : "UInt"
Width := Height := 0
VarSetCapacity(ICONINFO, size := 16 + 2 * A_PtrSize, 0)
if !DllCall("user32\GetIconInfo", Ptr, hIcon, Ptr, &ICONINFO)
return -1
hbmMask := NumGet(&ICONINFO, 16, Ptr)
hbmColor := NumGet(&ICONINFO, 16 + A_PtrSize, Ptr)
VarSetCapacity(BITMAP, size, 0)
if DllCall("gdi32\GetObject", Ptr, hbmColor, "Int", size, Ptr, &BITMAP)
{
Width := NumGet(&BITMAP, 4, "Int")
Height := NumGet(&BITMAP, 8, "Int")
}
if !DllCall("gdi32\DeleteObject", Ptr, hbmMask)
return -2
if !DllCall("gdi32\DeleteObject", Ptr, hbmColor)
return -3
return 0
}
PaintDesktop(hdc)
{
return DllCall("PaintDesktop", A_PtrSize ? "UPtr" : "UInt", hdc)
}
CreateCompatibleBitmap(hdc, w, h)
{
return DllCall("gdi32\CreateCompatibleBitmap", A_PtrSize ? "UPtr" : "UInt", hdc, "int", w, "int", h)
}
CreateCompatibleDC(hdc:=0)
{
return DllCall("CreateCompatibleDC", A_PtrSize ? "UPtr" : "UInt", hdc)
}
SelectObject(hdc, hgdiobj)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
return DllCall("SelectObject", Ptr, hdc, Ptr, hgdiobj)
}
DeleteObject(hObject)
{
return DllCall("DeleteObject", A_PtrSize ? "UPtr" : "UInt", hObject)
}
GetDC(hwnd:=0)
{
return DllCall("GetDC", A_PtrSize ? "UPtr" : "UInt", hwnd)
}
GetDCEx(hwnd, flags:=0, hrgnClip:=0)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
return DllCall("GetDCEx", Ptr, hwnd, Ptr, hrgnClip, "int", flags)
}
ReleaseDC(hdc, hwnd:=0)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
return DllCall("ReleaseDC", Ptr, hwnd, Ptr, hdc)
}
DeleteDC(hdc)
{
return DllCall("DeleteDC", A_PtrSize ? "UPtr" : "UInt", hdc)
}
Gdip_LibraryVersion()
{
return 1.45
}
Gdip_LibrarySubVersion()
{
return 1.54
}
Gdip_BitmapFromBRA(ByRef BRAFromMemIn, File, Alternate := 0) {
pBitmap := 0
pStream := 0
If !(BRAFromMemIn)
Return -1
Headers := StrSplit(StrGet(&BRAFromMemIn, 256, "CP0"), "`n")
Header := StrSplit(Headers[1], "|")
HeaderLength := (A_AhkVersion < "2") ? Header.Length() : Header.Length
If (HeaderLength != 4) || (Header[2] != "BRA!")
Return -2
_Info := StrSplit(Headers[2], "|")
_InfoLength := (A_AhkVersion < "2") ? _Info.Length() : _Info.Length
If (_InfoLength != 3)
Return -3
OffsetTOC := StrPut(Headers[1], "CP0") + StrPut(Headers[2], "CP0")
OffsetData := _Info[2]
SearchIndex := Alternate ? 1 : 2
TOC := StrGet(&BRAFromMemIn + OffsetTOC, OffsetData - OffsetTOC - 1, "CP0")
RX1 := A_AhkVersion < "2" ? "mi`nO)^" : "mi`n)^"
Offset := Size := 0
If RegExMatch(TOC, RX1 . (Alternate ? File "\|.+?" : "\d+\|" . File) . "\|(\d+)\|(\d+)$", FileInfo) {
Offset := OffsetData + FileInfo[1]
Size := FileInfo[2]
}
If (Size = 0)
Return -4
hData := DllCall("GlobalAlloc", "UInt", 2, "UInt", Size, "UPtr")
pData := DllCall("GlobalLock", "Ptr", hData, "UPtr")
DllCall("RtlMoveMemory", "Ptr", pData, "Ptr", &BRAFromMemIn + Offset, "Ptr", Size)
DllCall("GlobalUnlock", "Ptr", hData)
DllCall("Ole32.dll\CreateStreamOnHGlobal", "Ptr", hData, "Int", 1, "PtrP", pStream)
DllCall("Gdiplus.dll\GdipCreateBitmapFromStream", "Ptr", pStream, "PtrP", pBitmap)
ObjRelease(pStream)
Return pBitmap
}
Gdip_BitmapFromBase64(ByRef Base64)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
DecLen := 0
pBitmap := 0
if !(DllCall("crypt32\CryptStringToBinary", Ptr, &Base64, "UInt", 0, "UInt", 0x01, Ptr, 0, "UIntP", DecLen, Ptr, 0, Ptr, 0))
return -1
VarSetCapacity(Dec, DecLen, 0)
if !(DllCall("crypt32\CryptStringToBinary", Ptr, &Base64, "UInt", 0, "UInt", 0x01, Ptr, &Dec, "UIntP", DecLen, Ptr, 0, Ptr, 0))
return -2
if !(pStream := DllCall("shlwapi\SHCreateMemStream", Ptr, &Dec, "UInt", DecLen, "UPtr"))
return -3
DllCall("gdiplus\GdipCreateBitmapFromStreamICM", Ptr, pStream, "PtrP", pBitmap)
ObjRelease(pStream)
return pBitmap
}
Gdip_DrawRectangle(pGraphics, pPen, x, y, w, h)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
return DllCall("gdiplus\GdipDrawRectangle", Ptr, pGraphics, Ptr, pPen, "float", x, "float", y, "float", w, "float", h)
}
Gdip_DrawRoundedRectangle(pGraphics, pPen, x, y, w, h, r)
{
Gdip_SetClipRect(pGraphics, x-r, y-r, 2*r, 2*r, 4)
Gdip_SetClipRect(pGraphics, x+w-r, y-r, 2*r, 2*r, 4)
Gdip_SetClipRect(pGraphics, x-r, y+h-r, 2*r, 2*r, 4)
Gdip_SetClipRect(pGraphics, x+w-r, y+h-r, 2*r, 2*r, 4)
_E := Gdip_DrawRectangle(pGraphics, pPen, x, y, w, h)
Gdip_ResetClip(pGraphics)
Gdip_SetClipRect(pGraphics, x-(2*r), y+r, w+(4*r), h-(2*r), 4)
Gdip_SetClipRect(pGraphics, x+r, y-(2*r), w-(2*r), h+(4*r), 4)
Gdip_DrawEllipse(pGraphics, pPen, x, y, 2*r, 2*r)
Gdip_DrawEllipse(pGraphics, pPen, x+w-(2*r), y, 2*r, 2*r)
Gdip_DrawEllipse(pGraphics, pPen, x, y+h-(2*r), 2*r, 2*r)
Gdip_DrawEllipse(pGraphics, pPen, x+w-(2*r), y+h-(2*r), 2*r, 2*r)
Gdip_ResetClip(pGraphics)
return _E
}
Gdip_DrawEllipse(pGraphics, pPen, x, y, w, h)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
return DllCall("gdiplus\GdipDrawEllipse", Ptr, pGraphics, Ptr, pPen, "float", x, "float", y, "float", w, "float", h)
}
Gdip_DrawBezier(pGraphics, pPen, x1, y1, x2, y2, x3, y3, x4, y4)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
return DllCall("gdiplus\GdipDrawBezier"
, Ptr, pgraphics
, Ptr, pPen
, "float", x1
, "float", y1
, "float", x2
, "float", y2
, "float", x3
, "float", y3
, "float", x4
, "float", y4)
}
Gdip_DrawArc(pGraphics, pPen, x, y, w, h, StartAngle, SweepAngle)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
return DllCall("gdiplus\GdipDrawArc"
, Ptr, pGraphics
, Ptr, pPen
, "float", x
, "float", y
, "float", w
, "float", h
, "float", StartAngle
, "float", SweepAngle)
}
Gdip_DrawPie(pGraphics, pPen, x, y, w, h, StartAngle, SweepAngle)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
return DllCall("gdiplus\GdipDrawPie", Ptr, pGraphics, Ptr, pPen, "float", x, "float", y, "float", w, "float", h, "float", StartAngle, "float", SweepAngle)
}
Gdip_DrawLine(pGraphics, pPen, x1, y1, x2, y2)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
return DllCall("gdiplus\GdipDrawLine"
, Ptr, pGraphics
, Ptr, pPen
, "float", x1
, "float", y1
, "float", x2
, "float", y2)
}
Gdip_DrawLines(pGraphics, pPen, Points)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
Points := StrSplit(Points, "|")
PointsLength := (A_AhkVersion < "2") ? Points.Length() : Points.Length
VarSetCapacity(PointF, 8*PointsLength)
for eachPoint, Point in Points
{
Coord := StrSplit(Point, ",")
NumPut(Coord[1], PointF, 8*(A_Index-1), "float"), NumPut(Coord[2], PointF, (8*(A_Index-1))+4, "float")
}
return DllCall("gdiplus\GdipDrawLines", Ptr, pGraphics, Ptr, pPen, Ptr, &PointF, "int", PointsLength)
}
Gdip_FillRectangle(pGraphics, pBrush, x, y, w, h)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
return DllCall("gdiplus\GdipFillRectangle"
, Ptr, pGraphics
, Ptr, pBrush
, "float", x
, "float", y
, "float", w
, "float", h)
}
Gdip_FillRoundedRectangle(pGraphics, pBrush, x, y, w, h, r)
{
Region := Gdip_GetClipRegion(pGraphics)
Gdip_SetClipRect(pGraphics, x-r, y-r, 2*r, 2*r, 4)
Gdip_SetClipRect(pGraphics, x+w-r, y-r, 2*r, 2*r, 4)
Gdip_SetClipRect(pGraphics, x-r, y+h-r, 2*r, 2*r, 4)
Gdip_SetClipRect(pGraphics, x+w-r, y+h-r, 2*r, 2*r, 4)
_E := Gdip_FillRectangle(pGraphics, pBrush, x, y, w, h)
Gdip_SetClipRegion(pGraphics, Region, 0)
Gdip_SetClipRect(pGraphics, x-(2*r), y+r, w+(4*r), h-(2*r), 4)
Gdip_SetClipRect(pGraphics, x+r, y-(2*r), w-(2*r), h+(4*r), 4)
Gdip_FillEllipse(pGraphics, pBrush, x, y, 2*r, 2*r)
Gdip_FillEllipse(pGraphics, pBrush, x+w-(2*r), y, 2*r, 2*r)
Gdip_FillEllipse(pGraphics, pBrush, x, y+h-(2*r), 2*r, 2*r)
Gdip_FillEllipse(pGraphics, pBrush, x+w-(2*r), y+h-(2*r), 2*r, 2*r)
Gdip_SetClipRegion(pGraphics, Region, 0)
Gdip_DeleteRegion(Region)
return _E
}
Gdip_FillPolygon(pGraphics, pBrush, Points, FillMode:=0)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
Points := StrSplit(Points, "|")
PointsLength := (A_AhkVersion < "2") ? Points.Length() : Points.Length
VarSetCapacity(PointF, 8*PointsLength)
For eachPoint, Point in Points
{
Coord := StrSplit(Point, ",")
NumPut(Coord[1], PointF, 8*(A_Index-1), "float"), NumPut(Coord[2], PointF, (8*(A_Index-1))+4, "float")
}
return DllCall("gdiplus\GdipFillPolygon", Ptr, pGraphics, Ptr, pBrush, Ptr, &PointF, "int", PointsLength, "int", FillMode)
}
Gdip_FillPie(pGraphics, pBrush, x, y, w, h, StartAngle, SweepAngle)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
return DllCall("gdiplus\GdipFillPie"
, Ptr, pGraphics
, Ptr, pBrush
, "float", x
, "float", y
, "float", w
, "float", h
, "float", StartAngle
, "float", SweepAngle)
}
Gdip_FillEllipse(pGraphics, pBrush, x, y, w, h)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
return DllCall("gdiplus\GdipFillEllipse", Ptr, pGraphics, Ptr, pBrush, "float", x, "float", y, "float", w, "float", h)
}
Gdip_FillRegion(pGraphics, pBrush, Region)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
return DllCall("gdiplus\GdipFillRegion", Ptr, pGraphics, Ptr, pBrush, Ptr, Region)
}
Gdip_FillPath(pGraphics, pBrush, pPath)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
return DllCall("gdiplus\GdipFillPath", Ptr, pGraphics, Ptr, pBrush, Ptr, pPath)
}
Gdip_DrawImagePointsRect(pGraphics, pBitmap, Points, sx:="", sy:="", sw:="", sh:="", Matrix:=1)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
Points := StrSplit(Points, "|")
PointsLength := (A_AhkVersion < "2") ? Points.Length() : Points.Length
VarSetCapacity(PointF, 8*PointsLength)
For eachPoint, Point in Points
{
Coord := StrSplit(Point, ",")
NumPut(Coord[1], PointF, 8*(A_Index-1), "float"), NumPut(Coord[2], PointF, (8*(A_Index-1))+4, "float")
}
if !IsNumber(Matrix)
ImageAttr := Gdip_SetImageAttributesColorMatrix(Matrix)
else if (Matrix != 1)
ImageAttr := Gdip_SetImageAttributesColorMatrix("1|0|0|0|0|0|1|0|0|0|0|0|1|0|0|0|0|0|" Matrix "|0|0|0|0|0|1")
if (sx = "" && sy = "" && sw = "" && sh = "")
{
sx := 0, sy := 0
sw := Gdip_GetImageWidth(pBitmap)
sh := Gdip_GetImageHeight(pBitmap)
}
_E := DllCall("gdiplus\GdipDrawImagePointsRect"
, Ptr, pGraphics
, Ptr, pBitmap
, Ptr, &PointF
, "int", PointsLength
, "float", sx
, "float", sy
, "float", sw
, "float", sh
, "int", 2
, Ptr, ImageAttr
, Ptr, 0
, Ptr, 0)
if ImageAttr
Gdip_DisposeImageAttributes(ImageAttr)
return _E
}
Gdip_DrawImage(pGraphics, pBitmap, dx:="", dy:="", dw:="", dh:="", sx:="", sy:="", sw:="", sh:="", Matrix:=1)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
if !IsNumber(Matrix)
ImageAttr := Gdip_SetImageAttributesColorMatrix(Matrix)
else if (Matrix != 1)
ImageAttr := Gdip_SetImageAttributesColorMatrix("1|0|0|0|0|0|1|0|0|0|0|0|1|0|0|0|0|0|" Matrix "|0|0|0|0|0|1")
if (sx = "" && sy = "" && sw = "" && sh = "")
{
if (dx = "" && dy = "" && dw = "" && dh = "")
{
sx := dx := 0, sy := dy := 0
sw := dw := Gdip_GetImageWidth(pBitmap)
sh := dh := Gdip_GetImageHeight(pBitmap)
}
else
{
sx := sy := 0
sw := Gdip_GetImageWidth(pBitmap)
sh := Gdip_GetImageHeight(pBitmap)
}
}
_E := DllCall("gdiplus\GdipDrawImageRectRect"
, Ptr, pGraphics
, Ptr, pBitmap
, "float", dx
, "float", dy
, "float", dw
, "float", dh
, "float", sx
, "float", sy
, "float", sw
, "float", sh
, "int", 2
, Ptr, ImageAttr ? ImageAttr : 0
, Ptr, 0
, Ptr, 0)
if ImageAttr
Gdip_DisposeImageAttributes(ImageAttr)
return _E
}
Gdip_SetImageAttributesColorMatrix(Matrix)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
ImageAttr := 0
VarSetCapacity(ColourMatrix, 100, 0)
Matrix := RegExReplace(RegExReplace(Matrix, "^[^\d-\.]+([\d\.])", "$1", , 1), "[^\d-\.]+", "|")
Matrix := StrSplit(Matrix, "|")
Loop 25
{
M := (Matrix[A_Index] != "") ? Matrix[A_Index] : Mod(A_Index-1, 6) ? 0 : 1
NumPut(M, ColourMatrix, (A_Index-1)*4, "float")
}
DllCall("gdiplus\GdipCreateImageAttributes", A_PtrSize ? "UPtr*" : "uint*", ImageAttr)
DllCall("gdiplus\GdipSetImageAttributesColorMatrix", Ptr, ImageAttr, "int", 1, "int", 1, Ptr, &ColourMatrix, Ptr, 0, "int", 0)
return ImageAttr
}
Gdip_GraphicsFromImage(pBitmap)
{
pGraphics := 0
DllCall("gdiplus\GdipGetImageGraphicsContext", A_PtrSize ? "UPtr" : "UInt", pBitmap, A_PtrSize ? "UPtr*" : "UInt*", pGraphics)
return pGraphics
}
Gdip_GraphicsFromHDC(hdc)
{
pGraphics := 0
DllCall("gdiplus\GdipCreateFromHDC", A_PtrSize ? "UPtr" : "UInt", hdc, A_PtrSize ? "UPtr*" : "UInt*", pGraphics)
return pGraphics
}
Gdip_GetDC(pGraphics)
{
hdc := 0
DllCall("gdiplus\GdipGetDC", A_PtrSize ? "UPtr" : "UInt", pGraphics, A_PtrSize ? "UPtr*" : "UInt*", hdc)
return hdc
}
Gdip_ReleaseDC(pGraphics, hdc)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
return DllCall("gdiplus\GdipReleaseDC", Ptr, pGraphics, Ptr, hdc)
}
Gdip_GraphicsClear(pGraphics, ARGB:=0x00ffffff)
{
return DllCall("gdiplus\GdipGraphicsClear", A_PtrSize ? "UPtr" : "UInt", pGraphics, "int", ARGB)
}
Gdip_BlurBitmap(pBitmap, Blur)
{
if (Blur > 100) || (Blur < 1)
return -1
sWidth := Gdip_GetImageWidth(pBitmap), sHeight := Gdip_GetImageHeight(pBitmap)
dWidth := sWidth//Blur, dHeight := sHeight//Blur
pBitmap1 := Gdip_CreateBitmap(dWidth, dHeight)
G1 := Gdip_GraphicsFromImage(pBitmap1)
Gdip_SetInterpolationMode(G1, 7)
Gdip_DrawImage(G1, pBitmap, 0, 0, dWidth, dHeight, 0, 0, sWidth, sHeight)
Gdip_DeleteGraphics(G1)
pBitmap2 := Gdip_CreateBitmap(sWidth, sHeight)
G2 := Gdip_GraphicsFromImage(pBitmap2)
Gdip_SetInterpolationMode(G2, 7)
Gdip_DrawImage(G2, pBitmap1, 0, 0, sWidth, sHeight, 0, 0, dWidth, dHeight)
Gdip_DeleteGraphics(G2)
Gdip_DisposeImage(pBitmap1)
return pBitmap2
}
Gdip_SaveBitmapToFile(pBitmap, sOutput, Quality:=75)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
nCount := 0
nSize := 0
_p := 0
SplitPath sOutput,,, Extension
if !RegExMatch(Extension, "^(?i:BMP|DIB|RLE|JPG|JPEG|JPE|JFIF|GIF|TIF|TIFF|PNG)$")
return -1
Extension := "." Extension
DllCall("gdiplus\GdipGetImageEncodersSize", "uint*", nCount, "uint*", nSize)
VarSetCapacity(ci, nSize)
DllCall("gdiplus\GdipGetImageEncoders", "uint", nCount, "uint", nSize, Ptr, &ci)
if !(nCount && nSize)
return -2
If (A_IsUnicode){
StrGet_Name := "StrGet"
N := (A_AhkVersion < 2) ? nCount : "nCount"
Loop %N%
{
sString := %StrGet_Name%(NumGet(ci, (idx := (48+7*A_PtrSize)*(A_Index-1))+32+3*A_PtrSize), "UTF-16")
if !InStr(sString, "*" Extension)
continue
pCodec := &ci+idx
break
}
} else {
N := (A_AhkVersion < 2) ? nCount : "nCount"
Loop %N%
{
Location := NumGet(ci, 76*(A_Index-1)+44)
nSize := DllCall("WideCharToMultiByte", "uint", 0, "uint", 0, "uint", Location, "int", -1, "uint", 0, "int",  0, "uint", 0, "uint", 0)
VarSetCapacity(sString, nSize)
DllCall("WideCharToMultiByte", "uint", 0, "uint", 0, "uint", Location, "int", -1, "str", sString, "int", nSize, "uint", 0, "uint", 0)
if !InStr(sString, "*" Extension)
continue
pCodec := &ci+76*(A_Index-1)
break
}
}
if !pCodec
return -3
if (Quality != 75)
{
Quality := (Quality < 0) ? 0 : (Quality > 100) ? 100 : Quality
if RegExMatch(Extension, "^\.(?i:JPG|JPEG|JPE|JFIF)$")
{
DllCall("gdiplus\GdipGetEncoderParameterListSize", Ptr, pBitmap, Ptr, pCodec, "uint*", nSize)
VarSetCapacity(EncoderParameters, nSize, 0)
DllCall("gdiplus\GdipGetEncoderParameterList", Ptr, pBitmap, Ptr, pCodec, "uint", nSize, Ptr, &EncoderParameters)
nCount := NumGet(EncoderParameters, "UInt")
N := (A_AhkVersion < 2) ? nCount : "nCount"
Loop %N%
{
elem := (24+(A_PtrSize ? A_PtrSize : 4))*(A_Index-1) + 4 + (pad := A_PtrSize = 8 ? 4 : 0)
if (NumGet(EncoderParameters, elem+16, "UInt") = 1) && (NumGet(EncoderParameters, elem+20, "UInt") = 6)
{
_p := elem+&EncoderParameters-pad-4
NumPut(Quality, NumGet(NumPut(4, NumPut(1, _p+0)+20, "UInt")), "UInt")
break
}
}
}
}
if (!A_IsUnicode)
{
nSize := DllCall("MultiByteToWideChar", "uint", 0, "uint", 0, Ptr, &sOutput, "int", -1, Ptr, 0, "int", 0)
VarSetCapacity(wOutput, nSize*2)
DllCall("MultiByteToWideChar", "uint", 0, "uint", 0, Ptr, &sOutput, "int", -1, Ptr, &wOutput, "int", nSize)
VarSetCapacity(wOutput, -1)
if !VarSetCapacity(wOutput)
return -4
_E := DllCall("gdiplus\GdipSaveImageToFile", Ptr, pBitmap, Ptr, &wOutput, Ptr, pCodec, "uint", _p ? _p : 0)
}
else
_E := DllCall("gdiplus\GdipSaveImageToFile", Ptr, pBitmap, Ptr, &sOutput, Ptr, pCodec, "uint", _p ? _p : 0)
return _E ? -5 : 0
}
Gdip_GetPixel(pBitmap, x, y)
{
ARGB := 0
DllCall("gdiplus\GdipBitmapGetPixel", A_PtrSize ? "UPtr" : "UInt", pBitmap, "int", x, "int", y, "uint*", ARGB)
return ARGB
}
Gdip_SetPixel(pBitmap, x, y, ARGB)
{
return DllCall("gdiplus\GdipBitmapSetPixel", A_PtrSize ? "UPtr" : "UInt", pBitmap, "int", x, "int", y, "int", ARGB)
}
Gdip_GetImageWidth(pBitmap)
{
Width := 0
DllCall("gdiplus\GdipGetImageWidth", A_PtrSize ? "UPtr" : "UInt", pBitmap, "uint*", Width)
return Width
}
Gdip_GetImageHeight(pBitmap)
{
Height := 0
DllCall("gdiplus\GdipGetImageHeight", A_PtrSize ? "UPtr" : "UInt", pBitmap, "uint*", Height)
return Height
}
Gdip_GetImageDimensions(pBitmap, ByRef Width, ByRef Height)
{
Width := 0
Height := 0
Ptr := A_PtrSize ? "UPtr" : "UInt"
DllCall("gdiplus\GdipGetImageWidth", Ptr, pBitmap, "uint*", Width)
DllCall("gdiplus\GdipGetImageHeight", Ptr, pBitmap, "uint*", Height)
}
Gdip_GetDimensions(pBitmap, ByRef Width, ByRef Height)
{
Gdip_GetImageDimensions(pBitmap, Width, Height)
}
Gdip_GetImagePixelFormat(pBitmap)
{
Format := 0
DllCall("gdiplus\GdipGetImagePixelFormat", A_PtrSize ? "UPtr" : "UInt", pBitmap, A_PtrSize ? "UPtr*" : "UInt*", Format)
return Format
}
Gdip_GetDpiX(pGraphics)
{
dpix := 0
DllCall("gdiplus\GdipGetDpiX", A_PtrSize ? "UPtr" : "uint", pGraphics, "float*", dpix)
return Round(dpix)
}
Gdip_GetDpiY(pGraphics)
{
dpiy := 0
DllCall("gdiplus\GdipGetDpiY", A_PtrSize ? "UPtr" : "uint", pGraphics, "float*", dpiy)
return Round(dpiy)
}
Gdip_GetImageHorizontalResolution(pBitmap)
{
dpix := 0
DllCall("gdiplus\GdipGetImageHorizontalResolution", A_PtrSize ? "UPtr" : "uint", pBitmap, "float*", dpix)
return Round(dpix)
}
Gdip_GetImageVerticalResolution(pBitmap)
{
dpiy := 0
DllCall("gdiplus\GdipGetImageVerticalResolution", A_PtrSize ? "UPtr" : "uint", pBitmap, "float*", dpiy)
return Round(dpiy)
}
Gdip_BitmapSetResolution(pBitmap, dpix, dpiy)
{
return DllCall("gdiplus\GdipBitmapSetResolution", A_PtrSize ? "UPtr" : "uint", pBitmap, "float", dpix, "float", dpiy)
}
Gdip_CreateBitmapFromFile(sFile, IconNumber:=1, IconSize:="")
{
pBitmap := 0
pBitmapOld := 0
hIcon := 0
Ptr := A_PtrSize ? "UPtr" : "UInt"
, PtrA := A_PtrSize ? "UPtr*" : "UInt*"
SplitPath sFile,,, Extension
if RegExMatch(Extension, "^(?i:exe|dll)$")
{
Sizes := IconSize ? IconSize : 256 "|" 128 "|" 64 "|" 48 "|" 32 "|" 16
BufSize := 16 + (2*(A_PtrSize ? A_PtrSize : 4))
VarSetCapacity(buf, BufSize, 0)
For eachSize, Size in StrSplit( Sizes, "|" )
{
DllCall("PrivateExtractIcons", "str", sFile, "int", IconNumber-1, "int", Size, "int", Size, PtrA, hIcon, PtrA, 0, "uint", 1, "uint", 0)
if !hIcon
continue
if !DllCall("GetIconInfo", Ptr, hIcon, Ptr, &buf)
{
DestroyIcon(hIcon)
continue
}
hbmMask  := NumGet(buf, 12 + ((A_PtrSize ? A_PtrSize : 4) - 4))
hbmColor := NumGet(buf, 12 + ((A_PtrSize ? A_PtrSize : 4) - 4) + (A_PtrSize ? A_PtrSize : 4))
if !(hbmColor && DllCall("GetObject", Ptr, hbmColor, "int", BufSize, Ptr, &buf))
{
DestroyIcon(hIcon)
continue
}
break
}
if !hIcon
return -1
Width := NumGet(buf, 4, "int"), Height := NumGet(buf, 8, "int")
hbm := CreateDIBSection(Width, -Height), hdc := CreateCompatibleDC(), obm := SelectObject(hdc, hbm)
if !DllCall("DrawIconEx", Ptr, hdc, "int", 0, "int", 0, Ptr, hIcon, "uint", Width, "uint", Height, "uint", 0, Ptr, 0, "uint", 3)
{
DestroyIcon(hIcon)
return -2
}
VarSetCapacity(dib, 104)
DllCall("GetObject", Ptr, hbm, "int", A_PtrSize = 8 ? 104 : 84, Ptr, &dib)
Stride := NumGet(dib, 12, "Int"), Bits := NumGet(dib, 20 + (A_PtrSize = 8 ? 4 : 0))
DllCall("gdiplus\GdipCreateBitmapFromScan0", "int", Width, "int", Height, "int", Stride, "int", 0x26200A, Ptr, Bits, PtrA, pBitmapOld)
pBitmap := Gdip_CreateBitmap(Width, Height)
_G := Gdip_GraphicsFromImage(pBitmap)
, Gdip_DrawImage(_G, pBitmapOld, 0, 0, Width, Height, 0, 0, Width, Height)
SelectObject(hdc, obm), DeleteObject(hbm), DeleteDC(hdc)
Gdip_DeleteGraphics(_G), Gdip_DisposeImage(pBitmapOld)
DestroyIcon(hIcon)
}
else
{
if (!A_IsUnicode)
{
VarSetCapacity(wFile, 1024)
DllCall("kernel32\MultiByteToWideChar", "uint", 0, "uint", 0, Ptr, &sFile, "int", -1, Ptr, &wFile, "int", 512)
DllCall("gdiplus\GdipCreateBitmapFromFile", Ptr, &wFile, PtrA, pBitmap)
}
else
DllCall("gdiplus\GdipCreateBitmapFromFile", Ptr, &sFile, PtrA, pBitmap)
}
return pBitmap
}
Gdip_CreateBitmapFromHBITMAP(hBitmap, Palette:=0)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
pBitmap := 0
DllCall("gdiplus\GdipCreateBitmapFromHBITMAP", Ptr, hBitmap, Ptr, Palette, A_PtrSize ? "UPtr*" : "uint*", pBitmap)
return pBitmap
}
Gdip_CreateHBITMAPFromBitmap(pBitmap, Background:=0xffffffff)
{
hbm := 0
DllCall("gdiplus\GdipCreateHBITMAPFromBitmap", A_PtrSize ? "UPtr" : "UInt", pBitmap, A_PtrSize ? "UPtr*" : "uint*", hbm, "int", Background)
return hbm
}
Gdip_CreateARGBBitmapFromHBITMAP(ByRef hBitmap) {
DllCall("GetObject"
,    "ptr", hBitmap
,    "int", VarSetCapacity(dib, 76+2*(A_PtrSize=8?4:0)+2*A_PtrSize)
,    "ptr", &dib)
, width  := NumGet(dib, 4, "uint")
, height := NumGet(dib, 8, "uint")
, bpp    := NumGet(dib, 18, "ushort")
if (bpp != 32) {
DllCall("gdiplus\GdipCreateBitmapFromHBITMAP", "ptr", hBitmap, "ptr", 0, "ptr*", pBitmap:=0)
return pBitmap
}
hdc := DllCall("CreateCompatibleDC", "ptr", 0, "ptr")
obm := DllCall("SelectObject", "ptr", hdc, "ptr", hBitmap, "ptr")
cdc := DllCall("CreateCompatibleDC", "ptr", hdc, "ptr")
VarSetCapacity(bi, 40, 0)
, NumPut(      40, bi,  0,   "uint")
, NumPut(   width, bi,  4,   "uint")
, NumPut( -height, bi,  8,    "int")
, NumPut(       1, bi, 12, "ushort")
, NumPut(      32, bi, 14, "ushort")
hbm := DllCall("CreateDIBSection", "ptr", cdc, "ptr", &bi, "uint", 0
, "ptr*", pBits:=0
, "ptr", 0, "uint", 0, "ptr")
ob2 := DllCall("SelectObject", "ptr", cdc, "ptr", hbm, "ptr")
DllCall("gdiplus\GdipCreateBitmapFromScan0"
, "int", width, "int", height, "int", 0, "int", 0x26200A, "ptr", 0, "ptr*", pBitmap:=0)
VarSetCapacity(Rect, 16, 0)
, NumPut(  width, Rect,  8,   "uint")
, NumPut( height, Rect, 12,   "uint")
VarSetCapacity(BitmapData, 16+2*A_PtrSize, 0)
, NumPut(     width, BitmapData,  0,   "uint")
, NumPut(    height, BitmapData,  4,   "uint")
, NumPut( 4 * width, BitmapData,  8,    "int")
, NumPut(   0xE200B, BitmapData, 12,    "int")
, NumPut(     pBits, BitmapData, 16,    "ptr")
DllCall("gdiplus\GdipBitmapLockBits"
,    "ptr", pBitmap
,    "ptr", &Rect
,   "uint", 6
,    "int", 0xE200B
,    "ptr", &BitmapData)
DllCall("gdi32\BitBlt"
, "ptr", cdc, "int", 0, "int", 0, "int", width, "int", height
, "ptr", hdc, "int", 0, "int", 0, "uint", 0x00CC0020)
DllCall("gdiplus\GdipBitmapUnlockBits", "ptr", pBitmap, "ptr", &BitmapData)
DllCall("SelectObject", "ptr", cdc, "ptr", ob2)
DllCall("DeleteObject", "ptr", hbm)
DllCall("DeleteDC",     "ptr", cdc)
DllCall("SelectObject", "ptr", hdc, "ptr", obm)
DllCall("DeleteDC",     "ptr", hdc)
return pBitmap
}
Gdip_CreateARGBHBITMAPFromBitmap(ByRef pBitmap) {
DllCall("gdiplus\GdipGetImageWidth", "ptr", pBitmap, "uint*", width:=0)
DllCall("gdiplus\GdipGetImageHeight", "ptr", pBitmap, "uint*", height:=0)
hdc := DllCall("CreateCompatibleDC", "ptr", 0, "ptr")
VarSetCapacity(bi, 40, 0)
, NumPut(      40, bi,  0,   "uint")
, NumPut(   width, bi,  4,   "uint")
, NumPut( -height, bi,  8,    "int")
, NumPut(       1, bi, 12, "ushort")
, NumPut(      32, bi, 14, "ushort")
hbm := DllCall("CreateDIBSection", "ptr", hdc, "ptr", &bi, "uint", 0, "ptr*", pBits:=0, "ptr", 0, "uint", 0, "ptr")
obm := DllCall("SelectObject", "ptr", hdc, "ptr", hbm, "ptr")
VarSetCapacity(Rect, 16, 0)
, NumPut(  width, Rect,  8,   "uint")
, NumPut( height, Rect, 12,   "uint")
VarSetCapacity(BitmapData, 16+2*A_PtrSize, 0)
, NumPut(     width, BitmapData,  0,   "uint")
, NumPut(    height, BitmapData,  4,   "uint")
, NumPut( 4 * width, BitmapData,  8,    "int")
, NumPut(   0xE200B, BitmapData, 12,    "int")
, NumPut(     pBits, BitmapData, 16,    "ptr")
DllCall("gdiplus\GdipBitmapLockBits"
,    "ptr", pBitmap
,    "ptr", &Rect
,   "uint", 5
,    "int", 0xE200B
,    "ptr", &BitmapData)
DllCall("gdiplus\GdipBitmapUnlockBits", "ptr", pBitmap, "ptr", &BitmapData)
DllCall("SelectObject", "ptr", hdc, "ptr", obm)
DllCall("DeleteDC",     "ptr", hdc)
return hbm
}
Gdip_CreateBitmapFromHICON(hIcon)
{
pBitmap := 0
DllCall("gdiplus\GdipCreateBitmapFromHICON", A_PtrSize ? "UPtr" : "UInt", hIcon, A_PtrSize ? "UPtr*" : "uint*", pBitmap)
return pBitmap
}
Gdip_CreateHICONFromBitmap(pBitmap)
{
hIcon := 0
DllCall("gdiplus\GdipCreateHICONFromBitmap", A_PtrSize ? "UPtr" : "UInt", pBitmap, A_PtrSize ? "UPtr*" : "uint*", hIcon)
return hIcon
}
Gdip_CreateBitmap(Width, Height, Format:=0x26200A)
{
pBitmap := 0
DllCall("gdiplus\GdipCreateBitmapFromScan0", "int", Width, "int", Height, "int", 0, "int", Format, A_PtrSize ? "UPtr" : "UInt", 0, A_PtrSize ? "UPtr*" : "uint*", pBitmap)
Return pBitmap
}
Gdip_CreateBitmapFromClipboard()
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
if !DllCall("IsClipboardFormatAvailable", "uint", 8)
return -2
if !DllCall("OpenClipboard", Ptr, 0)
return -1
hBitmap := DllCall("GetClipboardData", "uint", 2, Ptr)
if !DllCall("CloseClipboard")
return -5
if !hBitmap
return -3
if !pBitmap := Gdip_CreateBitmapFromHBITMAP(hBitmap)
return -4
DeleteObject(hBitmap)
return pBitmap
}
Gdip_SetBitmapToClipboard(pBitmap)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
off1 := A_PtrSize = 8 ? 52 : 44, off2 := A_PtrSize = 8 ? 32 : 24
hBitmap := Gdip_CreateHBITMAPFromBitmap(pBitmap)
DllCall("GetObject", Ptr, hBitmap, "int", VarSetCapacity(oi, A_PtrSize = 8 ? 104 : 84, 0), Ptr, &oi)
hdib := DllCall("GlobalAlloc", "uint", 2, Ptr, 40+NumGet(oi, off1, "UInt"), Ptr)
pdib := DllCall("GlobalLock", Ptr, hdib, Ptr)
DllCall("RtlMoveMemory", Ptr, pdib, Ptr, &oi+off2, Ptr, 40)
DllCall("RtlMoveMemory", Ptr, pdib+40, Ptr, NumGet(oi, off2 - (A_PtrSize ? A_PtrSize : 4), Ptr), Ptr, NumGet(oi, off1, "UInt"))
DllCall("GlobalUnlock", Ptr, hdib)
DllCall("DeleteObject", Ptr, hBitmap)
DllCall("OpenClipboard", Ptr, 0)
DllCall("EmptyClipboard")
DllCall("SetClipboardData", "uint", 8, Ptr, hdib)
DllCall("CloseClipboard")
}
Gdip_CloneBitmapArea(pBitmap, x, y, w, h, Format:=0x26200A)
{
pBitmapDest := 0
DllCall("gdiplus\GdipCloneBitmapArea"
, "float", x
, "float", y
, "float", w
, "float", h
, "int", Format
, A_PtrSize ? "UPtr" : "UInt", pBitmap
, A_PtrSize ? "UPtr*" : "UInt*", pBitmapDest)
return pBitmapDest
}
Gdip_CreatePen(ARGB, w)
{
pPen := 0
DllCall("gdiplus\GdipCreatePen1", "UInt", ARGB, "float", w, "int", 2, A_PtrSize ? "UPtr*" : "UInt*", pPen)
return pPen
}
Gdip_CreatePenFromBrush(pBrush, w)
{
pPen := 0
DllCall("gdiplus\GdipCreatePen2", A_PtrSize ? "UPtr" : "UInt", pBrush, "float", w, "int", 2, A_PtrSize ? "UPtr*" : "UInt*", pPen)
return pPen
}
Gdip_BrushCreateSolid(ARGB:=0xff000000)
{
pBrush := 0
DllCall("gdiplus\GdipCreateSolidFill", "UInt", ARGB, A_PtrSize ? "UPtr*" : "UInt*", pBrush)
return pBrush
}
Gdip_BrushCreateHatch(ARGBfront, ARGBback, HatchStyle:=0)
{
pBrush := 0
DllCall("gdiplus\GdipCreateHatchBrush", "int", HatchStyle, "UInt", ARGBfront, "UInt", ARGBback, A_PtrSize ? "UPtr*" : "UInt*", pBrush)
return pBrush
}
Gdip_CreateTextureBrush(pBitmap, WrapMode:=1, x:=0, y:=0, w:="", h:="")
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
, PtrA := A_PtrSize ? "UPtr*" : "UInt*"
pBrush := 0
if !(w && h)
DllCall("gdiplus\GdipCreateTexture", Ptr, pBitmap, "int", WrapMode, PtrA, pBrush)
else
DllCall("gdiplus\GdipCreateTexture2", Ptr, pBitmap, "int", WrapMode, "float", x, "float", y, "float", w, "float", h, PtrA, pBrush)
return pBrush
}
Gdip_CreateLineBrush(x1, y1, x2, y2, ARGB1, ARGB2, WrapMode:=1)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
LGpBrush := 0
CreatePointF(PointF1, x1, y1), CreatePointF(PointF2, x2, y2)
DllCall("gdiplus\GdipCreateLineBrush", Ptr, &PointF1, Ptr, &PointF2, "Uint", ARGB1, "Uint", ARGB2, "int", WrapMode, A_PtrSize ? "UPtr*" : "UInt*", LGpBrush)
return LGpBrush
}
Gdip_CreateLineBrushFromRect(x, y, w, h, ARGB1, ARGB2, LinearGradientMode:=1, WrapMode:=1)
{
CreateRectF(RectF, x, y, w, h)
LGpBrush := 0
DllCall("gdiplus\GdipCreateLineBrushFromRect", A_PtrSize ? "UPtr" : "UInt", &RectF, "int", ARGB1, "int", ARGB2, "int", LinearGradientMode, "int", WrapMode, A_PtrSize ? "UPtr*" : "UInt*", LGpBrush)
return LGpBrush
}
Gdip_CloneBrush(pBrush)
{
pBrushClone := 0
DllCall("gdiplus\GdipCloneBrush", A_PtrSize ? "UPtr" : "UInt", pBrush, A_PtrSize ? "UPtr*" : "UInt*", pBrushClone)
return pBrushClone
}
Gdip_DeletePen(pPen)
{
return DllCall("gdiplus\GdipDeletePen", A_PtrSize ? "UPtr" : "UInt", pPen)
}
Gdip_DeleteBrush(pBrush)
{
return DllCall("gdiplus\GdipDeleteBrush", A_PtrSize ? "UPtr" : "UInt", pBrush)
}
Gdip_DisposeImage(pBitmap)
{
return DllCall("gdiplus\GdipDisposeImage", A_PtrSize ? "UPtr" : "UInt", pBitmap)
}
Gdip_DeleteGraphics(pGraphics)
{
return DllCall("gdiplus\GdipDeleteGraphics", A_PtrSize ? "UPtr" : "UInt", pGraphics)
}
Gdip_DisposeImageAttributes(ImageAttr)
{
return DllCall("gdiplus\GdipDisposeImageAttributes", A_PtrSize ? "UPtr" : "UInt", ImageAttr)
}
Gdip_DeleteFont(hFont)
{
return DllCall("gdiplus\GdipDeleteFont", A_PtrSize ? "UPtr" : "UInt", hFont)
}
Gdip_DeleteStringFormat(hFormat)
{
return DllCall("gdiplus\GdipDeleteStringFormat", A_PtrSize ? "UPtr" : "UInt", hFormat)
}
Gdip_DeleteFontFamily(hFamily)
{
return DllCall("gdiplus\GdipDeleteFontFamily", A_PtrSize ? "UPtr" : "UInt", hFamily)
}
Gdip_DeleteMatrix(Matrix)
{
return DllCall("gdiplus\GdipDeleteMatrix", A_PtrSize ? "UPtr" : "UInt", Matrix)
}
Gdip_TextToGraphics(pGraphics, Text, Options, Font:="Arial", Width:="", Height:="", Measure:=0)
{
IWidth := Width, IHeight:= Height
pattern_opts := (A_AhkVersion < "2") ? "iO)" : "i)"
RegExMatch(Options, pattern_opts "X([\-\d\.]+)(p*)", xpos)
RegExMatch(Options, pattern_opts "Y([\-\d\.]+)(p*)", ypos)
RegExMatch(Options, pattern_opts "W([\-\d\.]+)(p*)", Width)
RegExMatch(Options, pattern_opts "H([\-\d\.]+)(p*)", Height)
RegExMatch(Options, pattern_opts "C(?!(entre|enter))([a-f\d]+)", Colour)
RegExMatch(Options, pattern_opts "Top|Up|Bottom|Down|vCentre|vCenter", vPos)
RegExMatch(Options, pattern_opts "NoWrap", NoWrap)
RegExMatch(Options, pattern_opts "R(\d)", Rendering)
RegExMatch(Options, pattern_opts "S(\d+)(p*)", Size)
if Colour && IsInteger(Colour[2]) && !Gdip_DeleteBrush(Gdip_CloneBrush(Colour[2]))
PassBrush := 1, pBrush := Colour[2]
if !(IWidth && IHeight) && ((xpos && xpos[2]) || (ypos && ypos[2]) || (Width && Width[2]) || (Height && Height[2]) || (Size && Size[2]))
return -1
Style := 0, Styles := "Regular|Bold|Italic|BoldItalic|Underline|Strikeout"
For eachStyle, valStyle in StrSplit( Styles, "|" )
{
if RegExMatch(Options, "\b" valStyle)
Style |= (valStyle != "StrikeOut") ? (A_Index-1) : 8
}
Align := 0, Alignments := "Near|Left|Centre|Center|Far|Right"
For eachAlignment, valAlignment in StrSplit( Alignments, "|" )
{
if RegExMatch(Options, "\b" valAlignment)
Align |= A_Index//2.1
}
xpos := (xpos && (xpos[1] != "")) ? xpos[2] ? IWidth*(xpos[1]/100) : xpos[1] : 0
ypos := (ypos && (ypos[1] != "")) ? ypos[2] ? IHeight*(ypos[1]/100) : ypos[1] : 0
Width := (Width && Width[1]) ? Width[2] ? IWidth*(Width[1]/100) : Width[1] : IWidth
Height := (Height && Height[1]) ? Height[2] ? IHeight*(Height[1]/100) : Height[1] : IHeight
if !PassBrush
Colour := "0x" (Colour && Colour[2] ? Colour[2] : "ff000000")
Rendering := (Rendering && (Rendering[1] >= 0) && (Rendering[1] <= 5)) ? Rendering[1] : 4
Size := (Size && (Size[1] > 0)) ? Size[2] ? IHeight*(Size[1]/100) : Size[1] : 12
hFamily := Gdip_FontFamilyCreate(Font)
hFont := Gdip_FontCreate(hFamily, Size, Style)
FormatStyle := NoWrap ? 0x4000 | 0x1000 : 0x4000
hFormat := Gdip_StringFormatCreate(FormatStyle)
pBrush := PassBrush ? pBrush : Gdip_BrushCreateSolid(Colour)
if !(hFamily && hFont && hFormat && pBrush && pGraphics)
return !pGraphics ? -2 : !hFamily ? -3 : !hFont ? -4 : !hFormat ? -5 : !pBrush ? -6 : 0
CreateRectF(RC, xpos, ypos, Width, Height)
Gdip_SetStringFormatAlign(hFormat, Align)
Gdip_SetTextRenderingHint(pGraphics, Rendering)
ReturnRC := Gdip_MeasureString(pGraphics, Text, hFont, hFormat, RC)
if vPos
{
ReturnRC := StrSplit(ReturnRC, "|")
if (vPos[0] = "vCentre") || (vPos[0] = "vCenter")
ypos += (Height-ReturnRC[4])//2
else if (vPos[0] = "Top") || (vPos[0] = "Up")
ypos := 0
else if (vPos[0] = "Bottom") || (vPos[0] = "Down")
ypos := Height-ReturnRC[4]
CreateRectF(RC, xpos, ypos, Width, ReturnRC[4])
ReturnRC := Gdip_MeasureString(pGraphics, Text, hFont, hFormat, RC)
}
if !Measure
_E := Gdip_DrawString(pGraphics, Text, hFont, hFormat, pBrush, RC)
if !PassBrush
Gdip_DeleteBrush(pBrush)
Gdip_DeleteStringFormat(hFormat)
Gdip_DeleteFont(hFont)
Gdip_DeleteFontFamily(hFamily)
return _E ? _E : ReturnRC
}
Gdip_DrawString(pGraphics, sString, hFont, hFormat, pBrush, ByRef RectF)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
if (!A_IsUnicode)
{
nSize := DllCall("MultiByteToWideChar", "uint", 0, "uint", 0, Ptr, &sString, "int", -1, Ptr, 0, "int", 0)
VarSetCapacity(wString, nSize*2)
DllCall("MultiByteToWideChar", "uint", 0, "uint", 0, Ptr, &sString, "int", -1, Ptr, &wString, "int", nSize)
}
return DllCall("gdiplus\GdipDrawString"
, Ptr, pGraphics
, Ptr, A_IsUnicode ? &sString : &wString
, "int", -1
, Ptr, hFont
, Ptr, &RectF
, Ptr, hFormat
, Ptr, pBrush)
}
Gdip_MeasureString(pGraphics, sString, hFont, hFormat, ByRef RectF)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
VarSetCapacity(RC, 16)
if !A_IsUnicode
{
nSize := DllCall("MultiByteToWideChar", "uint", 0, "uint", 0, Ptr, &sString, "int", -1, "uint", 0, "int", 0)
VarSetCapacity(wString, nSize*2)
DllCall("MultiByteToWideChar", "uint", 0, "uint", 0, Ptr, &sString, "int", -1, Ptr, &wString, "int", nSize)
}
Chars := 0
Lines := 0
DllCall("gdiplus\GdipMeasureString"
, Ptr, pGraphics
, Ptr, A_IsUnicode ? &sString : &wString
, "int", -1
, Ptr, hFont
, Ptr, &RectF
, Ptr, hFormat
, Ptr, &RC
, "uint*", Chars
, "uint*", Lines)
return &RC ? NumGet(RC, 0, "float") "|" NumGet(RC, 4, "float") "|" NumGet(RC, 8, "float") "|" NumGet(RC, 12, "float") "|" Chars "|" Lines : 0
}
Gdip_SetStringFormatAlign(hFormat, Align)
{
return DllCall("gdiplus\GdipSetStringFormatAlign", A_PtrSize ? "UPtr" : "UInt", hFormat, "int", Align)
}
Gdip_StringFormatCreate(Format:=0, Lang:=0)
{
hFormat := 0
DllCall("gdiplus\GdipCreateStringFormat", "int", Format, "int", Lang, A_PtrSize ? "UPtr*" : "UInt*", hFormat)
return hFormat
}
Gdip_FontCreate(hFamily, Size, Style:=0)
{
hFont := 0
DllCall("gdiplus\GdipCreateFont", A_PtrSize ? "UPtr" : "UInt", hFamily, "float", Size, "int", Style, "int", 0, A_PtrSize ? "UPtr*" : "UInt*", hFont)
return hFont
}
Gdip_FontFamilyCreate(Font)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
if (!A_IsUnicode)
{
nSize := DllCall("MultiByteToWideChar", "uint", 0, "uint", 0, Ptr, &Font, "int", -1, "uint", 0, "int", 0)
VarSetCapacity(wFont, nSize*2)
DllCall("MultiByteToWideChar", "uint", 0, "uint", 0, Ptr, &Font, "int", -1, Ptr, &wFont, "int", nSize)
}
hFamily := 0
DllCall("gdiplus\GdipCreateFontFamilyFromName"
, Ptr, A_IsUnicode ? &Font : &wFont
, "uint", 0
, A_PtrSize ? "UPtr*" : "UInt*", hFamily)
return hFamily
}
Gdip_CreateAffineMatrix(m11, m12, m21, m22, x, y)
{
Matrix := 0
DllCall("gdiplus\GdipCreateMatrix2", "float", m11, "float", m12, "float", m21, "float", m22, "float", x, "float", y, A_PtrSize ? "UPtr*" : "UInt*", Matrix)
return Matrix
}
Gdip_CreateMatrix()
{
Matrix := 0
DllCall("gdiplus\GdipCreateMatrix", A_PtrSize ? "UPtr*" : "UInt*", Matrix)
return Matrix
}
Gdip_CreatePath(BrushMode:=0)
{
pPath := 0
DllCall("gdiplus\GdipCreatePath", "int", BrushMode, A_PtrSize ? "UPtr*" : "UInt*", pPath)
return pPath
}
Gdip_AddPathEllipse(pPath, x, y, w, h)
{
return DllCall("gdiplus\GdipAddPathEllipse", A_PtrSize ? "UPtr" : "UInt", pPath, "float", x, "float", y, "float", w, "float", h)
}
Gdip_AddPathPolygon(pPath, Points)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
Points := StrSplit(Points, "|")
PointsLength := (A_AhkVersion < "2") ? Points.Length() : Points.Length
VarSetCapacity(PointF, 8*PointsLength)
for eachPoint, Point in Points
{
Coord := StrSplit(Point, ",")
NumPut(Coord[1], PointF, 8*(A_Index-1), "float"), NumPut(Coord[2], PointF, (8*(A_Index-1))+4, "float")
}
return DllCall("gdiplus\GdipAddPathPolygon", Ptr, pPath, Ptr, &PointF, "int", PointsLength)
}
Gdip_DeletePath(pPath)
{
return DllCall("gdiplus\GdipDeletePath", A_PtrSize ? "UPtr" : "UInt", pPath)
}
Gdip_SetTextRenderingHint(pGraphics, RenderingHint)
{
return DllCall("gdiplus\GdipSetTextRenderingHint", A_PtrSize ? "UPtr" : "UInt", pGraphics, "int", RenderingHint)
}
Gdip_SetInterpolationMode(pGraphics, InterpolationMode)
{
return DllCall("gdiplus\GdipSetInterpolationMode", A_PtrSize ? "UPtr" : "UInt", pGraphics, "int", InterpolationMode)
}
Gdip_SetSmoothingMode(pGraphics, SmoothingMode)
{
return DllCall("gdiplus\GdipSetSmoothingMode", A_PtrSize ? "UPtr" : "UInt", pGraphics, "int", SmoothingMode)
}
Gdip_SetCompositingMode(pGraphics, CompositingMode:=0)
{
return DllCall("gdiplus\GdipSetCompositingMode", A_PtrSize ? "UPtr" : "UInt", pGraphics, "int", CompositingMode)
}
Gdip_Startup()
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
pToken := 0
if !DllCall("GetModuleHandle", "str", "gdiplus", Ptr)
DllCall("LoadLibrary", "str", "gdiplus")
VarSetCapacity(si, A_PtrSize = 8 ? 24 : 16, 0), si := Chr(1)
DllCall("gdiplus\GdiplusStartup", A_PtrSize ? "UPtr*" : "uint*", pToken, Ptr, &si, Ptr, 0)
return pToken
}
Gdip_Shutdown(pToken)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
DllCall("gdiplus\GdiplusShutdown", Ptr, pToken)
if hModule := DllCall("GetModuleHandle", "str", "gdiplus", Ptr)
DllCall("FreeLibrary", Ptr, hModule)
return 0
}
Gdip_RotateWorldTransform(pGraphics, Angle, MatrixOrder:=0)
{
return DllCall("gdiplus\GdipRotateWorldTransform", A_PtrSize ? "UPtr" : "UInt", pGraphics, "float", Angle, "int", MatrixOrder)
}
Gdip_ScaleWorldTransform(pGraphics, x, y, MatrixOrder:=0)
{
return DllCall("gdiplus\GdipScaleWorldTransform", A_PtrSize ? "UPtr" : "UInt", pGraphics, "float", x, "float", y, "int", MatrixOrder)
}
Gdip_TranslateWorldTransform(pGraphics, x, y, MatrixOrder:=0)
{
return DllCall("gdiplus\GdipTranslateWorldTransform", A_PtrSize ? "UPtr" : "UInt", pGraphics, "float", x, "float", y, "int", MatrixOrder)
}
Gdip_ResetWorldTransform(pGraphics)
{
return DllCall("gdiplus\GdipResetWorldTransform", A_PtrSize ? "UPtr" : "UInt", pGraphics)
}
Gdip_GetRotatedTranslation(Width, Height, Angle, ByRef xTranslation, ByRef yTranslation)
{
pi := 3.14159, TAngle := Angle*(pi/180)
Bound := (Angle >= 0) ? Mod(Angle, 360) : 360-Mod(-Angle, -360)
if ((Bound >= 0) && (Bound <= 90))
xTranslation := Height*Sin(TAngle), yTranslation := 0
else if ((Bound > 90) && (Bound <= 180))
xTranslation := (Height*Sin(TAngle))-(Width*Cos(TAngle)), yTranslation := -Height*Cos(TAngle)
else if ((Bound > 180) && (Bound <= 270))
xTranslation := -(Width*Cos(TAngle)), yTranslation := -(Height*Cos(TAngle))-(Width*Sin(TAngle))
else if ((Bound > 270) && (Bound <= 360))
xTranslation := 0, yTranslation := -Width*Sin(TAngle)
}
Gdip_GetRotatedDimensions(Width, Height, Angle, ByRef RWidth, ByRef RHeight)
{
pi := 3.14159, TAngle := Angle*(pi/180)
if !(Width && Height)
return -1
RWidth := Ceil(Abs(Width*Cos(TAngle))+Abs(Height*Sin(TAngle)))
RHeight := Ceil(Abs(Width*Sin(TAngle))+Abs(Height*Cos(Tangle)))
}
Gdip_ImageRotateFlip(pBitmap, RotateFlipType:=1)
{
return DllCall("gdiplus\GdipImageRotateFlip", A_PtrSize ? "UPtr" : "UInt", pBitmap, "int", RotateFlipType)
}
Gdip_SetClipRect(pGraphics, x, y, w, h, CombineMode:=0)
{
return DllCall("gdiplus\GdipSetClipRect",  A_PtrSize ? "UPtr" : "UInt", pGraphics, "float", x, "float", y, "float", w, "float", h, "int", CombineMode)
}
Gdip_SetClipPath(pGraphics, pPath, CombineMode:=0)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
return DllCall("gdiplus\GdipSetClipPath", Ptr, pGraphics, Ptr, pPath, "int", CombineMode)
}
Gdip_ResetClip(pGraphics)
{
return DllCall("gdiplus\GdipResetClip", A_PtrSize ? "UPtr" : "UInt", pGraphics)
}
Gdip_GetClipRegion(pGraphics)
{
Region := Gdip_CreateRegion()
DllCall("gdiplus\GdipGetClip", A_PtrSize ? "UPtr" : "UInt", pGraphics, "UInt", Region)
return Region
}
Gdip_SetClipRegion(pGraphics, Region, CombineMode:=0)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
return DllCall("gdiplus\GdipSetClipRegion", Ptr, pGraphics, Ptr, Region, "int", CombineMode)
}
Gdip_CreateRegion()
{
Region := 0
DllCall("gdiplus\GdipCreateRegion", "UInt*", Region)
return Region
}
Gdip_DeleteRegion(Region)
{
return DllCall("gdiplus\GdipDeleteRegion", A_PtrSize ? "UPtr" : "UInt", Region)
}
Gdip_LockBits(pBitmap, x, y, w, h, ByRef Stride, ByRef Scan0, ByRef BitmapData, LockMode := 3, PixelFormat := 0x26200a)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
CreateRect(_Rect, x, y, w, h)
VarSetCapacity(BitmapData, 16+2*(A_PtrSize ? A_PtrSize : 4), 0)
_E := DllCall("Gdiplus\GdipBitmapLockBits", Ptr, pBitmap, Ptr, &_Rect, "uint", LockMode, "int", PixelFormat, Ptr, &BitmapData)
Stride := NumGet(BitmapData, 8, "Int")
Scan0 := NumGet(BitmapData, 16, Ptr)
return _E
}
Gdip_UnlockBits(pBitmap, ByRef BitmapData)
{
Ptr := A_PtrSize ? "UPtr" : "UInt"
return DllCall("Gdiplus\GdipBitmapUnlockBits", Ptr, pBitmap, Ptr, &BitmapData)
}
Gdip_SetLockBitPixel(ARGB, Scan0, x, y, Stride)
{
Numput(ARGB, Scan0+0, (x*4)+(y*Stride), "UInt")
}
Gdip_GetLockBitPixel(Scan0, x, y, Stride)
{
return NumGet(Scan0+0, (x*4)+(y*Stride), "UInt")
}
Gdip_PixelateBitmap(pBitmap, ByRef pBitmapOut, BlockSize)
{
static PixelateBitmap
Ptr := A_PtrSize ? "UPtr" : "UInt"
if (!PixelateBitmap)
{
if A_PtrSize != 8
MCode_PixelateBitmap := "
		(LTrim Join
		558BEC83EC3C8B4514538B5D1C99F7FB56578BC88955EC894DD885C90F8E830200008B451099F7FB8365DC008365E000894DC88955F08945E833FF897DD4
		397DE80F8E160100008BCB0FAFCB894DCC33C08945F88945FC89451C8945143BD87E608B45088D50028BC82BCA8BF02BF2418945F48B45E02955F4894DC4
		8D0CB80FAFCB03CA895DD08BD1895DE40FB64416030145140FB60201451C8B45C40FB604100145FC8B45F40FB604020145F883C204FF4DE475D6034D18FF
		4DD075C98B4DCC8B451499F7F98945148B451C99F7F989451C8B45FC99F7F98945FC8B45F899F7F98945F885DB7E648B450C8D50028BC82BCA83C103894D
		C48BC82BCA41894DF48B4DD48945E48B45E02955E48D0C880FAFCB03CA895DD08BD18BF38A45148B7DC48804178A451C8B7DF488028A45FC8804178A45F8
		8B7DE488043A83C2044E75DA034D18FF4DD075CE8B4DCC8B7DD447897DD43B7DE80F8CF2FEFFFF837DF0000F842C01000033C08945F88945FC89451C8945
		148945E43BD87E65837DF0007E578B4DDC034DE48B75E80FAF4D180FAFF38B45088D500203CA8D0CB18BF08BF88945F48B45F02BF22BFA2955F48945CC0F
		B6440E030145140FB60101451C0FB6440F010145FC8B45F40FB604010145F883C104FF4DCC75D8FF45E4395DE47C9B8B4DF00FAFCB85C9740B8B451499F7
		F9894514EB048365140033F63BCE740B8B451C99F7F989451CEB0389751C3BCE740B8B45FC99F7F98945FCEB038975FC3BCE740B8B45F899F7F98945F8EB
		038975F88975E43BDE7E5A837DF0007E4C8B4DDC034DE48B75E80FAF4D180FAFF38B450C8D500203CA8D0CB18BF08BF82BF22BFA2BC28B55F08955CC8A55
		1488540E038A551C88118A55FC88540F018A55F888140183C104FF4DCC75DFFF45E4395DE47CA68B45180145E0015DDCFF4DC80F8594FDFFFF8B451099F7
		FB8955F08945E885C00F8E450100008B45EC0FAFC38365DC008945D48B45E88945CC33C08945F88945FC89451C8945148945103945EC7E6085DB7E518B4D
		D88B45080FAFCB034D108D50020FAF4D18034DDC8BF08BF88945F403CA2BF22BFA2955F4895DC80FB6440E030145140FB60101451C0FB6440F010145FC8B
		45F40FB604080145F883C104FF4DC875D8FF45108B45103B45EC7CA08B4DD485C9740B8B451499F7F9894514EB048365140033F63BCE740B8B451C99F7F9
		89451CEB0389751C3BCE740B8B45FC99F7F98945FCEB038975FC3BCE740B8B45F899F7F98945F8EB038975F88975103975EC7E5585DB7E468B4DD88B450C
		0FAFCB034D108D50020FAF4D18034DDC8BF08BF803CA2BF22BFA2BC2895DC88A551488540E038A551C88118A55FC88540F018A55F888140183C104FF4DC8
		75DFFF45108B45103B45EC7CAB8BC3C1E0020145DCFF4DCC0F85CEFEFFFF8B4DEC33C08945F88945FC89451C8945148945103BC87E6C3945F07E5C8B4DD8
		8B75E80FAFCB034D100FAFF30FAF4D188B45088D500203CA8D0CB18BF08BF88945F48B45F02BF22BFA2955F48945C80FB6440E030145140FB60101451C0F
		B6440F010145FC8B45F40FB604010145F883C104FF4DC875D833C0FF45108B4DEC394D107C940FAF4DF03BC874068B451499F7F933F68945143BCE740B8B
		451C99F7F989451CEB0389751C3BCE740B8B45FC99F7F98945FCEB038975FC3BCE740B8B45F899F7F98945F8EB038975F88975083975EC7E63EB0233F639
		75F07E4F8B4DD88B75E80FAFCB034D080FAFF30FAF4D188B450C8D500203CA8D0CB18BF08BF82BF22BFA2BC28B55F08955108A551488540E038A551C8811
		8A55FC88540F018A55F888140883C104FF4D1075DFFF45088B45083B45EC7C9F5F5E33C05BC9C21800
)"
else
MCode_PixelateBitmap := "
		(LTrim Join
		4489442418488954241048894C24085355565741544155415641574883EC28418BC1448B8C24980000004C8BDA99488BD941F7F9448BD0448BFA8954240C
		448994248800000085C00F8E9D020000418BC04533E4458BF299448924244C8954241041F7F933C9898C24980000008BEA89542404448BE889442408EB05
		4C8B5C24784585ED0F8E1A010000458BF1418BFD48897C2418450FAFF14533D233F633ED4533E44533ED4585C97E5B4C63BC2490000000418D040A410FAF
		C148984C8D441802498BD9498BD04D8BD90FB642010FB64AFF4403E80FB60203E90FB64AFE4883C2044403E003F149FFCB75DE4D03C748FFCB75D0488B7C
		24188B8C24980000004C8B5C2478418BC59941F7FE448BE8418BC49941F7FE448BE08BC59941F7FE8BE88BC69941F7FE8BF04585C97E4048639C24900000
		004103CA4D8BC1410FAFC94863C94A8D541902488BCA498BC144886901448821408869FF408871FE4883C10448FFC875E84803D349FFC875DA8B8C249800
		0000488B5C24704C8B5C24784183C20448FFCF48897C24180F850AFFFFFF8B6C2404448B2424448B6C24084C8B74241085ED0F840A01000033FF33DB4533
		DB4533D24533C04585C97E53488B74247085ED7E42438D0C04418BC50FAF8C2490000000410FAFC18D04814863C8488D5431028BCD0FB642014403D00FB6
		024883C2044403D80FB642FB03D80FB642FA03F848FFC975DE41FFC0453BC17CB28BCD410FAFC985C9740A418BC299F7F98BF0EB0233F685C9740B418BC3
		99F7F9448BD8EB034533DB85C9740A8BC399F7F9448BD0EB034533D285C9740A8BC799F7F9448BC0EB034533C033D24585C97E4D4C8B74247885ED7E3841
		8D0C14418BC50FAF8C2490000000410FAFC18D04814863C84A8D4431028BCD40887001448818448850FF448840FE4883C00448FFC975E8FFC2413BD17CBD
		4C8B7424108B8C2498000000038C2490000000488B5C24704503E149FFCE44892424898C24980000004C897424100F859EFDFFFF448B7C240C448B842480
		000000418BC09941F7F98BE8448BEA89942498000000896C240C85C00F8E3B010000448BAC2488000000418BCF448BF5410FAFC9898C248000000033FF33
		ED33F64533DB4533D24533C04585FF7E524585C97E40418BC5410FAFC14103C00FAF84249000000003C74898488D541802498BD90FB642014403D00FB602
		4883C2044403D80FB642FB03F00FB642FA03E848FFCB75DE488B5C247041FFC0453BC77CAE85C9740B418BC299F7F9448BE0EB034533E485C9740A418BC3
		99F7F98BD8EB0233DB85C9740A8BC699F7F9448BD8EB034533DB85C9740A8BC599F7F9448BD0EB034533D24533C04585FF7E4E488B4C24784585C97E3541
		8BC5410FAFC14103C00FAF84249000000003C74898488D540802498BC144886201881A44885AFF448852FE4883C20448FFC875E941FFC0453BC77CBE8B8C
		2480000000488B5C2470418BC1C1E00203F849FFCE0F85ECFEFFFF448BAC24980000008B6C240C448BA4248800000033FF33DB4533DB4533D24533C04585
		FF7E5A488B7424704585ED7E48418BCC8BC5410FAFC94103C80FAF8C2490000000410FAFC18D04814863C8488D543102418BCD0FB642014403D00FB60248
		83C2044403D80FB642FB03D80FB642FA03F848FFC975DE41FFC0453BC77CAB418BCF410FAFCD85C9740A418BC299F7F98BF0EB0233F685C9740B418BC399
		F7F9448BD8EB034533DB85C9740A8BC399F7F9448BD0EB034533D285C9740A8BC799F7F9448BC0EB034533C033D24585FF7E4E4585ED7E42418BCC8BC541
		0FAFC903CA0FAF8C2490000000410FAFC18D04814863C8488B442478488D440102418BCD40887001448818448850FF448840FE4883C00448FFC975E8FFC2
		413BD77CB233C04883C428415F415E415D415C5F5E5D5BC3
)"
VarSetCapacity(PixelateBitmap, StrLen(MCode_PixelateBitmap)//2)
nCount := StrLen(MCode_PixelateBitmap)//2
N := (A_AhkVersion < 2) ? nCount : "nCount"
Loop %N%
NumPut("0x" SubStr(MCode_PixelateBitmap, (2*A_Index)-1, 2), PixelateBitmap, A_Index-1, "UChar")
DllCall("VirtualProtect", Ptr, &PixelateBitmap, Ptr, VarSetCapacity(PixelateBitmap), "uint", 0x40, A_PtrSize ? "UPtr*" : "UInt*", 0)
}
Gdip_GetImageDimensions(pBitmap, Width, Height)
if (Width != Gdip_GetImageWidth(pBitmapOut) || Height != Gdip_GetImageHeight(pBitmapOut))
return -1
if (BlockSize > Width || BlockSize > Height)
return -2
E1 := Gdip_LockBits(pBitmap, 0, 0, Width, Height, Stride1, Scan01, BitmapData1)
E2 := Gdip_LockBits(pBitmapOut, 0, 0, Width, Height, Stride2, Scan02, BitmapData2)
if (E1 || E2)
return -3
DllCall(&PixelateBitmap, Ptr, Scan01, Ptr, Scan02, "int", Width, "int", Height, "int", Stride1, "int", BlockSize)
Gdip_UnlockBits(pBitmap, BitmapData1), Gdip_UnlockBits(pBitmapOut, BitmapData2)
return 0
}
Gdip_ToARGB(A, R, G, B)
{
return (A << 24) | (R << 16) | (G << 8) | B
}
Gdip_FromARGB(ARGB, ByRef A, ByRef R, ByRef G, ByRef B)
{
A := (0xff000000 & ARGB) >> 24
R := (0x00ff0000 & ARGB) >> 16
G := (0x0000ff00 & ARGB) >> 8
B := 0x000000ff & ARGB
}
Gdip_AFromARGB(ARGB)
{
return (0xff000000 & ARGB) >> 24
}
Gdip_RFromARGB(ARGB)
{
return (0x00ff0000 & ARGB) >> 16
}
Gdip_GFromARGB(ARGB)
{
return (0x0000ff00 & ARGB) >> 8
}
Gdip_BFromARGB(ARGB)
{
return 0x000000ff & ARGB
}
StrGetB(Address, Length:=-1, Encoding:=0)
{
if !IsInteger(Length)
Encoding := Length,  Length := -1
if (Address+0 < 1024)
return
if (Encoding = "UTF-16")
Encoding := 1200
else if (Encoding = "UTF-8")
Encoding := 65001
else if SubStr(Encoding,1,2)="CP"
Encoding := SubStr(Encoding,3)
if !Encoding
{
if (Length == -1)
Length := DllCall("lstrlen", "uint", Address)
VarSetCapacity(String, Length)
DllCall("lstrcpyn", "str", String, "uint", Address, "int", Length + 1)
}
else if (Encoding = 1200)
{
char_count := DllCall("WideCharToMultiByte", "uint", 0, "uint", 0x400, "uint", Address, "int", Length, "uint", 0, "uint", 0, "uint", 0, "uint", 0)
VarSetCapacity(String, char_count)
DllCall("WideCharToMultiByte", "uint", 0, "uint", 0x400, "uint", Address, "int", Length, "str", String, "int", char_count, "uint", 0, "uint", 0)
}
else if IsInteger(Encoding)
{
char_count := DllCall("MultiByteToWideChar", "uint", Encoding, "uint", 0, "uint", Address, "int", Length, "uint", 0, "int", 0)
VarSetCapacity(String, char_count * 2)
char_count := DllCall("MultiByteToWideChar", "uint", Encoding, "uint", 0, "uint", Address, "int", Length, "uint", &String, "int", char_count * 2)
String := StrGetB(&String, char_count, 1200)
}
return String
}
IsInteger(Var) {
Static Integer := "Integer"
If Var Is Integer
Return True
Return False
}
IsNumber(Var) {
Static number := "number"
If Var Is number
Return True
Return False
}
GetMonitorCount()
{
Monitors := MDMF_Enum()
for k,v in Monitors
count := A_Index
return count
}
GetMonitorInfo(MonitorNum)
{
Monitors := MDMF_Enum()
for k,v in Monitors
if (v.Num = MonitorNum)
return v
}
GetPrimaryMonitor()
{
Monitors := MDMF_Enum()
for k,v in Monitors
If (v.Primary)
return v.Num
}
MDMF_Enum(HMON := "") {
Static CallbackFunc := Func(A_AhkVersion < "2" ? "RegisterCallback" : "CallbackCreate")
Static EnumProc := CallbackFunc.Call("MDMF_EnumProc")
Static Obj := (A_AhkVersion < "2") ? "Object" : "Map"
Static Monitors := {}
If (HMON = "")
{
Monitors := %Obj%("TotalCount", 0)
If !DllCall("User32.dll\EnumDisplayMonitors", "Ptr", 0, "Ptr", 0, "Ptr", EnumProc, "Ptr", &Monitors, "Int")
Return False
}
Return (HMON = "") ? Monitors : Monitors.HasKey(HMON) ? Monitors[HMON] : False
}
MDMF_EnumProc(HMON, HDC, PRECT, ObjectAddr) {
Monitors := Object(ObjectAddr)
Monitors[HMON] := MDMF_GetInfo(HMON)
Monitors["TotalCount"]++
If (Monitors[HMON].Primary)
Monitors["Primary"] := HMON
Return True
}
MDMF_FromHWND(HWND, Flag := 0) {
Return DllCall("User32.dll\MonitorFromWindow", "Ptr", HWND, "UInt", Flag, "Ptr")
}
MDMF_FromPoint(ByRef X := "", ByRef Y := "", Flag := 0) {
If (X = "") || (Y = "") {
VarSetCapacity(PT, 8, 0)
DllCall("User32.dll\GetCursorPos", "Ptr", &PT, "Int")
If (X = "")
X := NumGet(PT, 0, "Int")
If (Y = "")
Y := NumGet(PT, 4, "Int")
}
Return DllCall("User32.dll\MonitorFromPoint", "Int64", (X & 0xFFFFFFFF) | (Y << 32), "UInt", Flag, "Ptr")
}
MDMF_FromRect(X, Y, W, H, Flag := 0) {
VarSetCapacity(RC, 16, 0)
NumPut(X, RC, 0, "Int"), NumPut(Y, RC, 4, "Int"), NumPut(X + W, RC, 8, "Int"), NumPut(Y + H, RC, 12, "Int")
Return DllCall("User32.dll\MonitorFromRect", "Ptr", &RC, "UInt", Flag, "Ptr")
}
MDMF_GetInfo(HMON) {
NumPut(VarSetCapacity(MIEX, 40 + (32 << !!A_IsUnicode)), MIEX, 0, "UInt")
If DllCall("User32.dll\GetMonitorInfo", "Ptr", HMON, "Ptr", &MIEX, "Int")
Return {Name:      (Name := StrGet(&MIEX + 40, 32))
, Num:       RegExReplace(Name, ".*(\d+)$", "$1")
, Left:      NumGet(MIEX, 4, "Int")
, Top:       NumGet(MIEX, 8, "Int")
, Right:     NumGet(MIEX, 12, "Int")
, Bottom:    NumGet(MIEX, 16, "Int")
, WALeft:    NumGet(MIEX, 20, "Int")
, WATop:     NumGet(MIEX, 24, "Int")
, WARight:   NumGet(MIEX, 28, "Int")
, WABottom:  NumGet(MIEX, 32, "Int")
, Primary:   NumGet(MIEX, 36, "UInt")}
Return False
}
WinGetRect( hwnd, ByRef x:="", ByRef y:="", ByRef w:="", ByRef h:="" ) {
Ptr := A_PtrSize ? "UPtr" : "UInt"
CreateRect(winRect, 0, 0, 0, 0)
DllCall( "GetWindowRect", Ptr, hwnd, Ptr, &winRect )
x := NumGet(winRect,  0, "UInt")
y := NumGet(winRect,  4, "UInt")
w := NumGet(winRect,  8, "UInt") - x
h := NumGet(winRect, 12, "UInt") - y
}
SetBatchLines, -1
SetWinDelay, 0
SetKeyDelay, 0
SetControlDelay, 0
DXGI_Initialize() {
startTime := A_TickCount
static init := false
if (init)
return true
if !WinCapture_Load()
return false
hr := DllCall("wincapture\dxgi_start", "uint")
if (hr != 0) {
MsgBox DXGI初始化失败
return false
}
if (checkResult := CheckSystemRequirements())
{
MsgBox % "系统不满足要求：`n`n" checkResult
return false
}
if !WinCapture_Load()
return false
endTime := A_TickCount
initTime := endTime - startTime
init := true
return true
}
CheckSystemRequirements() {
errors := []
if (A_OSVersion ~= "WIN_(2000|XP|2003)") {
errors.Push("需要 Windows Vista 或更高版本（当前系统：" A_OSVersion ")")
}
if !FileExist("wincapture.dll") {
errors.Push("wincapture.dll 未找到，请放置到脚本目录")
}
if !FileExist(A_WinDir "\System32\d3d11.dll") {
errors.Push("需要 DirectX 11 运行时（d3d11.dll 未找到）")
}
if !FileExist(A_WinDir "\System32\dxgi.dll") {
errors.Push("系统缺少 DXGI 核心组件（dxgi.dll 未找到）")
}
try {
if (GetWDDMVersion() < 1.2) {
errors.Push("需要 WDDM 1.2 或更高版本的显卡驱动")
}
}
return errors.Length() ? StrJoin(errors, "`n• ") : ""
}
StrJoin(arr, delimiter) {
result := ""
for k, v in arr {
result .= (A_Index = 1 ? "• " : delimiter) v
}
return result
}
GetErrorMessage(hr) {
static FORMAT_MESSAGE_FROM_SYSTEM := 0x00001000
VarSetCapacity(msg, 512)
length := DllCall("FormatMessage"
, "UInt", FORMAT_MESSAGE_FROM_SYSTEM
, "Ptr", 0
, "UInt", hr
, "UInt", 0
, "Str", msg
, "UInt", 256
, "Ptr", 0)
if (length = 0)
return "未知错误 (0x" Format("{:X}", hr) ")"
return Trim(msg) " (0x" Format("{:X}", hr) ")"
}
GetWDDMVersion() {
RegRead, driverVersion, HKLM\SYSTEM\CurrentControlSet\Control\Class\{4d36e968-e325-11ce-bfc1-08002be10318}\0000, DriverVersion
if !driverVersion
return 0
versionParts := StrSplit(driverVersion, ".", " ")
return (versionParts[1] * 1.0) + (versionParts[2] / 10)
}
WinCapture_Load() {
static loaded := false
if !loaded {
hModule := DllCall("LoadLibrary", "str", "wincapture.dll", "ptr")
if !hModule {
MsgBox 无法加载wincapture.dll
return false
}
loaded := true
}
return true
}
dxgi_getpic(retryTimes:=3)
{
static init := false
if (!init)
{
if !WinCapture_Load()
return 0
if (DllCall("wincapture\dxgi_start", "uint"))
{
MsgBox, 4096,, DXGI模式没有初始化成功！
return 0
}
init := true
}
MouseGetPos, , , WinID
WinGetPos, winX, winY, winW, winH, ahk_id %WinID%
VarSetCapacity(box, 16)
NumPut(winX, box, 0, "int")
NumPut(winY, box, 4, "int")
NumPut(winX + winW, box, 8, "int")
NumPut(winY + winH, box, 12, "int")
Loop, %retryTimes%
{
hr := DllCall("wincapture\dxgi_captureAndSave", "ptr*", pdata := 0, "ptr", &box, "uint", 0, "uint")
if (hr = 0 && pdata)
break
if (hr = 0x887A0026 || hr = 0x887A0021)
{
DllCall("wincapture\dxgi_restart")
Sleep 10
}
else
Sleep 5
}
if (hr != 0 or pdata = 0)
return 0
pBits := NumGet(pdata+0, "ptr")
Width := NumGet(pdata+A_PtrSize+4, "uint")
Height := NumGet(pdata+A_PtrSize+8, "uint")
Pitch := NumGet(pdata+A_PtrSize, "uint")
hBitmap := CreateDIBSectionFromBits(pBits, Width, Height, Pitch)
if (!hBitmap)
return 0
pBitmap := Gdip_CreateBitmapFromHBITMAP(hBitmap)
DeleteObject(hBitmap)
return pBitmap
}
gdip_getpic()
{
Gdip_DisposeImage(pbitmap)
MouseGetPos, , , WinID
WinGetPos, winX, winY, winW, winH, ahk_id %WinID%
hdc := DllCall("GetDC", "ptr", WinID)
hdcMem := DllCall("CreateCompatibleDC", "ptr", hdc)
hBitmap := DllCall("CreateCompatibleBitmap", "ptr", hdc, "int", winW, "int", winH)
DllCall("SelectObject", "ptr", hdcMem, "ptr", hBitmap)
DllCall("PrintWindow", "ptr", WinID, "ptr", hdcMem, "uint", 0x2)
pBitmap := Gdip_CreateBitmapFromHBITMAP(hBitmap)
DllCall("DeleteObject", "ptr", hBitmap)
DllCall("DeleteDC", "ptr", hdcMem)
DllCall("ReleaseDC", "ptr", WinID, "ptr", hdc)
return pBitmap
}
wgc_getpic() {
activeHwnd := WinExist("A")
if !DllCall("IsWindow", "ptr", activeHwnd) {
return 0
}
static old_hwnd := 0, wgc := 0
if (old_hwnd != activeHwnd) {
if !WinCapture_Load()
return 0
if (wgc)
DllCall("wincapture\wgc_free", "ptr", wgc)
wgc := DllCall("wincapture\wgc_init_window", "ptr", activeHwnd, "int", 1, "ptr")
if (!wgc) {
return 0
}
old_hwnd := activeHwnd
}
VarSetCapacity(rect, 16, 0)
DllCall("GetClientRect", "ptr", activeHwnd, "ptr", &rect)
w := NumGet(rect, 8, "int")
h := NumGet(rect, 12, "int")
x := 0, y := 0
VarSetCapacity(box, 16)
NumPut(x, box, 0, "int")
NumPut(y, box, 4, "int")
NumPut(x+w, box, 8, "int")
NumPut(y+h, box, 12, "int")
VarSetCapacity(data,32,0), pdata:=&data
hr := DllCall("wincapture\wgc_capture", "ptr",wgc, "ptr",&box, "ptr",pdata)
if (hr!=0)
return 0
pBits   := NumGet(pdata+0, "ptr")
Pitch   := NumGet(pdata+A_PtrSize, "uint")
Width   := NumGet(pdata+A_PtrSize+4, "uint")
Height  := NumGet(pdata+A_PtrSize+8, "uint")
hBitmap := CreateDIBSectionFromBits(pBits, Width, Height, Pitch)
if !hBitmap
return 0
pBitmap := Gdip_CreateBitmapFromHBITMAP(hBitmap)
DeleteObject(hBitmap)
return pBitmap
}
CreateDIBSectionFromBits(pBits, w, h, pitch)
{
VarSetCapacity(bi, 40, 0)
NumPut(40,  bi,  0, "uint")
NumPut(w,   bi,  4, "int")
NumPut(-h,  bi,  8, "int")
NumPut(1,   bi, 12, "ushort")
NumPut(32,  bi, 14, "ushort")
NumPut(0,   bi, 16, "uint")
hDC := DllCall("GetDC", "ptr", 0, "ptr")
hBitmap := DllCall("CreateDIBSection", "ptr", hDC, "ptr", &bi, "uint", 0, "ptr*", ppvBits := 0, "ptr", 0, "uint", 0, "ptr")
DllCall("ReleaseDC", "ptr", 0, "ptr", hDC)
if !hBitmap
return 0
if (pitch = w*4) {
DllCall("RtlMoveMemory", "ptr", ppvBits, "ptr", pBits, "uptr", h*pitch)
} else {
Loop, % h
DllCall("RtlMoveMemory"
, "ptr", ppvBits + (A_Index-1)*w*4
, "ptr", pBits + (A_Index-1)*pitch
, "uptr", w*4)
}
return hBitmap
}
SetBatchLines, -1
SetWinDelay, 0
SetKeyDelay, 0
SetControlDelay, 0
SysGet, ScreenWidth, 0
SysGet, ScreenHeight, 1
OnExit("MyExitFunc")
ScriptDir := A_ScriptDir
NewFolder := ScriptDir . "\config"
FileCreateDir, %NewFolder%
iniFilePath := ScriptDir . "\config\bdconfig1.ini"
FileExist := FileExist(ScriptDir . "\IbInputSimulator.dll")
if(!FileExist)
{
msgbox "缺少IbInputSimulator.dll，需放在当前文件同一根目录下`n如出现缺失，请检查文件后缀名称.dll是否被修改"
return
}
FileExist := FileExist(ScriptDir . "\wincapture.dll")
if(!FileExist)
{
msgbox "缺少wincapture.dll，需放在当前文件同一根目录下`n如出现缺失，请检查文件后缀名称.dll是否被修改"
return
}
if !pToken := Gdip_Startup()
{
MsgBox, GDI+ 初始化失败!
ExitApp
}
global findmode
IniRead, findmode, %iniFilePath%, Hotkeys, findmode
if(findmode=="" or findmode=="ERROR")
{
findmode:="GDIP"
}
updatatime := "20250626010004"
IniRead, updata, %iniFilePath%, Hotkeys, updata
if(updata=="" or updata=="ERROR")
{
IniWrite, 0, %iniFilePath%, Hotkeys, updata
}
if(updata<updatatime)
{
msgbox ,0626更新内容`n注意：近期发现闲鱼有不少二次贩卖免费版软件，谨防上当受骗。`n`n新功能：加入了游戏中按下回车后，自动停止现在的所有循环，并弹出聊天框，再次激活飞龙热键需要启停一次。`n卡飞龙的启动热键只会作用于游戏，游戏外依然可以正常使用。`n`n1，优化大锤暴风雷2的判断实际，f3剩余cd如果大于1.5秒，则会使用雷2替代普攻。`n`n2，添加奶机械循环，可自定义调整技能先后顺序，实现不同的爆炸效果。`n`n3，修改了新的ui界面，方便快速查找职业循环。
IniWrite, %updatatime%, %iniFilePath%, Hotkeys, updata
}
zoom := 5
base_size := 20
captureW := base_size, captureH := base_size
displayW := captureW * zoom
displayH := captureH * zoom
infoH := captureW * zoom
crossColor := 0xFFFF0000
windowsw:=displayW+180
windowsh:=displayH-10
kaishi:
optionList := "----<幻术>----|匕枪杖野外蜃楼|野外步枪时空| |----<守护>----|斧锤野外破峰|三剑野外破峰|枪火野外破峰|枪聚野外破峰| |----<游侠>----|长弓野外狂兽|剑锤野外狂兽|双法杖野外狂兽|双大剑野外狂兽|斧号野外狂兽| |----<死灵>----|双剑杖野外夺魂|节火杖野外灾厄|双剑杖野外先驱|枪火野外先驱| |----<工程>----|步枪野外丁真| |----<元素>----|大锤野外元晶|剑号野外元晶|枪号野外元晶|节号野外元晶| |----<魂武>----|野外直伤龙魂|直伤极速预告|症状极速预告| |----<盗贼>----|双枪急速神枪手|双枪野外神枪手|七星野外神枪手| |"
optionList2:="----<幻术>----|大剑直伤时空|大剑直伤灵刃| |----<战士>----|匕斧破法| |----<守护>----|长弓大剑猎龙| |----<游侠>----|斧锤直伤魂兽| |----<死灵>----|直伤大剑夺魂| |----<工程>----|步枪野外丁真|大锤直伤机械|剑枪直伤全息| |----<元素>----|大锤直伤暴风|节匕直伤元晶|节匕直伤元晶2|长矛直伤元晶| |----<魂武>----|裁决| |----<盗贼>----|步枪神枪手|"
optionList3:="----<幻术>----|匕首症状灵刃| |----<战士>----| |----<守护>----|症状输出破峰| |----<游侠>----|症状德鲁伊| |----<死灵>----|症状先驱|枪火症状灾厄| |----<工程>----| |----<元素>----|节匕症状暴风| |----<魂武>----|长矛症状龙魂| |----<盗贼>----| |"
optionList4:="----<幻术>----|步枪奶时空| |----<战士>----|奶急速狂战| |----<守护>----|辅助奶燃火| |----<游侠>----| |----<死灵>----|治疗敏捷灾厄| |----<工程>----|奶机械| |----<元素>----|剑号急速元晶|节聚敏捷暴风| |----<魂武>----|直伤敏捷龙魂|奶预告| |----<盗贼>----|症状敏缚影|"
Gui +OwnDialogs
global iniFilePath,alltime,bdlist,bdFilePath,mousemode,skilltext
IniWrite, "free", %iniFilePath%, "本脚本免费使用如遇卖钱皆为骗子", by:
IniWrite, 0, %iniFilePath%, Hotkeys, waitkey
IniRead, mousemode, %iniFilePath%, mousemode, mousemode
IniRead, bdlist, %iniFilePath%, bdlist, bdlist
if(bdlist=="" or bdlist=="ERROR")
{
msgbox 第一次加载，按下F10后，选择任意一个bd保存
bdlist:="大剑直伤时空"
IniWrite, 大剑直伤时空, %iniFilePath% , bdlist, bdlist
}
types := "alltime" . bdlist
IniRead, alltime, %iniFilePath%, %types%, alltime
if(alltime=="ERROR" or alltime=="")
{
alltime:=0.95
}
bdFilePath := ScriptDir . "\config\" . bdlist . ".ini"
IniRead, qishou, %bdFilePath%, 循环设置, 起手
IniRead, xunhuan, %bdFilePath%, 循环设置, 主循环
qishou_loop := StrSplit(qishou, ",")
xunhuan_loop := StrSplit(xunhuan, ",")
IniRead, TabNum, %iniFilePath%, bdlist, tabvalue
if(TabNum=="ERROR" or TabNum!="野外" && TabNum!="直伤" && TabNum!="症状" && TabNum!="辅助" )
{
TabNum:=""
}
IniRead, weapon1, %bdFilePath%, 切武器分类, 武器组1
IniRead, weapon2, %bdFilePath%, 切武器分类, 武器组2
regwp1 := "^(" RegExReplace(weapon1, ",", "|") ")$"
regwp2 := "^(" RegExReplace(weapon2, ",", "|") ")$"
IniDelete, %bdFilePath%, 切武器分类, 切武器增加延迟
IniRead, qwq1, %bdFilePath%, 切武器分类, 武器1切武器2
IniRead, qwq2, %bdFilePath%, 切武器分类, 武器2切武器1
IniRead, qwqwait, %bdFilePath%, 切武器分类, 切武器延迟
if(qwqwait=="" or qwqwait="ERROR")
{
IniWrite,120, %bdFilePath%,切武器分类,切武器延迟
qwqwait:=120
}
qwq1_value := StrSplit(qwq1, ",")
qwq2_value := StrSplit(qwq2, ",")
IniRead, pomie, %bdFilePath%, 破蔑分类, 蔑视技能
pomie_value:= StrSplit(pomie, ",")
flyini:=ScriptDir . "\config\fly.ini"
IniRead, upkey, %flyini%, Hotkeys, upkey
IniRead, dnkey, %flyini%, Hotkeys, dnkey
IniRead, flykey, %flyini%, Hotkeys, flykey
IniRead, flywait, %flyini%, Hotkeys, flywait
if(flykey=="ERROR" or flykey=="")
{
flykey:="+f"
}
if(flywait=="ERROR" or flywait=="")
{
flywait:=10
}
if(mousemode=="Razer")
{
IbSendInit("Razer")
}
else
if(mousemode=="Logitech")
{
IbSendInit("Logitech")
}
Else
{
IbSendInit("SendInput")
}
keys := ["wp2", "wp3","wp4", "wp5", "wp22", "wp32", "wp42", "wp52"]
types:="wpcolor" .  bdlist
for index, key in keys
{
IniRead, %key%x, %bdFilePath%, %types%, %key%x
IniRead, %key%y, %bdFilePath%, %types%, %key%y
IniRead, %key%color, %bdFilePath%, %types%, %key%color
}
keys := ["twp2", "twp3","twp4", "twp5", "twp22", "twp32", "twp42", "twp52"]
types:="twpcolor" .  bdlist
for index, key in keys
{
IniRead, %key%x, %bdFilePath%, %types%, %key%x
IniRead, %key%y, %bdFilePath%, %types%, %key%y
IniRead, %key%color, %bdFilePath%, %types%, %key%color
}
keys := ["wm2", "wm3", "wm4", "wm5" , "wm22", "wm32", "wm42","wm52"]
types:="wmcolor" .  bdlist
for index, key in keys
{
IniRead, %key%x, %bdFilePath%, %types%, %key%x
IniRead, %key%y, %bdFilePath%, %types%, %key%y
IniRead, %key%color, %bdFilePath%, %types%, %key%color
}
keys := ["fire2", "fire3","fire4", "fire5", "fire22", "fire32","fire42", "fire52"]
types:="firecolor" .  bdlist
for index, key in keys
{
IniRead, %key%x, %bdFilePath%, %types%, %key%x
IniRead, %key%y, %bdFilePath%, %types%, %key%y
IniRead, %key%color, %bdFilePath%, %types%, %key%color
}
keys := ["water2", "water3","water4", "water5", "water22", "water32","water42", "water52"]
types:="watercolor" .  bdlist
for index, key in keys
{
IniRead, %key%x, %bdFilePath%, %types%, %key%x
IniRead, %key%y, %bdFilePath%, %types%, %key%y
IniRead, %key%color, %bdFilePath%, %types%, %key%color
}
keys := ["flash2", "flash3","flash4", "flash5", "flash22", "flash32","flash42", "flash52"]
types:="flashcolor" .  bdlist
for index, key in keys
{
IniRead, %key%x, %bdFilePath%, %types%, %key%x
IniRead, %key%y, %bdFilePath%, %types%, %key%y
IniRead, %key%color, %bdFilePath%, %types%, %key%color
}
keys := ["stone2", "stone3","stone4", "stone5", "stone22", "stone32","stone42", "stone52"]
types:="stonecolor" .  bdlist
for index, key in keys
{
IniRead, %key%x, %bdFilePath%, %types%, %key%x
IniRead, %key%y, %bdFilePath%, %types%, %key%y
IniRead, %key%color, %bdFilePath%, %types%, %key%color
}
keys := ["ty1","ty2", "ty3","ty4","ty5", "ty52","ty12","ty22", "ty31","ty32","ty33","ty41","ty42","ty43","ty51","ty52" , "ty21","ty22","ty23","ty24","ty25"]
types:="tycolor" .  bdlist
for index, key in keys
{
IniRead, %key%x, %bdFilePath%, %types%, %key%x
IniRead, %key%y, %bdFilePath%, %types%, %key%y
IniRead, %key%color, %bdFilePath%, %types%, %key%color
}
keys := ["f1","f2", "f3","f4", "f5", "f6","fr","f51","f52","f11","f12","f14","f22", "f32","f42","f13","f23","f43","f31","f41","f32","f34" ,"f21","f24","f61"]
types:="fcolor" .  bdlist
for index, key in keys
{
IniRead, %key%x, %bdFilePath%, %types%, %key%x
IniRead, %key%y, %bdFilePath%, %types%, %key%y
IniRead, %key%color, %bdFilePath%, %types%, %key%color
}
keys := ["qwq"]
types:="other"
for index, key in keys
{
IniRead, %key%x, %bdFilePath%, %types%, %key%x
IniRead, %key%y, %bdFilePath%, %types%, %key%y
IniRead, %key%color, %bdFilePath%, %types%, %key%color
}
keys := ["mieshi"]
types:="mieshi"
for index, key in keys
{
IniRead, %key%x, %iniFilePath%, %types%, %key%x
IniRead, %key%y, %iniFilePath%, %types%, %key%y
IniRead, %key%color, %iniFilePath%, %types%, %key%color
}
keys := ["tooltip"]
types:="Hotkeys"
for index, key in keys
{
IniRead, %key%x, %iniFilePath%, %types%, %key%x
IniRead, %key%y, %iniFilePath%, %types%, %key%y
}
IniRead, winname, %iniFilePath%, %types%, winname
sleepParams := Object()
cdParams := Object()
if(bdlist=="大剑直伤时空")
{
sleepParams["wp2sleep"] := 430
sleepParams["wp3sleep"] := 430
sleepParams["wp4sleep"] := 660
sleepParams["wp5sleep"] := 880
sleepParams["twp2sleep"] := 710
sleepParams["twp3sleep"] := 310
sleepParams["twp4sleep"] := 540
sleepParams["twp5sleep"] := 640
sleepParams["ty1sleep"] := 800
sleepParams["ty2sleep"] := 780
sleepParams["ty3sleep"] := 800
sleepParams["ty4sleep"] := 800
sleepParams["ty41sleep"] := 800
sleepParams["ty42sleep"] := 50
sleepParams["ty5sleep"] := 1050
sleepParams["f1sleep"] := 0
sleepParams["f2sleep"] := 0
sleepParams["f3sleep"] := 0
sleepParams["f4sleep"] := 0
sleepParams["f5sleep"] := 0
cdParams["wp2cd"] := 5000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 12000
cdParams["wp5cd"] := 12000
cdParams["twp2cd"] := 5000
cdParams["twp3cd"] := 10000
cdParams["twp4cd"] := 12000
cdParams["twp5cd"] := 25000
cdParams["ty1cd"] := 30000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 25000
cdParams["ty4cd"] := 10000
cdParams["ty5cd"] := 60000
cdParams["f1cd"] := 12000
cdParams["f2cd"] := 30000
cdParams["f3cd"] := 38000
cdParams["f4cd"] := 50000
cdParams["f5cd"] := 105000
bdtext := "[&DQcBHQoZKD4jDyMPjwGPAQQTfwFpAYIBsxLtEgAAAAAAAAAAAAAAAAAAAAADMgAvAFoAAA==]"
wptext:= "大剑直伤时空bd已复制，可进游戏粘贴`n武器：匕首+剑、大剑`n装备：(鞋子、背部、项链、饰品x2、戒指x1)刺客，其他狂战`n或者自行搭配100暴击装备，输出存在少许差异`n符文古物：超级渗透符文+潜行者古物`n法印：超级武勇+超级冲击`n食物扳手：芦笋牛排+超级磨刀石`n灌注：30点精准 60点威力"
}
if(bdlist=="野外步枪时空")
{
sleepParams["wp2sleep"] := 480
sleepParams["wp3sleep"] := 850
sleepParams["wp4sleep"] := 1200
sleepParams["wp5sleep"] := 500
sleepParams["twp2sleep"] := 50
sleepParams["twp3sleep"] := 950
sleepParams["twp4sleep"] := 50
sleepParams["twp5sleep"] := 600
sleepParams["ty1sleep"] := 1000
sleepParams["ty2sleep"] := 1240
sleepParams["ty3sleep"] := 50
sleepParams["ty4sleep"] := 1000
sleepParams["ty42sleep"] := 50
sleepParams["ty5sleep"] := 1030
sleepParams["f1sleep"] := 0
sleepParams["f2sleep"] := 0
sleepParams["f3sleep"] := 0
sleepParams["f4sleep"] := 0
sleepParams["f5sleep"] := 0
cdParams["wp2cd"] := 5000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 20000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 5000
cdParams["twp3cd"] := 10000
cdParams["twp4cd"] := 12000
cdParams["twp5cd"] := 25000
cdParams["ty1cd"] := 30000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 25000
cdParams["ty4cd"] := 10000
cdParams["ty5cd"] := 60000
cdParams["f1cd"] := 12000
cdParams["f2cd"] := 30000
cdParams["f3cd"] := 38000
cdParams["f4cd"] := 50000
cdParams["f5cd"] := 105000
bdtext := "[&DQctPhgeKD4jDwAABBMAAIMBAACBAQAAvAEAAAAAAAAAAAAAAAAAAAAAAAACWQBVAAA=]"
wptext:= "野外步枪时空bd已复制，可进游戏粘贴`n武器：步枪，法杖`n装备：天界套`n符文古物：超级折磨、超级陷阱，时空术士古物`n法印：步枪：超级折磨、超级迅敏 法杖：超级弱点、超级慷慨`n食物扳手：症状食物、蛋糕`n灌注：90点症状"
}
if(bdlist=="步枪奶时空")
{
sleepParams["wp2sleep"] := 0
sleepParams["wp3sleep"] := 0
sleepParams["wp4sleep"] := 0
sleepParams["wp5sleep"] := 0
sleepParams["twp2sleep"] := 480
sleepParams["twp3sleep"] := 580
sleepParams["twp4sleep"] := 880
sleepParams["twp5sleep"] := 560
sleepParams["ty1sleep"] := 390
sleepParams["ty2sleep"] := 480
sleepParams["ty3sleep"] := 800
sleepParams["ty4sleep"] := 750
sleepParams["ty41sleep"] := 500
sleepParams["ty5sleep"] := 1030
sleepParams["f1sleep"] := 10
sleepParams["f2sleep"] := 10
sleepParams["f3sleep"] := 10
sleepParams["f4sleep"] := 10
sleepParams["f5sleep"] := 500
cdParams["wp2cd"] := 5000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 0
cdParams["wp5cd"] := 12000
cdParams["twp2cd"] := 5000
cdParams["twp3cd"] := 10000
cdParams["twp4cd"] := 12000
cdParams["twp5cd"] := 25000
cdParams["ty1cd"] := 30000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 20000
cdParams["ty4cd"] := 20000
cdParams["ty5cd"] := 60000
cdParams["f1cd"] := 12000
cdParams["f2cd"] := 17000
cdParams["f3cd"] := 25000
cdParams["f4cd"] := 42000
cdParams["f5cd"] := 25000
bdtext := "[&DQcXLy06KC/wEiMPagFqAc8SggGHEoYBvAG8AQAAAAAAAAAAAAAAAAAAAAAAAA==]"
wptext:= "步枪奶时空bd已复制，可进游戏粘贴`n武器：步枪、法杖，团本可只装备步枪`n装备：全套吟游诗人`n如极速时间不够，可以更换部分装备猎兔犬`n符文古物：超级流水符文 or 超级僧侣符文，德维娜古物`n法印：超级瘫痪、超级转移`n食物扳手：美味饭团、日常蛋糕`n灌注：90点治疗"
}
if(bdlist=="匕首症状灵刃")
{
sleepParams["wp2sleep"] := 440
sleepParams["wp3sleep"] := 440
sleepParams["wp4sleep"] := 700
sleepParams["wp5sleep"] := 880
sleepParams["twp2sleep"] := 0
sleepParams["twp3sleep"] := 0
sleepParams["twp4sleep"] := 0
sleepParams["twp5sleep"] := 500
sleepParams["ty1sleep"] := 780
sleepParams["ty2sleep"] := 0
sleepParams["ty3sleep"] := 0
sleepParams["ty4sleep"] := 0
sleepParams["ty5sleep"] := 1
sleepParams["f1sleep"] := 600
sleepParams["f2sleep"] := 400
sleepParams["f3sleep"] := 450
sleepParams["f4sleep"] := 0
sleepParams["f5sleep"] := 10
cdParams["wp2cd"] := 5000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 9500
cdParams["wp5cd"] := 12000
cdParams["twp2cd"] := 5000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 25000
cdParams["twp5cd"] := 20000
cdParams["ty1cd"] := 30000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 25000
cdParams["ty4cd"] := 10000
cdParams["ty5cd"] := 60000
cdParams["f1cd"] := 10000
cdParams["f2cd"] := 17000
cdParams["f3cd"] := 25000
cdParams["f4cd"] := 42000
cdParams["f5cd"] := 25000
bdtext := "[&DQcBHRgdQjsjDwAAgwEAAIEBAACCAQAA5RoAAAAAAAAAAAAAAAAAAAAAAAAAAA==]"
wptext:= "匕首症状灵刃bd已复制，可进游戏粘贴`n武器：匕首+剑、匕首+聚能器`n装备：(肩膀、手、鞋子、饰品x2、戒指x2、项链)暴怒者，其他毒蛇`n符文古物：超级蛇妖符文+望族古物`n法印：超级渴求+超级大地`n食物扳手：碗装豪华马铃薯大葱汤+剧毒聚能水晶`n灌注：20点症状伤害 60点精准 10点症状效果"
}
if(bdlist=="大剑直伤灵刃")
{
sleepParams["wp2sleep"] := 430
sleepParams["wp3sleep"] := 430
sleepParams["wp4sleep"] := 660
sleepParams["wp5sleep"] := 880
sleepParams["twp2sleep"] := 600
sleepParams["twp3sleep"] := 310
sleepParams["twp4sleep"] := 580
sleepParams["twp5sleep"] := 640
sleepParams["ty1sleep"] := 800
sleepParams["ty2sleep"] := 780
sleepParams["ty3sleep"] := 680
sleepParams["ty4sleep"] := 10
sleepParams["ty41sleep"] := 800
sleepParams["ty5sleep"] := 10
cdParams["wp2cd"] := 5000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 9000
cdParams["wp5cd"] := 12000
cdParams["twp2cd"] := 5000
cdParams["twp3cd"] := 10000
cdParams["twp4cd"] := 12000
cdParams["twp5cd"] := 25000
cdParams["ty1cd"] := 30000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 25000
cdParams["ty4cd"] := 10000
cdParams["ty5cd"] := 60000
cdParams["f1cd"] := 12000
cdParams["f2cd"] := 20000
cdParams["f3cd"] := 30000
cdParams["f4cd"] := 50000
cdParams["f5cd"] := 30000
bdtext := "[&DQcKGQEdQiojDyMPjwGPAd0afwFpAYIB5RrtEgAAAAAAAAAAAAAAAAAAAAADMgAvAFoAAA==]"
wptext:= "直伤灵刃bd已复制，可进游戏粘贴`n武器：匕首+剑、大剑`n装备：狂战+刺客混搭 100暴击`n符文古物：超级猎龙符文+潜行者古物`n法印：超级武勇+超级精确`n食物扳手：芫荽柠檬真空烹调肉排+超级磨刀石`n低成本食物：超级磨刀石+芦笋牛排`n`n灌注：20点精准 70点威力`n暴击不够裤子可换刺客"
}
if(bdlist=="匕斧破法")
{
sleepParams["wp2sleep"] := 830
sleepParams["wp3sleep"] := 320
sleepParams["wp4sleep"] := 480
sleepParams["wp5sleep"] := 2050
sleepParams["twp2sleep"] := 0
sleepParams["twp3sleep"] := 0
sleepParams["twp4sleep"] := 680
sleepParams["twp5sleep"] := 400
sleepParams["ty1sleep"] := 800
sleepParams["ty2sleep"] := 730
sleepParams["ty3sleep"] := 0
sleepParams["ty4sleep"] :=280
sleepParams["ty5sleep"] := 1
sleepParams["f1sleep"] := 830
sleepParams["f2sleep"] := 1
sleepParams["f3sleep"] := 1
sleepParams["f4sleep"] := 1
sleepParams["f5sleep"] := 1
cdParams["wp2cd"] := 5000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 12000
cdParams["wp5cd"] := 12000
cdParams["twp2cd"] := 5000
cdParams["twp3cd"] := 10000
cdParams["twp4cd"] := 12000
cdParams["twp5cd"] := 25000
cdParams["ty1cd"] := 30000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 20000
cdParams["ty4cd"] := 20000
cdParams["ty5cd"] := 60000
cdParams["f1cd"] := 12000
cdParams["f2cd"] := 30000
cdParams["f3cd"] := 38000
cdParams["f4cd"] := 50000
cdParams["f5cd"] := 10500
bdtext := "[&DQIEHyQ2PT1wAAAAogEAAKkAAACvAAAAnAAAAAAAAAAAAAAAAAAAAAAAAAADLwA1AAUAAA==]"
wptext:= "匕斧破法bd已复制，可进游戏粘贴`n武器：匕首+斧头、钉锤`n装备：狂战士\巨龙全套`n符文古物：超级学者符文+潜行者古物`n法印：超级武勇+超级空气`n食物扳手：芦笋牛排+超级磨刀石`n灌注：90点威力"
}
if(bdlist=="长弓大剑猎龙")
{
sleepParams["wp2sleep"] := 1500
sleepParams["wp3sleep"] := 680
sleepParams["wp4sleep"] := 630
sleepParams["wp5sleep"] := 750
sleepParams["twp2sleep"] := 680
sleepParams["twp3sleep"] := 680
sleepParams["twp4sleep"] := 400
sleepParams["twp5sleep"] := 860
sleepParams["ty1sleep"] := 750
sleepParams["ty2sleep"] := 950
sleepParams["ty3sleep"] := 600
sleepParams["ty4sleep"] :=450
sleepParams["ty5sleep"] := 450
sleepParams["f1sleep"] := 550
sleepParams["f2sleep"] := 1350
sleepParams["f3sleep"] := 400
sleepParams["f4sleep"] := 1
sleepParams["f5sleep"] := 1
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 8000
cdParams["wp4cd"] := 9000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 4000
cdParams["twp3cd"] := 10000
cdParams["twp4cd"] := 12000
cdParams["twp5cd"] := 20000
cdParams["ty1cd"] := 30000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 20000
cdParams["ty4cd"] := 20000
cdParams["ty5cd"] := 60000
cdParams["f1cd"] := 12000
cdParams["f2cd"] := 30000
cdParams["f3cd"] := 38000
cdParams["f4cd"] := 50000
cdParams["f5cd"] := 105000
bdtext := "[&DQEqOi41Gzu8EgMB/gB4AUgBBAGKEjEBtRKJEgAAAAAAAAAAAAAAAAAAAAACIwAyAAA=]"
wptext:= "猎龙bd已复制，可进游戏粘贴`n武器：长弓+大剑`n装备：头盔+戒指狂战，其他全部刺客（包括武器）`n符文古物：超级猎龙者符文+猎龙者古物`n法印：超级武勇+超级精确n食物扳手：芦笋牛排+超级磨刀石`n灌注：90点威力"
}
if(bdlist=="匕枪杖野外蜃楼")
{
sleepParams["wp2sleep"] := 440
sleepParams["wp3sleep"] := 640
sleepParams["wp4sleep"] := 540
sleepParams["wp5sleep"] := 900
sleepParams["twp2sleep"] := 50
sleepParams["twp3sleep"] := 880
sleepParams["twp4sleep"] := 50
sleepParams["twp5sleep"] := 480
sleepParams["ty1sleep"] := 800
sleepParams["ty2sleep"] := 760
sleepParams["ty3sleep"] := 0
sleepParams["ty4sleep"] :=900
sleepParams["ty5sleep"] := 1
sleepParams["f1sleep"] := 830
sleepParams["f2sleep"] := 20
sleepParams["f3sleep"] := 20
sleepParams["f4sleep"] := 1
sleepParams["f5sleep"] := 1
cdParams["wp2cd"] := 5000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 20000
cdParams["wp5cd"] := 25000
cdParams["twp2cd"] := 8000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 16000
cdParams["twp5cd"] := 20000
cdParams["ty1cd"] := 30000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 45000
cdParams["ty4cd"] := 60000
cdParams["ty5cd"] := 60000
cdParams["f1cd"] := 0
cdParams["f2cd"] := 17000
cdParams["f3cd"] := 25000
cdParams["f4cd"] := 25000
cdParams["f5cd"] := 25000
bdtext := "[&DQcYGi0+OzruFSMPBxYHFoEBgQGDAYMBRhe8AQAAAAAAAAAAAAAAAAAAAAADLwBmAFkAAA==]"
wptext:= "匕枪杖野外蜃楼bd已复制，可进游戏粘贴`n武器：匕首+火炬/法杖`n装备：全套天界，或者部分毒蛇/狂战士`n符文古物：超级陷阱师\超级蛇妖+碎层古物/努里斯古物`n法印：超级能量+超级大地`n食物扳手：蛋糕食物其他随意`n灌注：随意"
}
if(bdlist=="双剑杖野外夺魂")
{
sleepParams["wp2sleep"] := 390
sleepParams["wp3sleep"] := 760
sleepParams["wp4sleep"] := 640
sleepParams["wp5sleep"] := 680
sleepParams["twp2sleep"] := 670
sleepParams["twp3sleep"] := 580
sleepParams["twp4sleep"] := 560
sleepParams["twp5sleep"] := 520
sleepParams["wm2sleep"] := 1230
sleepParams["wm3sleep"] := 150
sleepParams["wm32sleep"] := 350
sleepParams["wm4sleep"] := 2270
sleepParams["wm5sleep"] := 1330
sleepParams["ty1sleep"] := 1080
sleepParams["ty2sleep"] := 1
sleepParams["ty3sleep"] := 1
sleepParams["ty4sleep"] := 1
sleepParams["ty5sleep"] := 1100
sleepParams["f1sleep"] := 10
sleepParams["f2sleep"] := 10
sleepParams["f3sleep"] := 10
sleepParams["f4sleep"] := 1
sleepParams["f5sleep"] := 10
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 10000
cdParams["wp4cd"] := 16000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 4000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 15000
cdParams["twp5cd"] := 18000
cdParams["ty1cd"] := 25000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 32000
cdParams["ty4cd"] := 30000
cdParams["ty5cd"] := 30000
bdtext := "[&DQg1GTIlIjYoDygP+gCZAQ8TdgHxEm8BAxOSAAAAAAAAAAAAAAAAAAAAAAACWgBZAAA=]"
wptext:= "双剑杖野外夺魂bd已复制，可进游戏粘贴`n武器：双剑、法杖`n装备：破击者 `n符文古物：超级猎龙\超级学者+萨奇洛斯`n法印：超级力量，超级武勇`n食物扳手：蛋糕、威能食物任意`n灌注：90威力"
}
if(bdlist=="节火杖野外灾厄")
{
sleepParams["wp2sleep"] := 880
sleepParams["wp3sleep"] := 600
sleepParams["wp4sleep"] := 630
sleepParams["wp5sleep"] := 680
sleepParams["twp2sleep"] := 710
sleepParams["twp3sleep"] := 850
sleepParams["twp4sleep"] := 480
sleepParams["twp5sleep"] := 510
sleepParams["ty1sleep"] := 1080
sleepParams["ty2sleep"] := 1
sleepParams["ty3sleep"] := 1
sleepParams["ty4sleep"] := 430
sleepParams["ty5sleep"] := 1040
sleepParams["ty52sleep"] := 2000
sleepParams["f1sleep"] := 710
sleepParams["f2sleep"] := 10
sleepParams["f3sleep"] := 10
sleepParams["f4sleep"] := 1
sleepParams["f5sleep"] := 10
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 10000
cdParams["wp4cd"] := 16000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 4000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 15000
cdParams["twp5cd"] := 18000
cdParams["ty1cd"] := 25000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 32000
cdParams["ty4cd"] := 30000
cdParams["ty5cd"] := 30000
bdtext := "[&DQgnPjIVPD0oDygP9QCZAW8BdgEhF28BlQCSAAAAAAAAAAAAAAAAAAAAAAADWQBWAGYAAA==]"
wptext:= "节火杖野外灾厄bd已复制，可进游戏粘贴`n武器：节杖+火炬、法杖`n装备：天界套、或天界部分混搭，以症状为主 `n符文古物：超级陷阱\超级蛇妖，阿奇姆\碎层古物`n法印：法杖：超级力量+高级迅敏，节杖：超级净化或其他+超级迅敏`n食物扳手：蛋糕\食物任意`n灌注：90症状"
}
if(bdlist=="枪火症状灾厄")
{
sleepParams["wp2sleep"] := 970
sleepParams["wp3sleep"] := 700
sleepParams["wp4sleep"] := 450
sleepParams["wp5sleep"] := 700
sleepParams["twp2sleep"] := 860
sleepParams["twp3sleep"] := 750
sleepParams["twp4sleep"] := 630
sleepParams["twp5sleep"] := 630
sleepParams["ty1sleep"] := 1080
sleepParams["ty12sleep"] := 500
sleepParams["ty2sleep"] := 880
sleepParams["ty3sleep"] := 1
sleepParams["ty32sleep"] := 1
sleepParams["ty4sleep"] := 880
sleepParams["ty5sleep"] := 910
sleepParams["f1sleep"] := 710
sleepParams["f2sleep"] := 10
sleepParams["f3sleep"] := 10
sleepParams["f4sleep"] := 1
sleepParams["f5sleep"] := 10
sleepParams["f52sleep"] := 10
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 16000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 10000
cdParams["twp3cd"] := 10000
cdParams["twp4cd"] := 15000
cdParams["twp5cd"] := 18000
cdParams["ty1cd"] := 25000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 32000
cdParams["ty4cd"] := 30000
cdParams["ty5cd"] := 30000
bdtext := "[&DQgnNjI1PCooDygPdQGZAW8BdgGAAG8BkgCSAAAAAAAAAAAAAAAAAAAAAAADVgBmADYAAA==]"
wptext:= "枪火症状灾厄bd已复制，可进游戏粘贴`n武器：节杖\手枪+火炬`n装备：毒蛇套`n符文古物：超级陷阱，阿奇姆\碎层古物`n法印：手枪节杖：超级渴求，火炬：超级折磨`n食物扳手：蛋糕\食物任意`n灌注：90症状"
}
if(bdlist=="治疗敏捷灾厄")
{
sleepParams["wp2sleep"] := 970
sleepParams["wp3sleep"] := 700
sleepParams["wp4sleep"] := 450
sleepParams["wp5sleep"] := 700
sleepParams["twp2sleep"] := 860
sleepParams["twp3sleep"] := 750
sleepParams["twp4sleep"] := 600
sleepParams["twp5sleep"] := 600
sleepParams["ty1sleep"] := 1080
sleepParams["ty12sleep"] := 500
sleepParams["ty2sleep"] := 880
sleepParams["ty3sleep"] := 1
sleepParams["ty32sleep"] := 1
sleepParams["ty4sleep"] := 880
sleepParams["ty5sleep"] := 910
sleepParams["f1sleep"] := 710
sleepParams["f2sleep"] := 10
sleepParams["f3sleep"] := 10
sleepParams["f4sleep"] := 1
sleepParams["f5sleep"] := 10
sleepParams["f52sleep"] := 10
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 16000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 8000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 15000
cdParams["twp5cd"] := 18000
cdParams["ty1cd"] := 25000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 32000
cdParams["ty4cd"] := 30000
cdParams["ty5cd"] := 30000
bdtext := "[&DQgTNTIdPD1+FgAAdAEAAG8BAAAhFwAAlQAAAAAAAAAAAAAAAAAAAAAAAAAENgBmAFYAZwAA]"
wptext:= "治疗敏捷灾厄bd已复制，可进游戏粘贴`n武器：节杖号角\手枪火炬`n装备：首饰：赠予者 其他：猎兔犬`n符文古物：超级僧侣，群聚`n法印：超级转移 超级专注`n食物扳手：蛋糕\食物任意`n灌注：90治疗"
}
if(bdlist=="双剑杖野外先驱")
{
sleepParams["wp2sleep"] := 400
sleepParams["wp3sleep"] := 750
sleepParams["wp4sleep"] := 630
sleepParams["wp5sleep"] := 660
sleepParams["twp2sleep"] := 480
sleepParams["twp3sleep"] := 480
sleepParams["twp4sleep"] := 480
sleepParams["twp5sleep"] := 530
sleepParams["wm2sleep"] := 910
sleepParams["wm3sleep"] := 800
sleepParams["wm4sleep"] := 840
sleepParams["wm5sleep"] := 800
sleepParams["ty1sleep"] := 680
sleepParams["ty2sleep"] := 680
sleepParams["ty3sleep"] := 1250
sleepParams["ty4sleep"] := 1250
sleepParams["ty42sleep"] := 10
sleepParams["ty5sleep"] := 1500
sleepParams["ty52sleep"] := 1500
sleepParams["f1sleep"] := 10
sleepParams["f2sleep"] := 10
sleepParams["f3sleep"] := 10
sleepParams["f4sleep"] := 1
sleepParams["f5sleep"] := 10
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 10000
cdParams["wp4cd"] := 16000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 4000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 15000
cdParams["twp5cd"] := 18000
cdParams["ty1cd"] := 25000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 32000
cdParams["ty4cd"] := 30000
cdParams["ty5cd"] := 30000
bdtext := "[&DQgnPTI1QC3nGigP7BqZAeQAdgFwAW8BlQCSAAAAAAAAAAAAAAAAAAAAAAACWQBaAAA=]"
wptext:= "双剑杖野外先驱bd已复制，可进游戏粘贴`n武器：`n双剑：超级力量、超级大地`n法杖：超级力量、超级大地`n`n装备：`n天界套或混搭，或者增益大于35，超级陷阱符文`n`n古物：魔像/碎层古物`n`n食物扳手：蛋糕、症状食物任意`n`n灌注：90症状`n`n本套bd利用多宝宝实现远程风筝，循环列表内无贴脸技能，可实现边走边打，参考之前元晶手枪流。"
}
if(bdlist=="枪火野外先驱")
{
sleepParams["wp2sleep"] := 830
sleepParams["wp3sleep"] := 600
sleepParams["wp4sleep"] := 450
sleepParams["wp5sleep"] := 600
sleepParams["twp2sleep"] := 480
sleepParams["twp3sleep"] := 480
sleepParams["twp4sleep"] := 480
sleepParams["twp5sleep"] := 530
sleepParams["wm2sleep"] := 910
sleepParams["wm3sleep"] := 840
sleepParams["wm4sleep"] := 830
sleepParams["wm5sleep"] := 800
sleepParams["ty1sleep"] := 680
sleepParams["ty2sleep"] := 680
sleepParams["ty3sleep"] := 680
sleepParams["ty31sleep"] := 350
sleepParams["ty4sleep"] := 10
sleepParams["ty5sleep"] := 480
sleepParams["f1sleep"] := 10
sleepParams["f2sleep"] := 10
sleepParams["f3sleep"] := 10
sleepParams["f4sleep"] := 1
sleepParams["f5sleep"] := 10
cdParams["wp2cd"] := 5000
cdParams["wp3cd"] := 950
cdParams["wp4cd"] := 16000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 4000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 15000
cdParams["twp5cd"] := 18000
bdtext := "[&DQgnPTI1QC7nGigP7BqZAdQadgH6AG8B6BqSAAAAAAAAAAAAAAAAAAAAAAACWQBaAAA=]"
wptext:= "枪火野外先驱bd已复制，可进游戏粘贴`n武器：`n枪火：超级力量、超级大地`n法杖：超级力量、超级大地`n`n装备：`n天界套，或者增益大于35，超级陷阱符文`n`n古物：碎层古物`n`n食物扳手：蛋糕、症状食物任意`n`n灌注：90症状`n`n本bd可实现贴脸，帷幕技能全程释放，适当走位即可，可实现全程站撸，打布奇需把2把武器都更为会超级净化。"
}
if(bdlist=="长弓野外狂兽")
{
sleepParams["wp2sleep"] := 1910
sleepParams["wp3sleep"] := 0
sleepParams["wp4sleep"] := 360
sleepParams["wp5sleep"] := 1870
sleepParams["twp2sleep"] := 0
sleepParams["twp3sleep"] := 0
sleepParams["twp4sleep"] := 0
sleepParams["twp5sleep"] := 0
sleepParams["ty1sleep"] := 820
sleepParams["ty2sleep"] := 500
sleepParams["ty3sleep"] := 0
sleepParams["ty4sleep"] := 20
sleepParams["ty5sleep"] := 1030
sleepParams["f1sleep"] := 10
sleepParams["f2sleep"] := 10
sleepParams["f3sleep"] := 10
sleepParams["f4sleep"] := 1
sleepParams["f5sleep"] := 1000
cdParams["wp2cd"] := 5000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 20000
cdParams["wp5cd"] := 25000
cdParams["twp2cd"] := 0
cdParams["twp3cd"] := 0
cdParams["twp4cd"] := 0
cdParams["twp5cd"] := 0
cdParams["ty1cd"] := 30000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 45000
cdParams["ty4cd"] := 20000
cdParams["ty5cd"] := 60000
bdtext := "[&DQQIOh41SBt5AHkAtgC7AJoApQEEG5YB7QAAAEI7BQEAAAAAAAAAAAAAAAABIwAA]"
wptext:= "长弓野外狂兽bd已复制，可进游戏粘贴`n武器：双长弓`n装备：狂战士 `n符文古物：超级猎龙\超级学者+烟花古物`n法印：超级力量+超级战斗法印`n食物扳手：蛋糕、威能食物任意`n灌注：90威力"
}
if(bdlist=="剑锤野外狂兽")
{
sleepParams["wp2sleep"] := 830
sleepParams["wp3sleep"] := 1000
sleepParams["wp4sleep"] := 830
sleepParams["wp5sleep"] := 540
sleepParams["twp2sleep"] := 800
sleepParams["twp3sleep"] := 960
sleepParams["twp4sleep"] := 750
sleepParams["twp5sleep"] := 1230
sleepParams["ty1sleep"] := 500
sleepParams["ty2sleep"] := 540
sleepParams["ty3sleep"] := 10
sleepParams["ty4sleep"] := 580
sleepParams["ty5sleep"] := 1000
sleepParams["f1sleep"] := 10
sleepParams["f2sleep"] := 10
sleepParams["f3sleep"] := 10
sleepParams["f4sleep"] := 1
sleepParams["f5sleep"] := 1000
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 8000
cdParams["wp4cd"] := 16000
cdParams["wp5cd"] := 24000
cdParams["twp2cd"] := 6000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 12000
cdParams["twp5cd"] := 20000
cdParams["ty1cd"] := 25000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 32000
cdParams["ty4cd"] := 30000
cdParams["ty5cd"] := 30000
bdtext := "[&DQQhGhkdSCd5AAAAtgAAALsAAACsAQAADxsAAEI7BQEAAAAAAAAAAAAAAAADWgBnADUAAA==]"
wptext:= "剑锤野外狂兽bd已复制，可进游戏粘贴`n武器：剑锤/双钉锤`n装备：天界套\威精爆套 `n符文古物：超级猎龙符文，萨奇洛斯古物`n法印：超级力量\超级武勇，超级净化\超级鲜血（布奇用）`n食物扳手：蛋糕、威能食物任意`n灌注：90威力"
}
if(bdlist=="双法杖野外狂兽")
{
sleepParams["wp2sleep"] := 880
sleepParams["wp3sleep"] := 300
sleepParams["wp4sleep"] := 680
sleepParams["wp5sleep"] := 650
sleepParams["twp2sleep"] := 0
sleepParams["twp3sleep"] := 0
sleepParams["twp4sleep"] := 0
sleepParams["twp5sleep"] := 0
sleepParams["ty1sleep"] := 500
sleepParams["ty2sleep"] := 350
sleepParams["ty3sleep"] := 0
sleepParams["ty4sleep"] := 350
sleepParams["ty5sleep"] := 1000
sleepParams["f1sleep"] := 10
sleepParams["f2sleep"] := 10
sleepParams["f3sleep"] := 10
sleepParams["f4sleep"] := 1
sleepParams["f5sleep"] := 1000
cdParams["wp2cd"] := 5000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 20000
cdParams["wp5cd"] := 25000
cdParams["twp2cd"] := 0
cdParams["twp3cd"] := 0
cdParams["twp4cd"] := 0
cdParams["twp5cd"] := 0
cdParams["ty1cd"] := 30000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 45000
cdParams["ty4cd"] := 20000
cdParams["ty5cd"] := 60000
bdtext := "[&DQQgHh45SBuhAAAAtgAAAKwBAAC9AAAADxsAAAEFAQAAAAAAAAAAAAAAAAABWQAA]"
wptext:= "双法杖野外狂兽bd已复制，可进游戏粘贴`n武器：`n法杖：超级弱点、超级大地`n法杖：超级净化、超级大地`n`n装备：`n天界套，超级神佑符文或其他加全属性`n`n古物：魔像师古物`n`n食物扳手：蛋糕、威能食物任意`n`n灌注：90威能`n推荐黑熊，跟瘟疫熊，记得ctrl+鼠标右键勾选宠物技能的自动施法，布奇可以打，但是比较慢，手动切宠物，宠物死了需适当走位"
}
if(bdlist=="双大剑野外狂兽")
{
sleepParams["wp2sleep"] := 850
sleepParams["wp3sleep"] := 830
sleepParams["wp4sleep"] := 3000
sleepParams["wp5sleep"] := 650
sleepParams["twp2sleep"] := 0
sleepParams["twp3sleep"] := 0
sleepParams["twp4sleep"] := 0
sleepParams["twp5sleep"] := 0
sleepParams["ty1sleep"] := 500
sleepParams["ty2sleep"] := 350
sleepParams["ty3sleep"] := 0
sleepParams["ty4sleep"] := 350
sleepParams["ty42sleep"] := 480
sleepParams["ty5sleep"] := 1000
sleepParams["f1sleep"] := 10
sleepParams["f2sleep"] := 10
sleepParams["f3sleep"] := 10
sleepParams["f4sleep"] := 1
sleepParams["f5sleep"] := 1000
cdParams["wp2cd"] := 5000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 20000
cdParams["wp5cd"] := 25000
cdParams["twp2cd"] := 0
cdParams["twp3cd"] := 0
cdParams["twp4cd"] := 0
cdParams["twp5cd"] := 0
cdParams["ty1cd"] := 30000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 45000
cdParams["ty4cd"] := 20000
cdParams["ty5cd"] := 60000
bdtext := "[&DQQgOh41SBehAAAAtgAAAKwBAAC9AAAADxsAAC8DARcAAAAAAAAAAAAAAAABMgAA]"
wptext:= "双大剑野外狂兽bd已复制，可进游戏粘贴`n武器：`n大剑：超级武勇、超级吸取`n法杖：超级武勇、超级鲜血`n`n装备：`n天界套或狂战混搭，超级猎龙或超级学者`n`n古物：萨奇洛斯古物`n`n食物扳手：蛋糕、威能食物任意`n`n灌注：90威能`n 推荐猎豹(游戏内叫美洲虎）加丛林山猫，也可更换为熊流派，记得ctrl+鼠标右键勾选宠物技能的自动施法，确保不断极速为前提，可把狂兽2-1改为2-2"
}
if(bdlist=="双大剑野外狂兽")
{
sleepParams["wp2sleep"] := 850
sleepParams["wp3sleep"] := 830
sleepParams["wp4sleep"] := 3000
sleepParams["wp5sleep"] := 650
sleepParams["twp2sleep"] := 0
sleepParams["twp3sleep"] := 0
sleepParams["twp4sleep"] := 0
sleepParams["twp5sleep"] := 0
sleepParams["ty1sleep"] := 500
sleepParams["ty2sleep"] := 350
sleepParams["ty3sleep"] := 0
sleepParams["ty4sleep"] := 350
sleepParams["ty42sleep"] := 480
sleepParams["ty5sleep"] := 1000
sleepParams["f1sleep"] := 10
sleepParams["f2sleep"] := 10
sleepParams["f3sleep"] := 10
sleepParams["f4sleep"] := 1
sleepParams["f5sleep"] := 1000
cdParams["wp2cd"] := 5000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 20000
cdParams["wp5cd"] := 25000
cdParams["twp2cd"] := 0
cdParams["twp3cd"] := 0
cdParams["twp4cd"] := 0
cdParams["twp5cd"] := 0
cdParams["ty1cd"] := 30000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 45000
cdParams["ty4cd"] := 20000
cdParams["ty5cd"] := 60000
bdtext := "[&DQQgOh41SBehAAAAtgAAAKwBAAC9AAAADxsAAC8DARcAAAAAAAAAAAAAAAABMgAA]"
wptext:= "双大剑野外狂兽bd已复制，可进游戏粘贴`n武器：`n大剑：超级武勇、超级吸取`n法杖：超级武勇、超级鲜血`n`n装备：`n天界套或狂战混搭，超级猎龙或超级学者`n`n古物：萨奇洛斯古物`n`n食物扳手：蛋糕、威能食物任意`n`n灌注：90威能`n 推荐猎豹(游戏内叫美洲虎）加丛林山猫，也可更换为熊流派，记得ctrl+鼠标右键勾选宠物技能的自动施法，确保不断极速为前提，可把狂兽2-1改为2-2"
}
if(bdlist=="斧号野外狂兽")
{
sleepParams["wp2sleep"] := 600
sleepParams["wp3sleep"] := 510
sleepParams["wp4sleep"] := 830
sleepParams["wp5sleep"] := 450
sleepParams["twp2sleep"] := 0
sleepParams["twp3sleep"] := 0
sleepParams["twp4sleep"] := 0
sleepParams["twp5sleep"] := 0
sleepParams["ty1sleep"] := 500
sleepParams["ty2sleep"] := 350
sleepParams["ty3sleep"] := 0
sleepParams["ty4sleep"] := 350
sleepParams["ty42sleep"] := 480
sleepParams["ty5sleep"] := 1000
sleepParams["f1sleep"] := 10
sleepParams["f2sleep"] := 10
sleepParams["f3sleep"] := 10
sleepParams["f4sleep"] := 1
sleepParams["f5sleep"] := 1000
cdParams["wp2cd"] := 5000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 20000
cdParams["wp5cd"] := 25000
cdParams["twp2cd"] := 0
cdParams["twp3cd"] := 0
cdParams["twp4cd"] := 0
cdParams["twp5cd"] := 0
cdParams["ty1cd"] := 30000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 45000
cdParams["ty4cd"] := 20000
cdParams["ty5cd"] := 60000
bdtext := "[&DQQgHh49SB+hAAAAtgAAAKwBAAC7AAAADxsAABhAARcAAAAAAAAAAAAAAAACBQBnAAA=]"
wptext:= "斧号野外狂兽bd已复制，可进游戏粘贴`n武器：`n斧头：超级痛苦`n号角：超级大地`n`n装备：`n天界套，全属性符文或症状时间`n`n古物：私掠者>魔像>碎层古物`n`n食物扳手：蛋糕、威能食物任意`n`n灌注：90威能`n推荐极地熊，棕熊，或者任意熊配泥浆兽"
}
if(bdlist=="斧锤野外破峰")
{
sleepParams["wp2sleep"] := 1000
sleepParams["wp3sleep"] := 710
sleepParams["wp4sleep"] := 600
sleepParams["wp5sleep"] := 20
sleepParams["twp2sleep"] := 680
sleepParams["twp3sleep"] := 830
sleepParams["twp4sleep"] := 1200
sleepParams["twp5sleep"] := 530
sleepParams["ty1sleep"] := 650
sleepParams["ty2sleep"] := 880
sleepParams["ty3sleep"] := 850
sleepParams["ty4sleep"] := 200
sleepParams["ty5sleep"] := 800
sleepParams["f1sleep"] := 610
sleepParams["f2sleep"] := 400
sleepParams["f3sleep"] := 1200
sleepParams["f4sleep"] := 1
sleepParams["f5sleep"] := 1000
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 8000
cdParams["wp4cd"] := 16000
cdParams["wp5cd"] := 24000
cdParams["twp2cd"] := 6000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 12000
cdParams["twp5cd"] := 20000
cdParams["ty1cd"] := 25000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 32000
cdParams["ty4cd"] := 30000
cdParams["ty5cd"] := 30000
bdtext := "[&DQENGy4dQRsmDwAA2BoAAEwBAACKAAAAiRIAAAAAAAAAAAAAAAAAAAAAAAADMwAFADEAAA==]"
wptext:= "斧锤野外破峰bd已复制，可进游戏粘贴`nbd可在默认基础修改，英勇线修改为热诚线232，进一步提高输出`n武器：斧、聚能器\大锤`n装备：天界套或防御>1400即可 `n符文古物：超级巴萨泽符文，萨奇洛斯古物`n法印：大锤，超级迅敏\高级迅敏，斧聚，超级地能\超级狂怒`n食物扳手：蛋糕、威能食物任意`n灌注：90症状"
}
if(bdlist=="三剑野外破峰")
{
sleepParams["wp2sleep"] := 2000
sleepParams["wp3sleep"] := 980
sleepParams["wp4sleep"] := 700
sleepParams["wp5sleep"] := 710
sleepParams["wp52sleep"] := 710
sleepParams["twp2sleep"] := 750
sleepParams["twp3sleep"] := 1300
sleepParams["twp4sleep"] := 600
sleepParams["twp5sleep"] := 20
sleepParams["ty1sleep"] := 500
sleepParams["ty2sleep"] := 880
sleepParams["ty3sleep"] := 850
sleepParams["ty4sleep"] := 200
sleepParams["ty5sleep"] := 850
sleepParams["f1sleep"] := 700
sleepParams["f2sleep"] := 400
sleepParams["f3sleep"] := 1200
sleepParams["f4sleep"] := 1
sleepParams["f5sleep"] := 1000
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 8000
cdParams["wp4cd"] := 9000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 8000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 20000
cdParams["twp5cd"] := 30000
cdParams["ty1cd"] := 25000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 32000
cdParams["ty4cd"] := 30000
cdParams["ty5cd"] := 30000
bdtext := "[&DQEqOy4VQRcmDwAA2BoAAEwBAACKAAAAiRIAAAAAAAAAAAAAAAAAAAAAAAADMgBaADEAAA==]"
wptext:= "三剑野外破峰bd已复制，可进游戏粘贴`n武器：大剑、剑聚`n装备：天界套/狂战套 `n符文古物：超级巴萨泽，萨奇洛斯古物`n法印：大剑，超级迅敏\高级迅敏，剑聚，超级狂怒\超级战斗`n食物扳手：蛋糕、威能食物任意`n灌注：90威能"
}
if (bdlist == "步枪野外丁真") {
sleepParams["wp2sleep"] := 400
sleepParams["wp3sleep"] := 600
sleepParams["wp4sleep"] := 400
sleepParams["wp5sleep"] := 530
sleepParams["twp2sleep"] := 680
sleepParams["twp3sleep"] := 680
sleepParams["twp4sleep"] := 680
sleepParams["twp5sleep"] := 780
sleepParams["ty1sleep"] := 450
sleepParams["ty2sleep"] := 20
sleepParams["ty3sleep"] := 120
sleepParams["ty33sleep"] := 500
sleepParams["ty4sleep"] := 20
sleepParams["ty5sleep"] := 20
sleepParams["f1sleep"] := 100
sleepParams["f2sleep"] := 100
sleepParams["f3sleep"] := 100
sleepParams["f4sleep"] := 0
sleepParams["f5sleep"] := 0
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 8000
cdParams["wp4cd"] := 9000
cdParams["wp5cd"] := 14000
cdParams["twp2cd"] := 0
cdParams["twp3cd"] := 0
cdParams["twp4cd"] := 0
cdParams["twp5cd"] := 0
cdParams["ty1cd"] := 24000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 0
cdParams["ty4cd"] := 20000
cdParams["ty5cd"] := 90000
bdtext := "野外[&DQMmJwY6Rh8NGwAAGhsAAIYAAABfAQAACRsAAAAAAAAAAAAAAAAAAAAAAAABVQAA] 直伤[&DQMGNyYvRh8NGwAAGhsAAIYAAAAQGwAACRsAAAAAAAAAAAAAAAAAAAAAAAABVQAA]"
wptext:= "步枪野外丁真bd已复制，可进游戏粘贴`n该循环直伤与野外共用，可进游戏粘贴bd查看。`n`n武器：步枪`n装备：天界套/狂战套 `n符文古物：超级学者\超级猎龙，预告者\潜行者古物`n法印：野外：超级迅敏\超级力量 直伤：超级武勇\超级空气`n食物扳手：蛋糕、威能食物任意`n灌注：90威能"
}
if (bdlist == "大锤直伤机械") {
sleepParams["wp2sleep"] := 550
sleepParams["wp3sleep"] := 0
sleepParams["wp4sleep"] := 0
sleepParams["wp5sleep"] := 550
sleepParams["twp2sleep"] := 680
sleepParams["twp3sleep"] := 680
sleepParams["twp4sleep"] := 680
sleepParams["twp5sleep"] := 780
sleepParams["ty1sleep"] := 910
sleepParams["ty12sleep"] := 500
sleepParams["ty2sleep"] := 510
sleepParams["ty3sleep"] := 150
sleepParams["ty32sleep"] := 1
sleepParams["ty4sleep"] := 700
sleepParams["ty5sleep"] := 150
sleepParams["f1sleep"] := 680
sleepParams["f12sleep"] := 680
sleepParams["f2sleep"] := 680
sleepParams["f3sleep"] := 760
sleepParams["f4sleep"] := 910
sleepParams["f5sleep"] := 380
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 18000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 0
cdParams["twp3cd"] := 0
cdParams["twp4cd"] := 0
cdParams["twp5cd"] := 0
cdParams["ty1cd"] := 24000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 0
cdParams["ty4cd"] := 12000
cdParams["ty5cd"] := 90000
bdtext := "[&DQMGNyYvKz0qDyoPrhKGAIYABwEmAa4S+RKJAQAAAAAAAAAAAAAAAAAAAAABMwAA]"
wptext:= "大锤直伤机械bd已复制，可进游戏粘贴`n武器：大锤`n装备：狂战套，背部+饰品x2巨龙 `n符文古物：超级学者\超级猎龙，烟花古物`n法印：超级武勇\超级冲击`n食物扳手：蛋糕、威能食物任意`n灌注：90威能"
}
if (bdlist == "大锤直伤暴风") {
sleepParams["fire2sleep"] := 660
sleepParams["fire3sleep"] := 10
sleepParams["fire4sleep"] := 50
sleepParams["fire5sleep"] := 600
sleepParams["fire22sleep"] := 0
sleepParams["fire32sleep"] := 0
sleepParams["fire42sleep"] := 0
sleepParams["fire52sleep"] := 0
sleepParams["water2sleep"] := 1130
sleepParams["water3sleep"] := 0
sleepParams["water4sleep"] := 0
sleepParams["water5sleep"] := 550
sleepParams["water22sleep"] := 550
sleepParams["water32sleep"] := 0
sleepParams["water42sleep"] := 0
sleepParams["water52sleep"] := 550
sleepParams["flash2sleep"] := 150
sleepParams["flash3sleep"] := 0
sleepParams["flash4sleep"] := 0
sleepParams["flash5sleep"] := 300
sleepParams["flash22sleep"] := 550
sleepParams["flash32sleep"] := 0
sleepParams["flash42sleep"] := 0
sleepParams["flash52sleep"] := 550
sleepParams["stone2sleep"] := 1560
sleepParams["stone3sleep"] := 0
sleepParams["stone4sleep"] := 0
sleepParams["stone5sleep"] := 550
sleepParams["stone22sleep"] := 550
sleepParams["stone32sleep"] := 0
sleepParams["stone42sleep"] := 0
sleepParams["stone52sleep"] := 550
sleepParams["f1sleep"] := 150
sleepParams["f12sleep"] := 150
sleepParams["f2sleep"] := 15
sleepParams["f3sleep"] := 3150
sleepParams["f4sleep"] := 150
sleepParams["f5sleep"] := 1250
sleepParams["f52sleep"] := 1
sleepParams["ty4sleep"] := 1100
sleepParams["ty5sleep"] := 1350
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 18000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 0
cdParams["twp3cd"] := 0
cdParams["twp4cd"] := 0
cdParams["twp5cd"] := 0
cdParams["ty1cd"] := 24000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 0
cdParams["ty4cd"] := 12000
cdParams["ty5cd"] := 90000
cdParams["flash5cd"] := 20000
bdtext := "[&DQYfHSkvMBd0AAAAwxIAAFABAAC+AQAAJgAAAAAAAAAAAAAAAAAAAAAAAAADMwBaAGcAAA==]"
wptext:= "大锤直伤暴风bd已复制，可进游戏粘贴`n武器：大锤`n装备：狂战套+刺客混搭，满食物面板85暴击 `n符文古物：超级猎龙，烟花古物`n法印：超级武勇\超级空气`n食物扳手：蛋糕、威能食物任意`n灌注：90威能"
}
if (bdlist == "辅助奶燃火") {
sleepParams["wp2sleep"] := 500
sleepParams["wp3sleep"] := 470
sleepParams["wp4sleep"] := 2000
sleepParams["wp5sleep"] := 550
sleepParams["twp2sleep"] := 1050
sleepParams["twp3sleep"] := 350
sleepParams["twp4sleep"] := 800
sleepParams["twp5sleep"] := 300
sleepParams["ty1sleep"] := 10
sleepParams["ty12sleep"] := 500
sleepParams["ty2sleep"] := 10
sleepParams["ty3sleep"] := 10
sleepParams["ty32sleep"] := 1
sleepParams["ty4sleep"] := 10
sleepParams["ty5sleep"] := 10
sleepParams["f1sleep"] := 500
sleepParams["f2sleep"] := 500
sleepParams["f3sleep"] := 500
sleepParams["f4sleep"] := 910
sleepParams["f5sleep"] := 380
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 9000
cdParams["wp4cd"] := 16000
cdParams["wp5cd"] := 24000
cdParams["twp2cd"] := 8000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 20000
cdParams["twp5cd"] := 24000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 10
cdParams["ty4cd"] := 10
cdParams["ty5cd"] := 10
bdtext := "[&DQExNy4qPj5LF0sXehZ6FlMXUxctAS0BGBYYFgAAAAAAAAAAAAAAAAAAAAADWQAFAFcAAA==]"
wptext:= "辅助奶燃火bd已复制，可进游戏粘贴`n武器：斧头/法杖`n装备：诗人套`n符文古物：超级僧侣，午夜国王`n法印：超级转移\超级专注`n食物扳手：蛋糕、威能食物任意`n灌注：90治疗"
}
if (bdlist == "直伤敏捷龙魂") {
sleepParams["wp2sleep"] := 660
sleepParams["wp3sleep"] := 470
sleepParams["wp4sleep"] := 800
sleepParams["wp5sleep"] := 710
sleepParams["twp2sleep"] := 510
sleepParams["twp3sleep"] := 480
sleepParams["twp4sleep"] := 2000
sleepParams["twp5sleep"] := 830
sleepParams["ty1sleep"] := 530
sleepParams["ty2sleep"] := 550
sleepParams["ty3sleep"] := 550
sleepParams["ty4sleep"] := 530
sleepParams["ty5sleep"] := 530
sleepParams["ty21sleep"] := 10
sleepParams["ty22sleep"] := 10
sleepParams["ty23sleep"] := 10
sleepParams["ty24sleep"] := 10
sleepParams["ty25sleep"] := 10
sleepParams["f1sleep"] := 150
sleepParams["f2sleep"] := 650
sleepParams["f3sleep"] := 600
sleepParams["f4sleep"] := 10
cdParams["wp2cd"] := 5000
cdParams["wp3cd"] := 9000
cdParams["wp4cd"] := 15000
cdParams["wp5cd"] := 15000
cdParams["twp2cd"] := 3000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 20000
cdParams["twp5cd"] := 15000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 10
cdParams["ty4cd"] := 10
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 20000
bdtext := "[&DQkDJg8qPz3cEdwRBhIGEisSKxLUEdQRyhHKEQIFAwTUESsSBhIGEisS1BECMgBaAAA=]"
wptext:= "直伤敏捷龙魂bd已复制，可进游戏粘贴`n武器：大剑，双剑`n装备：神谕者+狂战混搭，增益百分比大于45即可。`n符文古物：超级猎龙，潜行者古物`n法印：大剑：超级武勇\超级冲击 双剑：超级武勇\超级空气 `n食物扳手：蛋糕、威能食物任意`n灌注：90威力"
}
if (bdlist == "直伤极速预告") {
sleepParams["wp2sleep"] := 680
sleepParams["wp3sleep"] := 470
sleepParams["wp4sleep"] := 800
sleepParams["wp5sleep"] := 710
sleepParams["twp2sleep"] := 510
sleepParams["twp3sleep"] := 430
sleepParams["twp4sleep"] := 800
sleepParams["twp5sleep"] := 840
sleepParams["ty1sleep"] := 50
sleepParams["ty2sleep"] := 50
sleepParams["ty3sleep"] := 50
sleepParams["ty4sleep"] := 50
sleepParams["ty5sleep"] := 50
sleepParams["ty21sleep"] := 10
sleepParams["ty22sleep"] := 10
sleepParams["ty23sleep"] := 10
sleepParams["ty24sleep"] := 10
sleepParams["ty25sleep"] := 10
sleepParams["f1sleep"] := 150
sleepParams["f2sleep"] := 500
sleepParams["f3sleep"] := 600
sleepParams["f4sleep"] := 10
cdParams["wp2cd"] := 5000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 15000
cdParams["wp5cd"] := 15000
cdParams["twp2cd"] := 3000
cdParams["twp3cd"] := 8000
cdParams["twp4cd"] := 12000
cdParams["twp5cd"] := 15000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 12000
cdParams["ty4cd"] := 12000
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 20000
bdtext := "[&DQkDNg8qNBrcEdwRBhIrEisS1BHUEQYSyhHKEQECAQIGEisS1BEGEisS1BECWgAyAAA=]"
wptext:= "直伤极速预告bd已复制，可进游戏粘贴`n武器：大剑`n装备：狂战套或神谕混搭`n符文古物：超级猎龙，潜行者古物`n法印：超级武勇\超级冲击`n食物扳手：蛋糕、威能食物任意`n灌注：90威力"
}
if (bdlist == "奶预告") {
sleepParams["wp2sleep"] := 500
sleepParams["wp3sleep"] := 470
sleepParams["wp4sleep"] := 2000
sleepParams["wp5sleep"] := 550
sleepParams["twp2sleep"] := 500
sleepParams["twp3sleep"] := 300
sleepParams["twp4sleep"] := 880
sleepParams["twp5sleep"] := 0
sleepParams["ty1sleep"] := 10
sleepParams["ty2sleep"] := 960
sleepParams["ty3sleep"] := 10
sleepParams["ty4sleep"] := 10
sleepParams["ty5sleep"] := 10
sleepParams["ty21sleep"] := 10
sleepParams["ty22sleep"] := 10
sleepParams["ty23sleep"] := 10
sleepParams["ty24sleep"] := 10
sleepParams["ty25sleep"] := 10
sleepParams["f1sleep"] := 150
sleepParams["f2sleep"] := 500
sleepParams["f3sleep"] := 600
sleepParams["f4sleep"] := 10
cdParams["wp2cd"] := 5000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 15000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 8000
cdParams["twp3cd"] := 8000
cdParams["twp4cd"] := 15000
cdParams["twp5cd"] := 25000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 12000
cdParams["ty4cd"] := 12000
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 20000
bdtext := "[&DQkMFQMmNBXcEdwRBhIrEisS1BHUEQYSyhHKEQEGAQMrEgYS1BEGEisS1BEDWQBWAFcAAA==]"
wptext:= "奶预告bd已复制，可进游戏粘贴`n武器：节盾`n装备：诗人套`n符文古物：超级僧侣，群聚古物`n法印：超级否决\超级转移`n食物扳手：蛋糕、威能食物任意`n灌注：90治疗"
}
if (bdlist == "裁决") {
sleepParams["wp2sleep"] := 510
sleepParams["wp3sleep"] := 470
sleepParams["wp4sleep"] := 2000
sleepParams["wp5sleep"] := 550
sleepParams["twp2sleep"] := 680
sleepParams["twp3sleep"] := 1040
sleepParams["twp4sleep"] := 800
sleepParams["twp5sleep"] := 730
sleepParams["ty1sleep"] := 10
sleepParams["ty2sleep"] := 960
sleepParams["ty3sleep"] := 600
sleepParams["ty4sleep"] := 430
sleepParams["ty5sleep"] := 600
sleepParams["ty21sleep"] := 10
sleepParams["ty22sleep"] := 10
sleepParams["ty23sleep"] := 10
sleepParams["ty24sleep"] := 10
sleepParams["ty25sleep"] := 10
sleepParams["f1sleep"] := 150
sleepParams["f2sleep"] := 500
sleepParams["f3sleep"] := 600
sleepParams["f4sleep"] := 10
sleepParams["f22sleep"] := 500
cdParams["wp2cd"] := 3000
cdParams["wp3cd"] := 8000
cdParams["wp4cd"] := 12000
cdParams["wp5cd"] := 15000
cdParams["twp2cd"] := 5000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 15000
cdParams["twp5cd"] := 15000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 12000
cdParams["ty4cd"] := 12000
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 20000
bdtext := "[&DQkPKgM2RRXcEdwRBhIGEisSKxLUEdQRyhHKEQIHBwIGEisS1BEGEisS1BEBWgAA]"
wptext:= "裁决bd已复制，可进游戏粘贴`n默认使用通用4，通用3循环，也可自行修改为通用2`n武器：双剑`n装备：狂战套`n符文古物：超级猎龙者`n法印：超级空气\超级武勇`n食物扳手：蛋糕、威能食物任意`n灌注：90威力"
}
if (bdlist == "直伤大剑夺魂") {
sleepParams["wp2sleep"] := 1080
sleepParams["wp3sleep"] := 1000
sleepParams["wp4sleep"] := 480
sleepParams["wp5sleep"] := 150
sleepParams["twp2sleep"] := 650
sleepParams["twp3sleep"] := 680
sleepParams["twp4sleep"] := 630
sleepParams["twp42sleep"] := 430
sleepParams["twp5sleep"] := 680
sleepParams["twp52sleep"] := 510
sleepParams["wm2sleep"] := 1230
sleepParams["wm3sleep"] := 150
sleepParams["wm32sleep"] := 350
sleepParams["wm4sleep"] := 2270
sleepParams["wm5sleep"] := 1330
sleepParams["ty1sleep"] := 960
sleepParams["ty2sleep"] := 480
sleepParams["ty3sleep"] := 480
sleepParams["ty4sleep"] := 430
sleepParams["ty5sleep"] := 1040
sleepParams["ty51sleep"] := 1500
sleepParams["ty52sleep"] := 1040
sleepParams["ty21sleep"] := 10
sleepParams["ty22sleep"] := 10
sleepParams["ty23sleep"] := 10
sleepParams["ty24sleep"] := 10
sleepParams["ty25sleep"] := 10
sleepParams["f1sleep"] := 150
sleepParams["f2sleep"] := 500
sleepParams["f3sleep"] := 600
sleepParams["f4sleep"] := 10
sleepParams["f22sleep"] := 500
cdParams["wp2cd"] := 8000
cdParams["wp3cd"] := 10000
cdParams["wp4cd"] := 20000
cdParams["wp5cd"] := 25000
cdParams["twp2cd"] := 8000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 16000
cdParams["twp5cd"] := 20000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 12000
cdParams["ty4cd"] := 12000
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 20000
bdtext := "[&DQg1KTIlIjbBEigPQAGZAYEAdgHxEm8BAxOSAAAAAAAAAAAAAAAAAAAAAAADMgAvAFoAAA==]"
wptext:= "直伤大剑夺魂bd已复制，可进游戏粘贴`n武器：大剑+匕剑`n装备：狂战套`n符文古物：学者/猎龙 烟花/潜行者古物`n法印：超级武勇/超级精确`n食物扳手：蛋糕、威能食物任意`n灌注：90威力"
}
if (bdlist == "症状敏缚影") {
sleepParams["wp2sleep"] := 0
sleepParams["wp3sleep"] := 750
sleepParams["wp4sleep"] := 0
sleepParams["wp5sleep"] := 0
sleepParams["twp2sleep"] := 500
sleepParams["twp3sleep"] := 600
sleepParams["twp4sleep"] := 600
sleepParams["twp42sleep"] := 430
sleepParams["twp5sleep"] := 680
sleepParams["twp52sleep"] := 510
sleepParams["wm2sleep"] := 230
sleepParams["wm3sleep"] := 0
sleepParams["wm32sleep"] := 0
sleepParams["wm4sleep"] := 760
sleepParams["wm5sleep"] := 350
sleepParams["ty1sleep"] := 960
sleepParams["ty2sleep"] := 10
sleepParams["ty3sleep"] := 10
sleepParams["ty4sleep"] := 10
sleepParams["ty5sleep"] := 1240
sleepParams["ty52sleep"] := 1050
sleepParams["ty21sleep"] := 10
sleepParams["ty22sleep"] := 10
sleepParams["ty23sleep"] := 10
sleepParams["ty24sleep"] := 10
sleepParams["ty25sleep"] := 10
sleepParams["f1sleep"] := 500
sleepParams["f2sleep"] := 500
sleepParams["f3sleep"] := 600
sleepParams["f4sleep"] := 10
sleepParams["f22sleep"] := 500
cdParams["wp2cd"] := 8000
cdParams["wp3cd"] := 10000
cdParams["wp4cd"] := 20000
cdParams["wp5cd"] := 25000
cdParams["twp2cd"] := 8000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 16000
cdParams["twp5cd"] := 20000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 12000
cdParams["ty4cd"] := 12000
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 20000
bdtext := "[&DQUcGyw3RzWFAAAALwEAAD4BAAALAQAAKAAAAAAAAAAAAAAAAAAAAAAAAAADVgAvADYAAA==]"
wptext:= "症状敏缚影bd已复制，可进游戏粘贴`n武器1：节杖、匕首，超级痛苦、超级厄运`n武器2：匕首，超级地能`n装备：祭祀者全套`n符文古物：超级陷阱 碎层古物`n食物扳手：蛋糕、威能食物任意`n灌注：90症状"
}
if (bdlist == "节号症状编织") {
sleepParams["wp2sleep"] := 10
sleepParams["wp3sleep"] := 1280
sleepParams["fire2sleep"] := 960
sleepParams["fire3sleep"] := 710
sleepParams["fire4sleep"] := 750
sleepParams["fire5sleep"] := 1200
sleepParams["fire22sleep"] := 0
sleepParams["fire32sleep"] := 0
sleepParams["fire42sleep"] := 0
sleepParams["fire52sleep"] := 0
sleepParams["stone2sleep"] := 500
sleepParams["stone3sleep"] := 0
sleepParams["stone4sleep"] := 0
sleepParams["stone5sleep"] := 550
sleepParams["stone22sleep"] := 550
sleepParams["stone32sleep"] := 0
sleepParams["stone42sleep"] := 0
sleepParams["stone52sleep"] := 550
sleepParams["ty1sleep"] := 960
sleepParams["ty2sleep"] := 1240
sleepParams["ty3sleep"] := 750
sleepParams["ty4sleep"] := 500
sleepParams["ty5sleep"] := 1240
sleepParams["ty21sleep"] := 10
sleepParams["ty22sleep"] := 10
sleepParams["ty23sleep"] := 10
sleepParams["ty24sleep"] := 10
sleepParams["ty25sleep"] := 10
sleepParams["f1sleep"] := 500
sleepParams["f2sleep"] := 500
sleepParams["f3sleep"] := 750
sleepParams["f4sleep"] := 10
sleepParams["f22sleep"] := 500
cdParams["wp2cd"] := 8000
cdParams["wp3cd"] := 10000
cdParams["wp4cd"] := 20000
cdParams["wp5cd"] := 25000
cdParams["twp2cd"] := 8000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 16000
cdParams["twp5cd"] := 20000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 12000
cdParams["ty4cd"] := 12000
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 20000
bdtext := "[&DQUcGyw3RzWFAAAALwEAAD4BAAALAQAAKAAAAAAAAAAAAAAAAAAAAAAAAAADVgAvADYAAA==]"
wptext:= "节号症状编织bd已复制，可进游戏粘贴`n武器1：节杖、匕首，超级痛苦、超级厄运`n武器2：匕首，超级地能`n装备：祭祀者全套`n符文古物：超级陷阱 碎层古物`n食物扳手：蛋糕、威能食物任意`n灌注：90症状"
}
if (bdlist == "症状输出破峰") {
sleepParams["wp2sleep"] := 300
sleepParams["wp3sleep"] := 500
sleepParams["wp4sleep"] := 1090
sleepParams["wp5sleep"] := 750
sleepParams["twp2sleep"] := 1030
sleepParams["twp3sleep"] := 350
sleepParams["twp4sleep"] := 100
sleepParams["twp42sleep"] := 720
sleepParams["twp5sleep"] := 2550
sleepParams["ty1sleep"] := 750
sleepParams["ty2sleep"] := 940
sleepParams["ty3sleep"] := 300
sleepParams["ty4sleep"] := 960
sleepParams["ty5sleep"] := 450
sleepParams["ty21sleep"] := 10
sleepParams["ty22sleep"] := 10
sleepParams["ty23sleep"] := 10
sleepParams["ty24sleep"] := 10
sleepParams["ty25sleep"] := 10
sleepParams["f1sleep"] := 450
sleepParams["f2sleep"] := 500
sleepParams["f3sleep"] := 700
sleepParams["f4sleep"] := 10
sleepParams["f22sleep"] := 500
cdParams["wp2cd"] := 10000
cdParams["wp3cd"] := 10000
cdParams["wp4cd"] := 10000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 6000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 12000
cdParams["twp5cd"] := 12000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 12000
cdParams["ty4cd"] := 12000
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 20000
bdtext := "[&DQEQGi4XQSUmDwMB2Bp4AUwBBAExATEBiRKJEgAAAAAAAAAAAAAAAAAAAAADNgBmAFYAAA==]"
wptext:= "症状输出破峰bd已复制，可进游戏粘贴`n武器1：节杖、手枪，超级渴求、超级地能`n武器2：手枪、火炬，超级渴求、超级空气`n装备：毒蛇全套`n首饰：戒指x1毒蛇，其他凶恶`n符文古物：超级巴萨泽，战士古物`n食物扳手：素菜披萨、剧毒协调水晶`n灌注：90症状"
}
if (bdlist == "枪火野外破峰") {
sleepParams["wp2sleep"] := 1040
sleepParams["wp3sleep"] := 500
sleepParams["wp4sleep"] := 1110
sleepParams["wp5sleep"] := 1160
sleepParams["twp2sleep"] := 1040
sleepParams["twp3sleep"] := 500
sleepParams["twp4sleep"] := 1
sleepParams["twp42sleep"] := 700
sleepParams["twp5sleep"] := 2590
sleepParams["ty1sleep"] := 960
sleepParams["ty2sleep"] := 600
sleepParams["ty3sleep"] := 380
sleepParams["ty4sleep"] := 10
sleepParams["ty5sleep"] := 500
sleepParams["ty21sleep"] := 10
sleepParams["ty22sleep"] := 10
sleepParams["ty23sleep"] := 10
sleepParams["ty24sleep"] := 10
sleepParams["ty25sleep"] := 10
sleepParams["f1sleep"] := 430
sleepParams["f2sleep"] := 500
sleepParams["f3sleep"] := 750
sleepParams["f4sleep"] := 10
sleepParams["f22sleep"] := 500
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 10000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 6000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 15000
cdParams["twp5cd"] := 15000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 12000
cdParams["ty4cd"] := 12000
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 20000
bdtext := "[&DQEQGi43QSkmDwAASAEAAEwBAACKAAAAiRIAAAAAAAAAAAAAAAAAAAAAAAACNgBmAAA=]"
wptext:= "枪火野外破峰bd已复制，可进游戏粘贴`n武器1：手枪、手枪，超级迅敏、高级迅敏`n武器2：手枪、火炬，超级渴求或其他症状类法印`n装备：天界套`n首饰：天界`n符文古物：超级巴萨泽，萨奇洛斯\碎层古物`n食物扳手：素菜披萨、剧毒协调水晶`n灌注：90症状"
}
if (bdlist == "枪聚野外破峰") {
sleepParams["wp2sleep"] := 1040
sleepParams["wp3sleep"] := 500
sleepParams["wp4sleep"] := 1110
sleepParams["wp5sleep"] := 1160
sleepParams["twp2sleep"] := 1040
sleepParams["twp3sleep"] := 500
sleepParams["twp4sleep"] := 830
sleepParams["twp5sleep"] := 1
sleepParams["ty1sleep"] := 960
sleepParams["ty2sleep"] := 700
sleepParams["ty3sleep"] := 500
sleepParams["ty4sleep"] := 10
sleepParams["ty5sleep"] := 500
sleepParams["ty21sleep"] := 10
sleepParams["ty22sleep"] := 10
sleepParams["ty23sleep"] := 10
sleepParams["ty24sleep"] := 10
sleepParams["ty25sleep"] := 10
sleepParams["f1sleep"] := 430
sleepParams["f2sleep"] := 500
sleepParams["f3sleep"] := 800
sleepParams["f4sleep"] := 10
sleepParams["f22sleep"] := 500
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 10000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 6000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 16000
cdParams["twp5cd"] := 24000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 12000
cdParams["ty4cd"] := 12000
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 20000
bdtext := "[&DQENOy4XQRkmDwAASAEAAEwBAACKAAAAiRIAAAAAAAAAAAAAAAAAAAAAAAADMgBaADEAAA==]"
wptext:= "枪聚野外破峰bd已复制，可进游戏粘贴`n武器1：手枪、手枪，超级迅敏、高级迅敏`n武器2：手枪、聚能器，超级渴求或其他症状类法印`n装备：天界套`n首饰：天界`n符文古物：超级巴萨泽，萨奇洛斯\碎层古物`n食物扳手：素菜披萨、剧毒协调水晶`n灌注：90症状"
}
if (bdlist == "剑枪直伤全息") {
sleepParams["wp2sleep"] := 510
sleepParams["wp3sleep"] := 830
sleepParams["wp4sleep"] := 550
sleepParams["wp5sleep"] := 560
sleepParams["twp2sleep"] := 510
sleepParams["twp3sleep"] := 460
sleepParams["twp4sleep"] := 1310
sleepParams["twp5sleep"] := 560
sleepParams["ty1sleep"] := 960
sleepParams["ty2sleep"] := 700
sleepParams["ty3sleep"] := 900
sleepParams["ty4sleep"] := 1000
sleepParams["ty5sleep"] := 1160
sleepParams["ty21sleep"] := 10
sleepParams["ty22sleep"] := 10
sleepParams["ty23sleep"] := 10
sleepParams["ty24sleep"] := 10
sleepParams["ty25sleep"] := 10
sleepParams["f1sleep"] := 680
sleepParams["f2sleep"] := 680
sleepParams["f3sleep"] := 10
sleepParams["f4sleep"] := 10
sleepParams["f22sleep"] := 500
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 10000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 6000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 15000
cdParams["twp5cd"] := 15000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 12000
cdParams["ty4cd"] := 12000
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 20000
bdtext := "[&DQMGOyYvOSsqDwAAhgAAAOUWAABXFgAA8BUAAAAAAAAAAAAAAAAAAAAAAAADWgA2AFcAAA==]"
wptext:= "剑枪直伤全息bd已复制，可进游戏粘贴`n武器1：剑、手枪，超级武勇、超级冲击`n装备：护腿、背：巨龙，饰品：刺客，其他狂战`n符文古物：超级学者、超级猎龙，烟花、潜行者古物`n食物扳手：芦笋牛排，超级磨刀石、蛋糕`n灌注：90威能"
}
if (bdlist == "症状先驱") {
sleepParams["wp2sleep"] := 840
sleepParams["wp3sleep"] := 600
sleepParams["wp4sleep"] := 430
sleepParams["wp5sleep"] := 650
sleepParams["twp2sleep"] := 880
sleepParams["twp3sleep"] := 600
sleepParams["twp4sleep"] := 480
sleepParams["twp5sleep"] := 350
sleepParams["wm2sleep"] := 910
sleepParams["wm3sleep"] := 710
sleepParams["wm4sleep"] := 830
sleepParams["wm5sleep"] := 500
sleepParams["ty1sleep"] := 680
sleepParams["ty2sleep"] := 880
sleepParams["ty3sleep"] := 860
sleepParams["ty4sleep"] := 10
sleepParams["ty5sleep"] := 680
sleepParams["ty21sleep"] := 10
sleepParams["ty22sleep"] := 10
sleepParams["ty23sleep"] := 10
sleepParams["ty24sleep"] := 10
sleepParams["ty25sleep"] := 10
sleepParams["f1sleep"] := 150
sleepParams["f2sleep"] := 150
cdParams["wp2cd"] := 5000
cdParams["wp3cd"] := 9000
cdParams["wp4cd"] := 16000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 10000
cdParams["twp3cd"] := 10000
cdParams["twp4cd"] := 16000
cdParams["twp5cd"] := 20000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 10
cdParams["ty4cd"] := 10
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 10
bdtext := "[&DQgnNTI1QD/nGgAAgAAAAHUBAAD1AAAA6BoAAAAAAAAAAAAAAAAAAAAAAAAEVgAvADYAZgAA]"
wptext:= "症状先驱bd已复制，可进游戏粘贴`n武器1：手枪、火炬，超级折磨、超级恶毒`n武器2：节杖、匕首，超级大地、超级恶毒`n装备：全套毒蛇`n符文古物：超级陷阱、碎层古物`n食物扳手：芦笋肉串，剧毒能量水晶、蛋糕`n灌注：90症状"
}
if (bdlist == "野外直伤龙魂") {
sleepParams["wp2sleep"] := 510
sleepParams["wp3sleep"] := 600
sleepParams["wp4sleep"] := 430
sleepParams["wp5sleep"] := 830
sleepParams["twp2sleep"] := 680
sleepParams["twp3sleep"] := 1150
sleepParams["twp4sleep"] := 800
sleepParams["twp5sleep"] := 710
sleepParams["wm2sleep"] := 910
sleepParams["wm3sleep"] := 710
sleepParams["wm4sleep"] := 830
sleepParams["wm5sleep"] := 500
sleepParams["ty1sleep"] := 680
sleepParams["ty2sleep"] := 710
sleepParams["ty3sleep"] := 710
sleepParams["ty4sleep"] := 10
sleepParams["ty5sleep"] := 780
sleepParams["ty21sleep"] := 800
sleepParams["ty22sleep"] := 100
sleepParams["ty23sleep"] := 10
sleepParams["ty24sleep"] := 280
sleepParams["ty25sleep"] := 10
sleepParams["f1sleep"] := 150
sleepParams["f2sleep"] := 500
sleepParams["f3sleep"] := 880
cdParams["wp2cd"] := 5000
cdParams["wp3cd"] := 9000
cdParams["wp4cd"] := 16000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 10000
cdParams["twp3cd"] := 10000
cdParams["twp4cd"] := 16000
cdParams["twp5cd"] := 20000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 10
cdParams["ty4cd"] := 10
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 20000
bdtext := "[&DQkDLg8aPx3cEdwR1BEGEisSKxIGEtQRyhHKEQUDAwTUESsSBhIGEisS1BECMgBaAAA=]"
wptext:= "野外直伤龙魂，可进游戏粘贴`n武器1：大剑 超级迅敏、高级迅敏`n武器2：剑剑 超级狂怒、超级敏捷`n装备：天界套`n符文古物：萨奇洛斯、碎层古物`n食物扳手：蛋糕`n灌注：90威力"
}
if (bdlist == "斧锤直伤魂兽") {
sleepParams["wp2sleep"] := 600
sleepParams["wp3sleep"] := 500
sleepParams["wp4sleep"] := 400
sleepParams["wp5sleep"] := 3060
sleepParams["twp2sleep"] := 460
sleepParams["twp3sleep"] := 950
sleepParams["twp4sleep"] := 500
sleepParams["twp5sleep"] := 960
sleepParams["ty1sleep"] := 680
sleepParams["ty2sleep"] := 600
sleepParams["ty3sleep"] := 710
sleepParams["ty4sleep"] := 10
sleepParams["ty5sleep"] := 400
sleepParams["ty21sleep"] := 800
sleepParams["ty22sleep"] := 100
sleepParams["ty23sleep"] := 10
sleepParams["ty24sleep"] := 280
sleepParams["ty25sleep"] := 10
sleepParams["f1sleep"] := 560
sleepParams["f2sleep"] := 790
sleepParams["f3sleep"] := 880
cdParams["wp2cd"] := 4000
cdParams["wp3cd"] := 8000
cdParams["wp4cd"] := 12000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 7000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 15000
cdParams["twp5cd"] := 20000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 10
cdParams["ty4cd"] := 10
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 10
bdtext := "[&DQQeOSA+Nzp5AAAAtQAAAKUBAACsAQAALhYAACc7BQEAAAAAAAAAAAAAAAACBQAzAATo9gAAm/YAAGf3AADd9gAA]"
wptext:= "斧锤直伤魂兽，可进游戏粘贴`n武器1：斧斧 大锤 超级武勇、超级冲击`n装备：狂战套`n符文古物：超级学者、超级猎龙，烟花古物`n食物扳手：芦笋牛排 超级磨刀石，蛋糕`n灌注：90威力"
}
if (bdlist == "症状德鲁伊") {
sleepParams["wp2sleep"] := 600
sleepParams["wp3sleep"] := 800
sleepParams["wp4sleep"] := 450
sleepParams["wp5sleep"] := 600
sleepParams["twp2sleep"] := 590
sleepParams["twp3sleep"] := 500
sleepParams["twp4sleep"] := 740
sleepParams["twp5sleep"] := 360
sleepParams["wm2sleep"] := 10
sleepParams["wm3sleep"] := 700
sleepParams["wm4sleep"] := 2300
sleepParams["wm5sleep"] := 2300
sleepParams["ty1sleep"] := 680
sleepParams["ty2sleep"] := 620
sleepParams["ty3sleep"] := 10
sleepParams["ty4sleep"] := 480
sleepParams["ty5sleep"] := 680
sleepParams["f2sleep"] := 1
sleepParams["f22sleep"] := 1
cdParams["wp2cd"] := 5000
cdParams["wp3cd"] := 9000
cdParams["wp4cd"] := 12000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 6000
cdParams["twp3cd"] := 10000
cdParams["twp4cd"] := 8000
cdParams["twp5cd"] := 12000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 10
cdParams["ty4cd"] := 10
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 10
bdtext := "[&DQQePSE3BT95AAAAugAAAL8AAAC9AAAAwAAAACEGBgAAAAAAAAAAAAAAAAADLwBmAAUAAA==]"
wptext:= "症状德鲁伊，可进游戏粘贴`n武器1：匕首火炬 超级恶毒 超级大地`n武器2：斧头匕首 超级恶毒 超级大地`n装备：毒蛇套`n符文古物：超级陷阱，碎层古物`n食物扳手：素菜披萨 剧毒协调水晶，蛋糕`n灌注：90症状"
}
if (bdlist == "剑号野外元晶") {
sleepParams["fire2sleep"] := 710
sleepParams["fire3sleep"] := 500
sleepParams["fire4sleep"] := 750
sleepParams["fire5sleep"] := 860
sleepParams["flash2sleep"] := 450
sleepParams["flash3sleep"] := 680
sleepParams["flash4sleep"] := 800
sleepParams["flash5sleep"] := 430
sleepParams["stone2sleep"] := 1000
sleepParams["stone3sleep"] := 1400
sleepParams["stone4sleep"] := 800
sleepParams["stone5sleep"] := 840
sleepParams["water2sleep"] := 1000
sleepParams["water3sleep"] := 680
sleepParams["water4sleep"] := 540
sleepParams["water5sleep"] := 550
sleepParams["ty1sleep"] := 680
sleepParams["ty2sleep"] := 510
sleepParams["ty3sleep"] := 1200
sleepParams["ty4sleep"] := 10
sleepParams["ty5sleep"] := 1200
sleepParams["ty52sleep"] := 10
sleepParams["f2sleep"] := 1
sleepParams["f22sleep"] := 1
cdParams["fire2cd"] := 6000
cdParams["fire3cd"] := 12000
cdParams["fire4cd"] := 24000
cdParams["fire5cd"] := 24000
cdParams["water2cd"] := 9000
cdParams["water3cd"] := 12000
cdParams["water4cd"] := 24000
cdParams["water5cd"] := 24000
cdParams["flash2cd"] := 15000
cdParams["flash3cd"] := 16000
cdParams["flash4cd"] := 25000
cdParams["flash5cd"] := 25000
cdParams["stone2cd"] := 10000
cdParams["stone3cd"] := 15000
cdParams["stone4cd"] := 30000
cdParams["stone5cd"] := 30000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 10
cdParams["ty4cd"] := 10
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 10
bdtext := "火土防御系：[&DQYfGRoWQz50AAAAywAAAHIAAABPAQAAJgAAAAAAAAAAAAAAAAAAAAAAAAACWgBnAAA=]火水输出系：[&DQYfGRE+Qz50AAAAywAAAHIAAABPAQAAJgAAAAAAAAAAAAAAAAAAAAAAAAACWgBnAAA=]"
wptext:= "剑号野外元晶，可进游戏粘贴`n武器：剑号角 超级否决，超级弱点`n装备：天界套或混搭，增益面板大于30即可`n符文古物：超级陷阱符文、魔像古物`n食物扳手：芦笋牛排 超级磨刀石 蛋糕`n灌注：90威力"
}
if (bdlist == "剑号急速元晶") {
sleepParams["fire2sleep"] := 750
sleepParams["fire3sleep"] := 800
sleepParams["fire4sleep"] := 750
sleepParams["fire5sleep"] := 860
sleepParams["flash2sleep"] := 440
sleepParams["flash3sleep"] := 900
sleepParams["flash4sleep"] := 800
sleepParams["flash5sleep"] := 430
sleepParams["stone2sleep"] := 1100
sleepParams["stone3sleep"] := 1380
sleepParams["stone4sleep"] := 750
sleepParams["stone5sleep"] := 830
sleepParams["water2sleep"] := 1000
sleepParams["water3sleep"] := 650
sleepParams["water4sleep"] := 650
sleepParams["water5sleep"] := 750
sleepParams["ty1sleep"] := 680
sleepParams["ty2sleep"] := 530
sleepParams["ty3sleep"] := 760
sleepParams["ty4sleep"] := 10
sleepParams["ty5sleep"] := 1200
sleepParams["ty52sleep"] := 10
sleepParams["f2sleep"] := 1
sleepParams["f22sleep"] := 1
cdParams["fire2cd"] := 6000
cdParams["fire3cd"] := 12000
cdParams["fire4cd"] := 24000
cdParams["fire5cd"] := 24000
cdParams["water2cd"] := 9000
cdParams["water3cd"] := 12000
cdParams["water4cd"] := 24000
cdParams["water5cd"] := 24000
cdParams["flash2cd"] := 15000
cdParams["flash3cd"] := 16000
cdParams["flash4cd"] := 25000
cdParams["flash5cd"] := 25000
cdParams["stone2cd"] := 10000
cdParams["stone3cd"] := 15000
cdParams["stone4cd"] := 30000
cdParams["stone5cd"] := 30000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 10
cdParams["ty4cd"] := 10
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 10
bdtext := "[&DQYROxoZQz4nD3QAjwCRAE4BjwBPAU8BJgCWAAAAAAAAAAAAAAAAAAAAAAADWgBnAFkAAA==]"
wptext:= "剑号急速元晶`n武器：剑号角 超级转移，超级专注`n装备：赠与者或诗人套 首饰：赠与者或诗人套`n符文古物：超级僧侣、卡拉科萨古物`n食物扳手：治疗量食物 蛋糕`n灌注：90治疗"
}
if (bdlist == "枪号野外元晶") {
sleepParams["fire2sleep"] := 510
sleepParams["fire3sleep"] := 680
sleepParams["fire4sleep"] := 800
sleepParams["fire5sleep"] := 830
sleepParams["flash2sleep"] := 450
sleepParams["flash3sleep"] := 680
sleepParams["flash4sleep"] := 800
sleepParams["flash5sleep"] := 550
sleepParams["stone2sleep"] := 510
sleepParams["stone3sleep"] := 440
sleepParams["stone4sleep"] := 800
sleepParams["stone5sleep"] := 840
sleepParams["water2sleep"] := 1000
sleepParams["water3sleep"] := 510
sleepParams["water4sleep"] := 430
sleepParams["water5sleep"] := 550
sleepParams["ty1sleep"] := 680
sleepParams["ty2sleep"] := 550
sleepParams["ty3sleep"] := 1250
sleepParams["ty4sleep"] := 10
sleepParams["ty5sleep"] := 1250
sleepParams["ty52sleep"] := 10
sleepParams["f2sleep"] := 1
sleepParams["f22sleep"] := 1
cdParams["fire2cd"] := 4000
cdParams["fire3cd"] := 9000
cdParams["fire4cd"] := 24000
cdParams["fire5cd"] := 24000
cdParams["water2cd"] := 4000
cdParams["water3cd"] := 12000
cdParams["water4cd"] := 24000
cdParams["water5cd"] := 24000
cdParams["flash2cd"] := 8000
cdParams["flash3cd"] := 12000
cdParams["flash4cd"] := 25000
cdParams["flash5cd"] := 25000
cdParams["stone2cd"] := 6000
cdParams["stone3cd"] := 12000
cdParams["stone4cd"] := 30000
cdParams["stone5cd"] := 30000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 10
cdParams["ty4cd"] := 10
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 10
bdtext := "[&DQYfGRE+Qz50AAAAywAAAHIAAABPAQAAJgAAAAAAAAAAAAAAAAAAAAAAAAACNgBnAAA=]"
wptext:= "枪号野外元晶`n武器：枪号角 超级折磨、超级焚烧、超级大地，超级弱点`n装备：毒蛇套 `n符文古物：超级陷阱，魔像古物 `n食物扳手：症状食物 蛋糕`n灌注：90症状"
}
if (bdlist == "节号野外元晶") {
sleepParams["fire2sleep"] := 680
sleepParams["fire3sleep"] := 480
sleepParams["fire4sleep"] := 850
sleepParams["fire5sleep"] := 860
sleepParams["flash2sleep"] := 10
sleepParams["flash3sleep"] := 10
sleepParams["flash4sleep"] := 600
sleepParams["flash5sleep"] := 430
sleepParams["stone2sleep"] := 500
sleepParams["stone3sleep"] := 550
sleepParams["stone4sleep"] := 800
sleepParams["stone5sleep"] := 840
sleepParams["water2sleep"] := 600
sleepParams["water3sleep"] := 850
sleepParams["water4sleep"] := 550
sleepParams["water5sleep"] := 550
sleepParams["ty1sleep"] := 680
sleepParams["ty2sleep"] := 610
sleepParams["ty3sleep"] := 1200
sleepParams["ty4sleep"] := 10
sleepParams["ty5sleep"] := 1200
sleepParams["ty52sleep"] := 10
sleepParams["f2sleep"] := 1
sleepParams["f22sleep"] := 1
cdParams["fire2cd"] := 4000
cdParams["fire3cd"] := 9000
cdParams["fire4cd"] := 24000
cdParams["fire5cd"] := 24000
cdParams["water2cd"] := 4000
cdParams["water3cd"] := 12000
cdParams["water4cd"] := 24000
cdParams["water5cd"] := 24000
cdParams["flash2cd"] := 8000
cdParams["flash3cd"] := 12000
cdParams["flash4cd"] := 25000
cdParams["flash5cd"] := 25000
cdParams["stone2cd"] := 6000
cdParams["stone3cd"] := 12000
cdParams["stone4cd"] := 30000
cdParams["stone5cd"] := 30000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 10
cdParams["ty4cd"] := 10
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 10
bdtext := "[&DQYfGRE+Qz50AAAAywAAAHIAAABPAQAAJgAAAAAAAAAAAAAAAAAAAAAAAAADVgBnADYAAA==]"
wptext:= "节号野外元晶`n武器：节号角 超级武勇、超级否决`n装备：狂战套\破击者 `n符文古物：超级猎龙，魔像古物、萨奇洛斯古物 `n食物扳手：芦笋牛排 超级磨刀 蛋糕`n灌注：90威力"
}
if (bdlist == "大锤野外元晶") {
sleepParams["fire2sleep"] := 760
sleepParams["fire3sleep"] := 10
sleepParams["fire4sleep"] := 560
sleepParams["fire5sleep"] := 760
sleepParams["fire22sleep"] := 0
sleepParams["fire32sleep"] := 0
sleepParams["fire42sleep"] := 0
sleepParams["fire52sleep"] := 0
sleepParams["water2sleep"] := 1060
sleepParams["water3sleep"] := 0
sleepParams["water4sleep"] := 960
sleepParams["water5sleep"] := 480
sleepParams["water22sleep"] := 550
sleepParams["water32sleep"] := 0
sleepParams["water42sleep"] := 0
sleepParams["water52sleep"] := 550
sleepParams["flash2sleep"] := 2430
sleepParams["flash3sleep"] := 0
sleepParams["flash4sleep"] := 430
sleepParams["flash5sleep"] := 280
sleepParams["flash22sleep"] := 550
sleepParams["flash32sleep"] := 0
sleepParams["flash42sleep"] := 0
sleepParams["flash52sleep"] := 550
sleepParams["stone2sleep"] := 1560
sleepParams["stone3sleep"] := 0
sleepParams["stone4sleep"] := 0
sleepParams["stone5sleep"] := 760
sleepParams["stone22sleep"] := 550
sleepParams["stone32sleep"] := 0
sleepParams["stone42sleep"] := 0
sleepParams["stone52sleep"] := 550
sleepParams["f1sleep"] := 150
sleepParams["f12sleep"] := 150
sleepParams["f2sleep"] := 15
sleepParams["f3sleep"] := 3150
sleepParams["f4sleep"] := 150
sleepParams["f5sleep"] := 1250
sleepParams["f52sleep"] := 1
sleepParams["ty4sleep"] := 1100
sleepParams["ty2sleep"] := 350
sleepParams["ty3sleep"] := 1100
sleepParams["ty5sleep"] := 1350
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 18000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 0
cdParams["twp3cd"] := 0
cdParams["twp4cd"] := 0
cdParams["twp5cd"] := 0
cdParams["ty1cd"] := 24000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 0
cdParams["ty4cd"] := 12000
cdParams["ty5cd"] := 90000
bdtext := "[&DQYfGRE+Qz50AAAAywAAAHIAAABPAQAAJgAAAAAAAAAAAAAAAAAAAAAAAAABMwAA]"
wptext:= "大锤野外元晶`n武器：大锤 超级力量、超级否决`n装备：破击者 `n符文古物：超级猎龙，萨奇洛斯古物`n食物扳手：芦笋牛排 超级磨刀 蛋糕`n灌注：90威力"
}
if (bdlist == "奶急速狂战") {
sleepParams["wp2sleep"] := 710
sleepParams["wp3sleep"] := 1400
sleepParams["wp4sleep"] := 600
sleepParams["wp5sleep"] := 550
sleepParams["f1sleep"] := 560
sleepParams["f2sleep"] := 150
sleepParams["f12sleep"] := 550
sleepParams["ty1sleep"] := 1000
sleepParams["ty2sleep"] := 10
sleepParams["ty3sleep"] := 10
sleepParams["ty4sleep"] := 720
sleepParams["ty5sleep"] := 1350
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 18000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 0
cdParams["twp3cd"] := 0
cdParams["twp4cd"] := 0
cdParams["twp5cd"] := 0
cdParams["ty1cd"] := 24000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 0
cdParams["ty4cd"] := 12000
cdParams["ty5cd"] := 90000
bdtext := "[&DQIzNwsqEimmAKYAqACoAGoAagCwAK8AnADuAAAAAAAAAAAAAAAAAAAAAAABWQAA]"
wptext:= "奶急速狂战`n武器：法杖 超级专注、超级转移`n装备：诗人+猎兔 `n符文古物：超级僧侣，预告者古物`n食物扳手：芦笋牛排 超级磨刀 蛋糕`n灌注：90威力"
}
if (bdlist == "步枪神枪手") {
sleepParams["wp2sleep"] := 1
sleepParams["wp3sleep"] := 830
sleepParams["wp4sleep"] := 1
sleepParams["wp5sleep"] := 1
sleepParams["f1sleep"] := 300
sleepParams["f2sleep"] := 150
sleepParams["f12sleep"] := 550
sleepParams["ty1sleep"] := 800
sleepParams["ty2sleep"] := 10
sleepParams["ty3sleep"] := 150
sleepParams["ty4sleep"] := 550
sleepParams["ty5sleep"] := 550
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 18000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 0
cdParams["twp3cd"] := 0
cdParams["twp4cd"] := 0
cdParams["twp5cd"] := 0
cdParams["ty1cd"] := 25000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 1
cdParams["ty4cd"] := 30000
cdParams["ty5cd"] := 25000
cdParams["f1cd"] := 25000
bdtext := "[&DQUjGxw9Oh0MAQwBMwEAACAXAAAfFgAAPRYAAAAAAAAAAAAAAAAAAAAAAAACNgBVAAA=]"
wptext:= "步枪神枪手`n武器：步枪 超级武勇，超级冲击`n装备：背部刺客，其余狂战套 `n符文古物：超级猎龙，神枪手古物`n食物扳手：芦笋牛排 超级磨刀 蛋糕`n灌注：90威力"
}
if (bdlist == "双枪急速神枪手") {
sleepParams["wp2sleep"] := 480
sleepParams["wp3sleep"] := 1310
sleepParams["wp4sleep"] := 450
sleepParams["wp5sleep"] := 550
sleepParams["twp3sleep"] := 880
sleepParams["f1sleep"] := 350
sleepParams["f2sleep"] := 150
sleepParams["f12sleep"] := 550
sleepParams["ty1sleep"] := 800
sleepParams["ty2sleep"] := 800
sleepParams["ty3sleep"] := 10
sleepParams["ty4sleep"] := 500
sleepParams["ty5sleep"] := 550
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 18000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 0
cdParams["twp3cd"] := 0
cdParams["twp4cd"] := 0
cdParams["twp5cd"] := 0
cdParams["ty1cd"] := 25000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 1
cdParams["ty4cd"] := 30000
cdParams["ty5cd"] := 25000
cdParams["f1cd"] := 17000
bdtext := "[&DQUjPywnOj+FAAAA5BYAAFsBAAAfFgAAPRYAAAAAAAAAAAAAAAAAAAAAAAACNgBVAAA=]"
wptext:= "双枪急速神枪手`n武器：双枪 超级专注，超级弱点`n装备：装备狂战，首饰神谕者，确保增益大于60 `n符文古物：超级猎龙，萨奇洛斯古物、预告者古物、魔像古物`n食物扳手：芦笋牛排 超级磨刀 蛋糕`n灌注：90威力`n利用F2的特性，实现给队友提供极速，适合野外混事件，吸血+穿透可保证续航`n另外，支持切换为步枪，手动蹲下后，仍可自动循环"
}
if (bdlist == "双枪野外神枪手") {
sleepParams["wp2sleep"] := 480
sleepParams["wp3sleep"] := 1310
sleepParams["wp4sleep"] := 450
sleepParams["wp5sleep"] := 550
sleepParams["twp3sleep"] := 880
sleepParams["f1sleep"] := 350
sleepParams["f2sleep"] := 150
sleepParams["f12sleep"] := 550
sleepParams["ty1sleep"] := 800
sleepParams["ty2sleep"] := 850
sleepParams["ty3sleep"] := 10
sleepParams["ty4sleep"] := 500
sleepParams["ty5sleep"] := 550
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 18000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 0
cdParams["twp3cd"] := 0
cdParams["twp4cd"] := 0
cdParams["twp5cd"] := 0
cdParams["ty1cd"] := 25000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 1
cdParams["ty4cd"] := 30000
cdParams["ty5cd"] := 25000
cdParams["f1cd"] := 17000
bdtext := "[&DQUjPywmOi+FAAAA5BYAAFsBAAAzAQAAKAAAAAAAAAAAAAAAAAAAAAAAAAACNgBVAAA=]"
wptext:= "双枪野外神枪手`n武器：双枪 超级迅敏，超级弱点`n装备：装备狂战，2个饰品神谕者，确保增益大于20+ `n符文古物：超级猎龙，萨奇洛斯古物、神枪手古物`n食物扳手：芦笋牛排 超级磨刀 蛋糕`n灌注：90威力`n这套bd利用暴击伤害，提供持续吸血，只需要走位即可，无需任何其他操作。"
}
if (bdlist == "七星野外神枪手") {
sleepParams["wp2sleep"] := 480
sleepParams["wp3sleep"] := 1310
sleepParams["wp4sleep"] := 450
sleepParams["wp5sleep"] := 550
sleepParams["twp3sleep"] := 880
sleepParams["f1sleep"] := 350
sleepParams["f2sleep"] := 150
sleepParams["f12sleep"] := 550
sleepParams["ty1sleep"] := 800
sleepParams["ty2sleep"] := 850
sleepParams["ty3sleep"] := 10
sleepParams["ty4sleep"] := 500
sleepParams["ty5sleep"] := 550
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 12000
cdParams["wp4cd"] := 18000
cdParams["wp5cd"] := 20000
cdParams["twp2cd"] := 0
cdParams["twp3cd"] := 0
cdParams["twp4cd"] := 0
cdParams["twp5cd"] := 0
cdParams["ty1cd"] := 25000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 1
cdParams["ty4cd"] := 30000
cdParams["ty5cd"] := 25000
cdParams["f1cd"] := 17000
bdtext := "[&DQUjPywmOh+FAAAA5BYAAFsBAAAfFgAAPRYAAAAAAAAAAAAAAAAAAAAAAAACNgBVAAA=]"
wptext:= "七星野外神枪手`n武器：双枪 超级专注，超级弱点`n装备：装备狂战，首饰神谕者，确保增益大于60 `n符文古物：超级猎龙，萨奇洛斯古物、神枪手古物`n食物扳手：芦笋牛排 超级磨刀 蛋糕`n灌注：90威力`n利用七星先攻值特性，提供额外增益，可确保保护，再生覆盖大于90，间接提高生存"
}
if (bdlist == "节匕直伤元晶") {
sleepParams["fire2sleep"] := 650
sleepParams["fire3sleep"] := 460
sleepParams["fire4sleep"] := 400
sleepParams["fire5sleep"] := 550
sleepParams["water2sleep"] := 550
sleepParams["water3sleep"] := 650
sleepParams["water4sleep"] := 10
sleepParams["water42sleep"] := 350
sleepParams["water5sleep"] := 800
sleepParams["flash2sleep"] := 50
sleepParams["flash3sleep"] := 10
sleepParams["flash4sleep"] := 50
sleepParams["flash5sleep"] := 800
sleepParams["stone2sleep"] := 800
sleepParams["stone3sleep"] := 350
sleepParams["stone4sleep"] := 680
sleepParams["stone5sleep"] := 500
sleepParams["stone22sleep"] := 100
sleepParams["f1sleep"] := 120
sleepParams["f12sleep"] := 150
sleepParams["f2sleep"] := 120
sleepParams["f3sleep"] := 120
sleepParams["f4sleep"] := 120
sleepParams["f5sleep"] := 10
sleepParams["f51sleep"] := 1100
sleepParams["f52sleep"] := 1
sleepParams["ty1sleep"] := 640
sleepParams["ty2sleep"] := 300
sleepParams["ty3sleep"] := 10
sleepParams["ty4sleep"] := 980
sleepParams["ty5sleep"] := 300
cdParams["fire2cd"] := 4000
cdParams["fire3cd"] := 8000
cdParams["fire4cd"] := 12000
cdParams["fire5cd"] := 16000
cdParams["water2cd"] := 3000
cdParams["water3cd"] := 1000
cdParams["water4cd"] := 10000
cdParams["water5cd"] := 20000
cdParams["flash2cd"] := 4000
cdParams["flash3cd"] := 8000
cdParams["flash4cd"] := 16000
cdParams["flash5cd"] := 16000
cdParams["stone2cd"] := 8000
cdParams["stone3cd"] := 15000
cdParams["stone4cd"] := 16000
cdParams["stone5cd"] := 20000
cdParams["ty1cd"] := 24000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 0
cdParams["ty4cd"] := 12000
cdParams["ty5cd"] := 90000
bdtext := "[&DQYfHSkfQyYnDwAA+BoAAFABAAC+AQAA9xoAAAAAAAAAAAAAAAAAAAAAAAAEVgAvADYAZwAA]"
wptext:= "节匕直伤元晶`n武器：节杖 超级武勇、超级冲击/空气`n装备：狂战套 `n符文古物：烟花古物\血石古物`n食物扳手：芦笋牛排 超级磨刀 蛋糕`n灌注：90威力"
}
if (bdlist == "节匕直伤元晶2") {
sleepParams["fire2sleep"] := 680
sleepParams["fire3sleep"] := 400
sleepParams["fire4sleep"] := 480
sleepParams["fire5sleep"] := 550
sleepParams["water2sleep"] := 400
sleepParams["water3sleep"] := 660
sleepParams["water4sleep"] := 10
sleepParams["water42sleep"] := 350
sleepParams["water5sleep"] := 800
sleepParams["flash2sleep"] := 50
sleepParams["flash3sleep"] := 10
sleepParams["flash4sleep"] := 120
sleepParams["flash5sleep"] := 800
sleepParams["stone2sleep"] := 800
sleepParams["stone3sleep"] := 320
sleepParams["stone4sleep"] := 670
sleepParams["stone5sleep"] := 960
sleepParams["stone22sleep"] := 100
sleepParams["f1sleep"] := 120
sleepParams["f12sleep"] := 150
sleepParams["f2sleep"] := 120
sleepParams["f3sleep"] := 120
sleepParams["f4sleep"] := 120
sleepParams["f5sleep"] := 10
sleepParams["f51sleep"] := 1100
sleepParams["f52sleep"] := 1
sleepParams["ty1sleep"] := 640
sleepParams["ty2sleep"] := 250
sleepParams["ty3sleep"] := 10
sleepParams["ty4sleep"] := 980
sleepParams["ty5sleep"] := 300
cdParams["fire2cd"] := 4000
cdParams["fire3cd"] := 8000
cdParams["fire4cd"] := 12000
cdParams["fire5cd"] := 16000
cdParams["water2cd"] := 3000
cdParams["water3cd"] := 1000
cdParams["water4cd"] := 10000
cdParams["water5cd"] := 20000
cdParams["flash2cd"] := 4000
cdParams["flash3cd"] := 8000
cdParams["flash4cd"] := 16000
cdParams["flash5cd"] := 16000
cdParams["stone2cd"] := 8000
cdParams["stone3cd"] := 15000
cdParams["stone4cd"] := 16000
cdParams["stone5cd"] := 20000
cdParams["ty1cd"] := 24000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 0
cdParams["ty4cd"] := 12000
cdParams["ty5cd"] := 90000
bdtext := "[&DQYfHSkfQyYnDwAA+BoAAFABAAC+AQAA9xoAAAAAAAAAAAAAAAAAAAAAAAAEVgAvADYAZwAA]"
wptext:= "节匕直伤元晶`n武器：节杖 超级武勇、超级冲击/空气`n装备：狂战套 `n符文古物：烟花古物\血石古物`n食物扳手：芦笋牛排 超级磨刀 蛋糕`n灌注：90威力"
}
if (bdlist == "长矛直伤元晶") {
sleepParams["fire2sleep"] := 560
sleepParams["fire3sleep"] := 550
sleepParams["fire4sleep"] := 660
sleepParams["fire5sleep"] := 300
sleepParams["fire52sleep"] := 600
sleepParams["water2sleep"] := 850
sleepParams["water3sleep"] := 800
sleepParams["water4sleep"] := 700
sleepParams["water5sleep"] := 300
sleepParams["water52sleep"] := 600
sleepParams["flash2sleep"] := 550
sleepParams["flash3sleep"] := 10
sleepParams["flash4sleep"] := 600
sleepParams["flash5sleep"] := 300
sleepParams["flash52sleep"] := 600
sleepParams["stone2sleep"] := 680
sleepParams["stone3sleep"] := 300
sleepParams["stone4sleep"] := 680
sleepParams["stone5sleep"] := 300
sleepParams["stone52sleep"] := 600
sleepParams["f1sleep"] := 120
sleepParams["f12sleep"] := 150
sleepParams["f2sleep"] := 120
sleepParams["f3sleep"] := 120
sleepParams["f4sleep"] := 120
sleepParams["f5sleep"] := 10
sleepParams["f51sleep"] := 1100
sleepParams["f52sleep"] := 1
sleepParams["ty1sleep"] := 640
sleepParams["ty2sleep"] := 250
sleepParams["ty3sleep"] := 10
sleepParams["ty4sleep"] := 1000
sleepParams["ty5sleep"] := 300
cdParams["fire2cd"] := 4000
cdParams["fire3cd"] := 8000
cdParams["fire4cd"] := 12000
cdParams["fire5cd"] := 20000
cdParams["water2cd"] := 3000
cdParams["water3cd"] := 1000
cdParams["water4cd"] := 10000
cdParams["water5cd"] := 25000
cdParams["flash2cd"] := 4000
cdParams["flash3cd"] := 8000
cdParams["flash4cd"] := 16000
cdParams["flash5cd"] := 20000
cdParams["stone2cd"] := 8000
cdParams["stone3cd"] := 15000
cdParams["stone4cd"] := 16000
cdParams["stone5cd"] := 25000
cdParams["ty1cd"] := 24000
cdParams["ty2cd"] := 20000
cdParams["ty3cd"] := 0
cdParams["ty4cd"] := 12000
cdParams["ty5cd"] := 90000
bdtext := "[&DQYfHSkfQyZ0AAAA+BoAAFABAAC+AQAA9xoAAAAAAAAAAAAAAAAAAAAAAAACCQEzAAA=]"
wptext:= "长矛直伤元晶`n武器：长矛 超级武勇、超级冲击`n装备：狂战套 `n符文古物：烟花古物`n食物扳手：芦笋牛排 超级磨刀 蛋糕`n灌注：90威力"
}
if (bdlist == "症状极速预告") {
sleepParams["wp2sleep"] := 510
sleepParams["wp3sleep"] := 550
sleepParams["wp4sleep"] := 750
sleepParams["wp5sleep"] := 600
sleepParams["twp2sleep"] := 740
sleepParams["twp3sleep"] := 430
sleepParams["twp4sleep"] := 390
sleepParams["twp5sleep"] := 510
sleepParams["ty1sleep"] := 50
sleepParams["ty2sleep"] := 50
sleepParams["ty3sleep"] := 50
sleepParams["ty4sleep"] := 50
sleepParams["ty5sleep"] := 50
sleepParams["ty21sleep"] := 500
sleepParams["ty22sleep"] := 430
sleepParams["ty23sleep"] := 800
sleepParams["ty24sleep"] := 550
sleepParams["ty25sleep"] := 10
sleepParams["f1sleep"] := 150
sleepParams["f2sleep"] := 500
sleepParams["f3sleep"] := 600
sleepParams["f4sleep"] := 10
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 10000
cdParams["wp4cd"] := 15000
cdParams["wp5cd"] := 15000
cdParams["twp2cd"] := 3000
cdParams["twp3cd"] := 8000
cdParams["twp4cd"] := 10000
cdParams["twp5cd"] := 15000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 12000
cdParams["ty4cd"] := 12000
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 20000
bdtext := "[&DQkOFQMuNBXcEdwRKxIGEtQRKxIGEtQRyhHKEQQBAwEGEisS1BErEtQRBhICCQFaAAA=]"
wptext:= "症状极速预告bd已复制，可进游戏粘贴`n武器：长矛、短弓 手动切换`n装备：毒蛇套\天界套`n符文古物：超级噩梦，望族古物`n法印：超级折磨、超级噩梦、超级弱点`n食物扳手：蛋糕、威能食物任意`n灌注：90症状`n循环中为单武器，由于距离不同，需手动切换，可根据场景选择，挂机用短弓，战斗用长矛"
}
if (bdlist == "长矛症状龙魂") {
sleepParams["wp2sleep"] := 510
sleepParams["wp3sleep"] := 550
sleepParams["wp4sleep"] := 750
sleepParams["wp5sleep"] := 600
sleepParams["twp2sleep"] := 730
sleepParams["twp3sleep"] := 960
sleepParams["twp4sleep"] := 500
sleepParams["twp5sleep"] := 560
sleepParams["ty1sleep"] := 530
sleepParams["ty2sleep"] := 530
sleepParams["ty3sleep"] := 530
sleepParams["ty4sleep"] := 530
sleepParams["ty5sleep"] := 530
sleepParams["ty21sleep"] := 500
sleepParams["ty22sleep"] := 430
sleepParams["ty23sleep"] := 800
sleepParams["ty24sleep"] := 550
sleepParams["ty25sleep"] := 10
sleepParams["f1sleep"] := 150
sleepParams["f2sleep"] := 500
sleepParams["f3sleep"] := 600
sleepParams["f4sleep"] := 10
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 9000
cdParams["wp4cd"] := 16000
cdParams["wp5cd"] := 24000
cdParams["twp2cd"] := 8000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 20000
cdParams["twp5cd"] := 24000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 12000
cdParams["ty4cd"] := 12000
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 20000
bdtext := "[&DQkOHQMmPyrcEdwR1BEGEisSKxIGEtQRyhHKEQUEAgArEtQRBhIAAAAAAAADNQAFAAkBAA==]"
wptext:= "长矛症状龙魂bd已复制，可进游戏粘贴`n武器：长矛、锤斧`n装备：毒蛇套`n符文古物：超级陷阱师、碎层古物`n法印：枪：超级折磨、超级地能  锤斧：超级大地，超级厄运`n食物扳手：蛋糕、威能食物任意`n灌注：90症状`n"
}
if (bdlist == "奶机械") {
sleepParams["wp2sleep"] := 550
sleepParams["wp3sleep"] := 550
sleepParams["wp4sleep"] := 550
sleepParams["wp5sleep"] := 550
sleepParams["twp2sleep"] := 730
sleepParams["twp3sleep"] := 960
sleepParams["twp4sleep"] := 500
sleepParams["twp5sleep"] := 560
sleepParams["ty1sleep"] := 550
sleepParams["ty2sleep"] := 390
sleepParams["ty3sleep"] := 550
sleepParams["ty4sleep"] := 10
sleepParams["ty5sleep"] := 860
sleepParams["ty21sleep"] := 500
sleepParams["ty22sleep"] := 430
sleepParams["ty23sleep"] := 800
sleepParams["ty24sleep"] := 550
sleepParams["ty25sleep"] := 10
sleepParams["f1sleep"] := 550
sleepParams["f2sleep"] := 10
sleepParams["f3sleep"] := 550
sleepParams["f4sleep"] := 10
sleepParams["f5sleep"] := 550
cdParams["wp2cd"] := 6000
cdParams["wp3cd"] := 9000
cdParams["wp4cd"] := 16000
cdParams["wp5cd"] := 24000
cdParams["twp2cd"] := 8000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 20000
cdParams["twp5cd"] := 24000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 12000
cdParams["ty4cd"] := 12000
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 20000
bdtext := "[&DQMdJS83KyXZEhQBJxNfAQEBAAAOE4YAiQEAAAAAAAAAAAAAAAAAAAAAAAADawA1AFcAAA==]"
wptext:= "奶机械bd已复制，可进游戏粘贴`n武器：短弓`n装备：左侧诗人，右侧猎兔`n符文古物：超级僧侣、午夜国王古物`n法印：超级寒冰、超级转移`n食物扳手：蛋糕、威能食物任意`n灌注：90治疗`n"
}
if (bdlist == "节匕症状暴风") {
sleepParams["fire2sleep"] := 680
sleepParams["fire3sleep"] := 480
sleepParams["fire4sleep"] := 480
sleepParams["fire5sleep"] := 300
sleepParams["fire52sleep"] := 550
sleepParams["flash2sleep"] := 10
sleepParams["flash3sleep"] := 10
sleepParams["flash4sleep"] := 110
sleepParams["flash5sleep"] := 1000
sleepParams["ty1sleep"] := 960
sleepParams["ty2sleep"] := 530
sleepParams["ty3sleep"] := 1110
sleepParams["ty4sleep"] := 10
sleepParams["ty5sleep"] := 1110
sleepParams["ty52sleep"] := 10
sleepParams["f1sleep"] := 150
sleepParams["f2sleep"] := 150
sleepParams["f3sleep"] := 130
sleepParams["f4sleep"] := 150
cdParams["fire2cd"] := 4000
cdParams["fire3cd"] := 8000
cdParams["fire4cd"] := 12000
cdParams["fire5cd"] := 16000
cdParams["twp2cd"] := 8000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 20000
cdParams["twp5cd"] := 24000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 12000
cdParams["ty4cd"] := 12000
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 20000
bdtext := "[&DQYfNSkfMBcnDwAAywAAAL4BAADDEgAAJgAAAAAAAAAAAAAAAAAAAAAAAAADVgAvAAkBAA==]"
wptext:= "节匕症状暴风bd已复制，可进游戏粘贴`n武器：节匕`n装备：狂战套`n符文古物：超级烈焰军团、血石古物`n法印：超级焚烧，超级精确`n食物扳手：蛋糕、症状食物任意`n灌注：90症状`n"
}
if (bdlist == "节聚敏捷暴风") {
sleepParams["fire2sleep"] := 680
sleepParams["fire3sleep"] := 480
sleepParams["fire4sleep"] := 560
sleepParams["fire5sleep"] := 100
sleepParams["fire52sleep"] := 550
sleepParams["flash2sleep"] := 10
sleepParams["flash3sleep"] := 10
sleepParams["flash4sleep"] := 110
sleepParams["flash5sleep"] := 1000
sleepParams["ty1sleep"] := 960
sleepParams["ty2sleep"] := 530
sleepParams["ty3sleep"] := 1110
sleepParams["ty4sleep"] := 10
sleepParams["ty5sleep"] := 1110
sleepParams["ty52sleep"] := 10
sleepParams["f1sleep"] := 150
sleepParams["f2sleep"] := 150
sleepParams["f3sleep"] := 130
sleepParams["f4sleep"] := 150
cdParams["fire2cd"] := 4000
cdParams["fire3cd"] := 8000
cdParams["fire4cd"] := 12000
cdParams["fire5cd"] := 16000
cdParams["twp2cd"] := 8000
cdParams["twp3cd"] := 12000
cdParams["twp4cd"] := 20000
cdParams["twp5cd"] := 24000
cdParams["ty1cd"] := 10
cdParams["ty2cd"] := 10
cdParams["ty3cd"] := 12000
cdParams["ty4cd"] := 12000
cdParams["ty5cd"] := 10
cdParams["f4cd"] := 20000
bdtext := "[&DQYRLh8dMDcnDwAAywAAAL4BAADDEgAAJgAAAAAAAAAAAAAAAAAAAAAAAAADVgAxAC8AAA==]"
wptext:= "节聚敏捷暴风bd已复制，可进游戏粘贴`n武器：节聚`n装备：狂战套`n符文古物：超级烈焰军团、血石古物`n法印：超级焚烧，超级精确`n食物扳手：蛋糕、症状食物任意`n灌注：90症状`n"
}
types:=  bdlist . "sleep"
for key, value in sleepParams
{
IniRead, %key%, %bdFilePath%, %type%, %key%
if (%key% = "" or %key% = "ERROR") {
%key% := value
}
}
for key, value in cdParams
{
IniRead, %key%, %bdFilePath%, %type%, %key%
if (%key% = "" or %key% = "ERROR") {
%key% := value
}
}
keyParams := Object()
keyParams["wp1key"] := "1"
keyParams["wp2key"] := "2"
keyParams["wp3key"] := "3"
keyParams["wp4key"] := "4"
keyParams["wp5key"] := "5"
keyParams["ty1key"] := "e"
keyParams["ty2key"] := "x"
keyParams["ty3key"] := "c"
keyParams["ty4key"] := "z"
keyParams["ty5key"] := "b"
keyParams["f1key"] := "F1"
keyParams["f2key"] := "F2"
keyParams["f3key"] := "F3"
keyParams["f4key"] := "F4"
keyParams["f5key"] := "F5"
keyParams["qwqkey"] := "`"
keyParams["startkey"] := "capslock"
keyParams["savecolorkey"] := "F9"
keyParams["savekey"] := "F10"
keyParams["rollkey"] := "v"
for key, value in keyParams
{
IniRead, %key%, %iniFilePath%, Hotkeys, %key%
if (%key% = "ERROR") {
%key% := value
}
}
if(bdlist!="ERROR")
{
if(qishou=="ERROR" or  xunhuan=="ERROR" or pomie=="ERROR")
{
if(bdlist=="大剑直伤时空")
{
default_qishou := "ty2,wp3,wp5,wp2,twp4,twp2,twp3"
xunhuan := "ty42,twp4,ty1,twp4,f1,f2,twp2,twp3,wp5,wp3,wp2,ty2,ty3,ty4,ty41,ty5"
pomie:="ty5,f3,twp5,wp4"
}
if(bdlist=="野外步枪时空")
{
default_qishou := "ty5"
xunhuan := "ty5,wp3,wp2,wp4,wp5,twp3,twp5,twp4,twp2,ty2,ty1"
pomie:=""
}
if(bdlist=="步枪奶时空")
{
default_qishou := "twp2,f5,ty3,twp3,ty2"
xunhuan := "ty1,twp2,twp3,twp5,ty3,ty2,ty5"
pomie:="twp4,f3,ty4,ty51"
}
if(bdlist=="大剑直伤灵刃")
{
default_qishou := "ty2,wp3,wp5,wp2,twp4,twp2,twp3,f5,ty5"
xunhuan := "ty1,twp4,twp2,twp3,wp5,wp3,wp2,f1,f2,f5,f3,ty2,ty3,ty5,ty4,ty41"
pomie:="f3,twp5,wp4"
}
if(bdlist=="匕首症状灵刃")
{
default_qishou := "wp3,wp5,f5,ty5"
xunhuan := "f2,f1,f5,f3,ty4,wp5,twp5,wp3,wp2,ty5,ty1"
pomie:="f3,wp4"
}
if(bdlist=="匕斧破法")
{
default_qishou := "ty4,f1,ty2"
xunhuan := "ty2,f1,wp5,wp3,wp4,twp4,twp5,wp1"
pomie:="wp3,twp5,ty2 "
}
if(bdlist=="长弓大剑猎龙")
{
default_qishou := "ty4,ty3,f1,twp4,twp2,twp5,wp3,wp4,wp2"
xunhuan := "twp4,f1,ty4,ty3,twp2,twp5,twp3,wp4,f3,wp2,wp3,wp5,ty5"
}
if(bdlist=="匕枪杖野外蜃楼")
{
default_qishou := "wp5,twp3,twp4,wp4,wp3,wp2,twp5,twp2"
xunhuan := "wp2,wp5,wp4,twp5,twp2,twp3,twp4,fr"
pomie:="wp5,f3,twp5"
}
if(bdlist=="长弓野外狂兽")
{
default_qishou := "f51,ty4,ty5,ty2,wp4,ty1,wp2,wp5"
xunhuan := "ty4,ty5,ty2,wp4,ty1,wp2,wp5,f51"
pomie:="wp4"
}
if(bdlist=="双剑杖野外夺魂")
{
default_qishou := "twp5,twp4,twp3,twp2,wp5,wp4,wp3,wp2,ty2,ty3,ty4,f1"
xunhuan := "wp5,wp4,wp3,wp2,twp5,twp4,twp3,twp2,ty2,ty3,ty4,ty5,f1,wm3,wm5,wm4"
pomie:="twp5,twp3,ty5"
}
if(bdlist=="节火杖野外灾厄")
{
default_qishou := "ty5,twp5,twp3,twp4,twp2,wp5,wp4,wp3,wp2,f1,f4"
xunhuan := "f1,f5,f3,f2,f4,ty5,ty4,wp5,wp4,wp3,wp2,twp5,twp3,twp4,twp2"
pomie:="ty52,wp2,wp5,twp5,twp3,f4"
}
if(bdlist=="枪火症状灾厄")
{
default_qishou := "f1,ty3"
xunhuan := "f52,ty12,f5,ty5,ty2,ty32,f1,wp3,wp2,twp3,twp2,twp4,twp5"
pomie:="wp3,wp5,f4"
}
if(bdlist=="治疗敏捷灾厄")
{
default_qishou := "ty5,f1,wp3,wp2,wp4,wp5,twp2,twp3,twp5"
xunhuan := "f5,f3,f2,f1,ty1,ty4,ty2,wp3,wp2,wp4,wp5,twp3,twp2,twp5"
pomie:="wp3,wp5,f4,twp4,ty52"
}
if(bdlist=="双剑杖野外先驱")
{
default_qishou := "wm2,f11,ty2,ty1,ty5,twp3,twp2,wp5,wp4,wp2,f1"
xunhuan := "ty4,ty2,ty5,ty3,ty1,twp5,twp2,twp3,twp4,wp5,wp4,wp2,wm2,f1"
pomie:="wp5,twp5,twp3,ty52"
}
if(bdlist=="枪火野外先驱")
{
default_qishou := "wm2,f11,ty4,ty2,ty1,ty5,wp2,wp3,wp4,wp5,twp5,twp3,twp2,f1"
xunhuan := "ty42,ty2,ty5,ty3,ty32,ty4,ty1,twp5,twp2,twp3,twp4,wp2,wp3,wp4,wp5,wm2,wm3,wm4,wm5,f1"
pomie:="wp5,wp3,twp5"
}
if(bdlist=="剑锤野外狂兽")
{
default_qishou := "wp3,twp3,ty2"
xunhuan := "ty3,ty2,ty4,,ty5,ty1,wp2,wp3,wp4,wp5,twp2,twp3,twp4,twp5"
pomie:="wp5,twp5,ty5"
}
if(bdlist=="斧锤野外破峰")
{
default_qishou := "ty4,ty5,twp2,f1,twp4,wp2,wp3,wp4,wp5"
xunhuan := "f3,ty1,wp5,ty4,ty5,f1,twp4,wp2,wp3,wp4,f3,ty2,ty3,ty4,ty5"
pomie:="wp3,twp4,twp3"
}
if(bdlist=="三剑野外破峰")
{
default_qishou := "ty4,ty5,wp3,wp5,wp52,f1,wp4,wp2,twp3,twp2"
xunhuan := "ty5,ty4,ty1,f1,wp52,twp5,ty3,ty2,wp3,wp4,wp2,wp5,f3,twp3,twp3,twp2,twp4"
pomie:=""
}
if(bdlist=="步枪野外丁真")
{
default_qishou := "ty32"
xunhuan := "ty4,wp4,wp3,wp2,ty32,ty5,f1,f2,f3"
pomie:="wp4"
}
if(bdlist=="大锤直伤机械")
{
default_qishou := "ty1,ty12,twp2,twp4,tpw5,ty32"
xunhuan := "twp5,twp4,ty12,f4,f42,ty4,ty42,wp2,ty32,f3,f5,wp5,ty2,f2,f1,f12"
pomie:="wp5,ty4,f4"
}
if(bdlist=="大锤直伤暴风")
{
default_qishou := "water2,fire4,fire5,stone2"
xunhuan := "f3,f31,f34,f32,ty5,f1,f2,f4,ty4,flash5,flash2"
pomie:=""
}
if(bdlist=="辅助奶燃火")
{
default_qishou := "f1,f2,f3,f5"
xunhuan := "ty5,wp4,f1,f2,f3,wp2,wp3,twp2,twp3,twp4"
pomie:="twp5,twp3"
}
if(bdlist=="直伤敏捷龙魂")
{
default_qishou := "f4,ty24,twp3,twp5,ty3"
xunhuan := "f4,f3,ty24,ty2,ty3,twp5,twp2,wp5,wp4,wp2,ty5"
pomie:="ty2,ty25"
}
if(bdlist=="直伤极速预告")
{
default_qishou := "ty24,twp5,twp2,wp5,wp4,wp2"
xunhuan := "ty24,ty2,ty3,ty4,ty5,ty42,ty32,twp5,twp2,wp5,wp4,wp2"
pomie:="ty2,ty25"
}
if(bdlist=="奶预告")
{
default_qishou := ""
xunhuan := "ty2,ty3,ty4,ty5,ty21,ty25,ty23,twp2,twp4,f1,f21"
pomie:="ty25"
}
if(bdlist=="裁决")
{
default_qishou := "ty5,ty24,twp5"
xunhuan := "ty24,f2,f22,twp5,twp4,ty3,twp2,ty5"
pomie:=""
}
if(bdlist=="直伤大剑夺魂")
{
default_qishou := "wp5,wp4,wp3,ty2,ty3,ty4,twp5,twp4,twp3,twp2,f1"
xunhuan := "wm3,wm5,wm4,wp5,wp4,wp3,wp2,ty2,ty3,twp2,twp3,twp5,twp4,f1,ty51"
pomie:="ty5,ty52"
}
if(bdlist=="症状敏缚影")
{
default_qishou := "ty42,ty5,ty2,ty3,f2"
xunhuan := "wp3,ty42,ty2,ty3,f1,ty4,f2,wm2,wm4,wm5"
pomie:="ty52"
}
if(bdlist=="节号症状编织")
{
default_qishou := ""
xunhuan := ""
pomie:=""
}
if(bdlist=="症状输出破峰")
{
default_qishou := "ty5,wp5,f1,ty3,wp2"
xunhuan := "f1,twp3,twp2,twp4,twp5,wp2,wp4,wp5,ty3,ty2,f3"
pomie:="wp5,wp3"
}
if(bdlist=="枪火野外破峰")
{
default_qishou := "ty5,ty4,f1,wp5,ty3,wp4"
xunhuan := "ty5,ty4,f1,ty1,twp4,twp42,twp5,ty3,ty2,f3,wp2,wp3,wp4,wp5"
pomie:=""
}
if(bdlist=="枪聚野外破峰")
{
default_qishou := "ty5,ty4,f1,wp5,ty3,wp4"
xunhuan := "ty5,ty4,f1,ty1,twp4,twp5,ty3,ty2,f3,wp2,wp3,wp4,wp5"
pomie:=""
}
if(bdlist=="剑枪直伤全息")
{
default_qishou := "wp4,f2,f5"
xunhuan := "ty32,wp2,wp5,wp3,wp4,f5,f3,f4,twp3,ty4,ty3,twp4,f1,f2,ty5"
pomie:=""
}
if(bdlist=="症状先驱")
{
default_qishou := "ty2,ty1,ty4,ty3,ty5"
xunhuan := "ty5,wp4,wp5,wp3,f1,wp2,ty2,twp2,twp3,twp5,ty4,wm2,wm3,ty3,ty1,f1,f2"
pomie:=""
}
if(bdlist=="野外直伤龙魂")
{
default_qishou := "ty2,ty3,ty24,ty22"
xunhuan := "wp2,wp5,twp2,twp5,twp4,ty2,ty3,ty21,ty22,f2,f3"
pomie:=""
}
if(bdlist=="斧锤直伤魂兽")
{
default_qishou := "ty5,ty2,f2,twp4,twp2,wp4,wp3,wp2,f1,wp5"
xunhuan := "wp4,wp2,wp3,f1,wp5,f3,ty2,f2,twp4,twp2,twp3,twp5"
pomie:=""
}
if(bdlist=="症状德鲁伊")
{
default_qishou := "ty3,ty2,wp3,wp5,wp4,wp2,wm2,wm5,f51"
xunhuan := "f2,f22,ty3,ty4,ty2,wp3,wp5,wp4,wp2,twp3,twp5,twp4,twp2,ty4,ty5,f5,wm2,wm5,wm3"
pomie:=""
}
if(bdlist=="剑号野外元晶")
{
default_qishou := "flash2,fire2,f2"
xunhuan := "f5,ty2,ty3,ty5,ty52,flash2,flash3,flash5,flash4,fire5,fire3,fire2,stone2,stone3,stone5,stone4,water3,water5,water4,f1,f4,f2,f3"
pomie:=""
}
if(bdlist=="剑号急速元晶")
{
default_qishou := "flash2,fire2"
xunhuan := "f5,ty5,ty52,flash2,flash3,flash5,flash4,fire5,fire2,fire3,stone2,stone3,stone4,stone5,water3,water5,water4,fire4,ty1,ty3,f1,f4,f2,f3"
pomie:="ty3"
}
if(bdlist=="枪号野外元晶")
{
default_qishou := "flash2,fire2"
xunhuan := "f5,ty2,ty3,ty5,ty52,flash2,flash5,flash4,fire5,fire3,fire2,fire4,stone2,stone3,stone5,stone4,water2,water3,water5,water4,f1,f4,f2,f3"
pomie:=""
}
if(bdlist=="节号野外元晶")
{
default_qishou := ""
xunhuan := "fire3,fire5,fire4,fire2,water5,water4,water3,water2,flash3,flash5,flash4,flash2,stone4,stone3,stone5,stone2,ty3,ty5,f1,f2,f3,f4"
pomie:=""
}
if(bdlist=="大锤野外元晶")
{
default_qishou := ""
xunhuan := "fire3,fire4,fire5,fire2,flash5,flash2,water5,water4,water2,stone2,stone5,ty3,ty5,f1,f3,f2,f4"
pomie:=""
}
if(bdlist=="双法杖野外狂兽")
{
default_qishou := ""
xunhuan := "ty2,ty4,ty5,ty1,wp2,wp5,wp3,wp4,f51"
pomie:=""
}
if(bdlist=="双大剑野外狂兽")
{
default_qishou := "wp3"
xunhuan := "wp2,ty2,ty4,ty42,ty5,wp2,wp5,wp3,ty1,f51"
pomie:=""
}
if(bdlist=="斧号野外狂兽")
{
default_qishou := ""
xunhuan := "ty4,ty2,wp4,wp5,wp3,wp2,f51,ty5,ty1"
pomie:=""
}
if(bdlist=="奶急速狂战")
{
default_qishou := "wp2,ty1"
xunhuan := "f12,ty2,ty3,f2,wp4,wp2,wp3,wp5,ty4,ty1"
pomie:=""
}
if(bdlist=="步枪神枪手")
{
default_qishou := ""
xunhuan := "f1,f4,f2,ty5,ty4,ty1,ty3,f12"
pomie:=""
}
if(bdlist=="双枪急速神枪手")
{
default_qishou := "ty3,wp2,f1"
xunhuan := "f2,f1,ty2,ty4,ty5,f4"
pomie:=""
}
if(bdlist=="双枪野外神枪手")
{
default_qishou := "ty3,wp2,f1"
xunhuan := "f2,f1,ty2,ty5,f4"
pomie:=""
}
if(bdlist=="七星野外神枪手")
{
default_qishou := "ty3,wp2,f1"
xunhuan := "f2,f1,ty2,ty5,f4"
pomie:=""
}
if(bdlist=="节匕直伤元晶")
{
default_qishou := "ty51"
xunhuan := "fire2,ty2,ty3,ty52,ty4,fire5,fire4,fire3,ty5,stone2,stone3,stone4,stone5,water4,water3,water2,water42,flash4,flash2,flash3,f1,f2,f3,f4"
pomie:=""
}
if(bdlist=="节匕直伤元晶2")
{
default_qishou := "ty51"
xunhuan := "fire2,ty2,ty4,ty3,fire5,fire4,fire3,ty5,stone2,stone4,stone3,stone5,water3,water2,water4,flash2,flash4,f1,f2,f3,f4"
pomie:=""
}
if(bdlist=="长矛直伤元晶")
{
default_qishou := ""
xunhuan := "ty52,ty4,ty2,ty3,fire5,fire52,fire2,fire4,fire3,water5,water52,water4,water2,flash5,flash52,flash2,flash3,flash4,stone5,stone52,stone4,stone2,ty5,f1,f2,f3,f4"
pomie:=""
}
if(bdlist=="症状极速预告")
{
default_qishou := ""
xunhuan := "ty2,ty3,ty4,ty5,ty25,wp2,wp4,wp5,twp5,twp3,twp2"
pomie:="ty23,twp5,wp4"
}
if(bdlist=="长矛症状龙魂")
{
default_qishou := "ty4,ty3"
xunhuan := "f3,ty25,ty3,ty4,wp4,wp5,wp2,twp3,twp2,twp5"
pomie:=""
}
if(bdlist=="奶机械")
{
default_qishou := ""
xunhuan := "f4,ty3,ty2,wp2,wp5,wp4,ty1,f5,ty5,f1,ty4,f2,ty4,ty3,f3,wp3"
pomie:=""
}
if(bdlist=="节匕症状暴风")
{
default_qishou := "ty5"
xunhuan := "ty52,fire2,fire4,fire3,ty1,ty4,fire5,f1,ty2,ty3,ty51,ty5"
pomie:=""
}
if(bdlist=="节聚敏捷暴风")
{
default_qishou := "ty5"
xunhuan := "ty52,fire2,fire4,fire3,ty1,ty4,fire5,fire52,f1,ty2,ty3,ty51,ty5"
pomie:=""
}
IniWrite, %default_qishou%, %bdFilePath%, 循环设置, 起手
IniWrite, %xunhuan%, %bdFilePath%, 循环设置, 主循环
IniWrite, %pomie%, %bdFilePath%, 破蔑分类, 蔑视技能
}
if(weapon1="ERROR" or weapon2="ERROR" or qwq1="ERROR" or qwq2="ERROR" or weapon1="" or weapon2="")
{
weaponConfig := {}
weaponConfig["大剑直伤时空"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "twp3,f5,twp4", "qwq2": "wp5,wp2"}
weaponConfig["野外步枪时空"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "f5,twp3", "qwq2": "f5,wp3"}
weaponConfig["步枪奶时空"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5,twp3", "qwq1": "", "qwq2": ""}
weaponConfig["匕首症状灵刃"] := {"wuqi1": "wp4,wp5", "wuqi2": "twp4,twp5", "qwq1": "twp5", "qwq2": "wp5"}
weaponConfig["大剑直伤灵刃"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "twp4", "qwq2": "wp5,wp2"}
weaponConfig["匕斧破法"] := {"wuqi1": "wp4,wp5", "wuqi2": "twp4,twp5", "qwq1": "twp4,twp5,twp4", "qwq2": "wp4"}
weaponConfig["长弓大剑猎龙"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "twp4,twp3", "qwq2": "wp4,wp2"}
weaponConfig["匕枪杖野外蜃楼"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "twp3,twp4", "qwq2": "wp2,wp3"}
weaponConfig["长弓野外狂兽"] := {"wuqi1": "", "wuqi2": "", "qwq1": "wp1", "qwq2": "wp1"}
weaponConfig["双剑杖野外夺魂"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "twp2,twp3", "qwq2": "wp2,wp3"}
weaponConfig["节火杖野外灾厄"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "twp2,twp3", "qwq2": "wp3,wp2"}
weaponConfig["枪火症状灾厄"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "twp3,twp2", "qwq2": "wp3,wp2"}
weaponConfig["治疗敏捷灾厄"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "twp3,twp2", "qwq2": "wp3,wp2"}
weaponConfig["双剑杖野外先驱"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "twp2", "qwq2": "wp2"}
weaponConfig["枪火野外先驱"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "twp2", "qwq2": "wp2"}
weaponConfig["剑锤野外狂兽"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "twp3", "qwq2": "wp3"}
weaponConfig["斧锤野外破峰"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "", "qwq2": "wp2"}
weaponConfig["三剑野外破峰"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "twp2", "qwq2": "wp3,wp4"}
weaponConfig["步枪野外丁真"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "", "qwq2": ""}
weaponConfig["大锤直伤机械"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "", "qwq2": ""}
weaponConfig["大锤直伤暴风"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "", "qwq2": ""}
weaponConfig["辅助奶燃火"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "", "qwq2": "twp2"}
weaponConfig["直伤敏捷龙魂"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "twp2", "qwq2": "wp2"}
weaponConfig["直伤极速预告"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "", "qwq2": ""}
weaponConfig["奶预告"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "", "qwq2": ""}
weaponConfig["裁决"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "", "qwq2": ""}
weaponConfig["直伤大剑夺魂"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "twp2", "qwq2": "wp2"}
weaponConfig["症状敏缚影"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "", "qwq2": ""}
weaponConfig["节号症状编织"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "", "qwq2": ""}
weaponConfig["症状输出破峰"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "twp3", "qwq2": "wp2"}
weaponConfig["枪火野外破峰"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "twp4", "qwq2": "wp4"}
weaponConfig["枪聚野外破峰"] := {"wuqi1": "wp4,wp5", "wuqi2": "twp4,twp5", "qwq1": "twp4", "qwq2": "wp4"}
weaponConfig["剑枪直伤全息"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "", "qwq2": ""}
weaponConfig["症状先驱"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "twp2,twp3", "qwq2": "wp2,wp3"}
weaponConfig["野外直伤龙魂"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "twp2", "qwq2": "wp2"}
weaponConfig["斧锤直伤魂兽"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "twp4,twp2", "qwq2": "wp4,wp3,wp2"}
weaponConfig["症状德鲁伊"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "twp3,twp5", "qwq2": "wp2,wp3"}
weaponConfig["剑号野外元晶"] := {"wuqi1": "", "wuqi2": "", "qwq1": "", "qwq2": ""}
weaponConfig["剑号急速元晶"] := {"wuqi1": "", "wuqi2": "", "qwq1": "", "qwq2": ""}
weaponConfig["枪号野外元晶"] := {"wuqi1": "", "wuqi2": "", "qwq1": "", "qwq2": ""}
weaponConfig["节号野外元晶"] := {"wuqi1": "", "wuqi2": "", "qwq1": "", "qwq2": ""}
weaponConfig["大锤野外元晶"] := {"wuqi1": "", "wuqi2": "", "qwq1": "", "qwq2": ""}
weaponConfig["双法杖野外狂兽"] := {"wuqi1": "", "wuqi2": "", "qwq1": "", "qwq2": ""}
weaponConfig["双大剑野外狂兽"] := {"wuqi1": "", "wuqi2": "", "qwq1": "", "qwq2": ""}
weaponConfig["斧号野外狂兽"] := {"wuqi1": "", "wuqi2": "", "qwq1": "", "qwq2": ""}
weaponConfig["奶急速狂战"] := {"wuqi1": "", "wuqi2": "", "qwq1": "", "qwq2": ""}
weaponConfig["步枪神枪手"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "", "qwq2": ""}
weaponConfig["双枪野外神枪手"] := {"wuqi1": "", "wuqi2": "", "qwq1": "", "qwq2": ""}
weaponConfig["七星野外神枪手"] := {"wuqi1": "", "wuqi2": "", "qwq1": "", "qwq2": ""}
weaponConfig["长矛直伤元晶"] := {"wuqi1": "", "wuqi2": "", "qwq1": "", "qwq2": ""}
weaponConfig["症状极速预告"] := {"wuqi1": "", "wuqi2": "", "qwq1": "", "qwq2": ""}
weaponConfig["长矛症状龙魂"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "twp3", "qwq2": "wp2"}
weaponConfig["奶机械"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "", "qwq2": ""}
weaponConfig["节匕症状暴风"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "", "qwq2": ""}
weaponConfig["节聚敏捷暴风"] := {"wuqi1": "wp2,wp3,wp4,wp5", "wuqi2": "twp2,twp3,twp4,twp5", "qwq1": "", "qwq2": ""}
if weaponConfig.HasKey(bdlist)
{
config := weaponConfig[bdlist]
wuqi1 := config["wuqi1"]
wuqi2 := config["wuqi2"]
qwq1 := config["qwq1"]
qwq2 := config["qwq2"]
}
else
{
wuqi1 := ""
wuqi2 := ""
qwq1 := ""
qwq2 := ""
}
IniWrite, %wuqi1%, %bdFilePath%, 切武器分类, 武器组1
IniWrite,%wuqi2%, %bdFilePath%, 切武器分类, 武器组2
IniWrite, %qwq1%, %bdFilePath%, 切武器分类, 武器1切武器2
IniWrite,%qwq2%, %bdFilePath%, 切武器分类, 武器2切武器1
}
Iniread, wuqi1, %bdFilePath%, 切武器分类, 武器组1
Iniread, wuqi2, %bdFilePath%, 切武器分类, 武器组2
}
skillData := {}
skillData["wp1"]  := ["wp1",  wp1x,  wp1y,  wp1color,  wp1key,  20,  wp1cd ,0]
skillData["wp2"]  := ["wp2",  wp2x,  wp2y,  wp2color,  wp2key,  wp2sleep,  wp2cd ,0]
skillData["wp3"]  := ["wp3",  wp3x,  wp3y,  wp3color,  wp3key,  wp3sleep,  wp3cd ,0]
skillData["wp4"]  := ["wp4",  wp4x,  wp4y,  wp4color,  wp4key,  wp4sleep,  wp4cd ,0]
skillData["wp5"]  := ["wp5",  wp5x,  wp5y,  wp5color,  wp5key,  wp5sleep,  wp5cd ,0]
skillData["wp22"]  := ["wp22",  wp22x,  wp22y,  wp22color,  wp2key,  wp22sleep,  wp22cd ,0]
skillData["wp32"]  := ["wp32",  wp32x,  wp32y,  wp32color,  wp3key,  wp32sleep,  wp32cd ,0]
skillData["wp42"]  := ["wp42",  wp42x,  wp42y,  wp42color,  wp4key,  wp42sleep,  wp42cd ,0]
skillData["wp52"]  := ["wp52",  wp52x,  wp52y,  wp52color,  wp5key,  wp52sleep,  wp52cd ,0]
skillData["wm2"]  := ["wm2",  wm2x,  wm2y,  wm2color,  wp2key,  wm2sleep,  wm2cd]
skillData["wm3"]  := ["wm3",  wm3x,  wm3y,  wm3color,  wp3key,  wm3sleep,  wm3cd]
skillData["wm32"]  := ["wm32",  wm32x,  wm32y,  wm32color,  wp3key,  wm32sleep,  wm32cd]
skillData["wm4"]  := ["wm4",  wm4x,  wm4y,  wm4color,  wp4key,  wm4sleep,  wm4cd]
skillData["wm5"]  := ["wm5",  wm5x,  wm5y,  wm5color,  wp5key,  wm5sleep,  wm5cd]
skillData["twp2"]  := ["twp2",  twp2x,  twp2y,  twp2color,  wp2key,  twp2sleep,  twp2cd,1 ]
skillData["twp3"]  := ["twp3",  twp3x,  twp3y,  twp3color,  wp3key,  twp3sleep,  twp3cd,1]
skillData["twp4"]  := ["twp4",  twp4x,  twp4y,  twp4color,  wp4key,  twp4sleep,  twp4cd ,1]
skillData["twp5"]  := ["twp5",  twp5x,  twp5y,  twp5color,  wp5key,  twp5sleep,  twp5cd ,1]
skillData["twp22"]  := ["twp22",  twp22x,  twp22y,  twp22color,  wp2key,  twp22sleep,  twp22cd,1 ]
skillData["twp32"]  := ["twp32",  twp32x,  twp32y,  twp32color,  wp3key,  twp32sleep,  twp32cd,1]
skillData["twp42"]  := ["twp42",  twp42x,  twp42y,  twp42color,  wp4key,  twp42sleep,  twp42cd ,1]
skillData["twp52"]  := ["twp52",  twp52x,  twp52y,  twp52color,  wp5key,  twp52sleep,  twp52cd ,1]
skillData["fire2"]  := ["fire2",  fire2x,  fire2y,  fire2color,  wp2key,  fire2sleep,  fire2cd ,0]
skillData["fire3"]  := ["fire3",  fire3x,  fire3y,  fire3color,  wp3key,  fire3sleep,  fire3cd ,0]
skillData["fire4"]  := ["fire4",  fire4x,  fire4y,  fire4color,  wp4key,   fire4sleep,  fire4cd ,0]
skillData["fire5"]  := ["fire5",  fire5x,  fire5y,  fire5color,  wp5key,   fire5sleep,  fire5cd ,0]
skillData["fire22"] := ["fire22", fire22x, fire22y, fire22color, wp2key,  fire22sleep,  0 ,0]
skillData["fire32"] := ["fire32", fire32x, fire32y, fire32color, wp3key,   fire32sleep,  0 ,0]
skillData["fire42"] := ["fire42", fire42x, fire42y, fire42color, wp4key,   fire42sleep,  0 ,0]
skillData["fire52"] := ["fire52", fire52x, fire52y, fire52color, wp5key,   fire52sleep,  0 ,0]
skillData["water2"]  := ["water2",  water2x,  water2y,  water2color, wp2key,   water2sleep,  water2cd ,0]
skillData["water3"]  := ["water3",  water3x,  water3y,  water3color,  wp3key,  water3sleep,  water3cd ,0]
skillData["water4"]  := ["water4",  water4x,  water4y,  water4color,  wp4key,  water4sleep,  water4cd ,0]
skillData["water5"]  := ["water5",  water5x,  water5y,  water5color,  wp5key,  water5sleep,  water5cd ,0]
skillData["water22"] := ["water22", water22x, water22y, water22color, wp2key,  water22sleep,  0 ,0]
skillData["water32"] := ["water32", water32x, water32y, water32color, wp3key,  water32sleep,  0 ,0]
skillData["water42"] := ["water42", water42x, water42y, water42color, wp4key,  water42sleep,  0 ,0]
skillData["water52"] := ["water52", water52x, water52y, water52color, wp5key,  water52sleep,  0 ,0]
skillData["flash2"]  := ["flash2",  flash2x,  flash2y,  flash2color,  wp2key,  flash2sleep,  flash2cd ,0]
skillData["flash3"]  := ["flash3",  flash3x,  flash3y,  flash3color,  wp3key,  flash3sleep,  flash3cd ,0]
skillData["flash4"]  := ["flash4",  flash4x,  flash4y,  flash4color,  wp4key,  flash4sleep,  flash4cd ,0]
skillData["flash5"]  := ["flash5",  flash5x,  flash5y,  flash5color,  wp5key,  flash5sleep,  flash5cd ,0]
skillData["flash22"] := ["flash22", flash22x, flash22y, flash22color, wp2key,  flash22sleep,  0 ,0]
skillData["flash32"] := ["flash32", flash32x, flash32y, flash32color, wp3key,  flash32sleep,  0 ,0]
skillData["flash42"] := ["flash42", flash42x, flash42y, flash42color, wp4key,  flash42sleep,  0 ,0]
skillData["flash52"] := ["flash52", flash52x, flash52y, flash52color, wp5key,  flash52sleep,  0 ,0]
skillData["stone2"]  := ["stone2",  stone2x,  stone2y,  stone2color,  wp2key,  stone2sleep , stone2cd ,0]
skillData["stone3"]  := ["stone3",  stone3x,  stone3y,  stone3color,  wp3key,  stone3sleep,  stone3cd ,0]
skillData["stone4"]  := ["stone4",  stone4x,  stone4y,  stone4color,  wp4key,  stone4sleep,  stone4cd ,0]
skillData["stone5"]  := ["stone5",  stone5x,  stone5y,  stone5color,  wp5key,  stone5sleep,  stone5cd ,0]
skillData["stone22"] := ["stone22", stone22x, stone22y, stone22color, wp2key,  stone22sleep,  0 ,0]
skillData["stone32"] := ["stone32", stone32x, stone32y, stone32color, wp3key,  stone32sleep,  0 ,0]
skillData["stone42"] := ["stone42", stone42x, stone42y, stone42color, wp4key,  stone42sleep,  0 ,0]
skillData["stone52"] := ["stone52", stone52x, stone52y, stone52color, wp5key,  stone52sleep,  0 ,0]
skillData["ty1"]  := ["ty1",  ty1x,  ty1y,  ty1color,  ty1key,  ty1sleep,  ty1cd]
skillData["ty12"]  := ["ty12",  ty12x,  ty12y,  ty12color,  ty1key,  ty12sleep]
skillData["ty2"]  := ["ty2",  ty2x,  ty2y,  ty2color,  ty2key,  ty2sleep,  ty2cd]
skillData["ty22"]  := ["ty22",  ty22x,  ty22y,  ty22color,  ty2key,  ty22sleep]
skillData["ty3"]  := ["ty3",  ty3x,  ty3y,  ty3color,  ty3key,  ty3sleep,  ty3cd]
skillData["ty31"]  := ["ty31",  ty31x,  ty31y,  ty31color,  ty3key,  ty31sleep]
skillData["ty32"]  := ["ty32",  ty32x,  ty32y,  ty32color,  ty3key,  ty32sleep]
skillData["ty33"]  := ["ty33",  ty33x,  ty33y,  ty33color,  ty3key,  ty33sleep]
skillData["ty4"]  := ["ty4",  ty4x,  ty4y,  ty4color,  ty4key,  ty4sleep,  ty4cd]
skillData["ty41"]  := ["ty41",  ty41x,  ty41y,  ty41color,  ty4key,  ty41sleep]
skillData["ty42"]  := ["ty42",  ty42x,  ty42y,  ty42color,  ty4key,  ty42sleep]
skillData["ty43"]  := ["ty43",  ty43x,  ty43y,  ty43color,  ty4key,  ty43sleep]
skillData["ty5"]  := ["ty5",  ty5x,  ty5y,  ty5color,  ty5key,  ty5sleep, ty5cd]
skillData["ty51"]  := ["ty51",  ty51x,  ty51y,  ty51color,  ty5key,  ty51sleep]
skillData["ty52"]  := ["ty52",  ty52x,  ty52y,  ty52color,  ty5key,  ty52sleep]
skillData["ty21"]  := ["ty21",  ty21x,  ty21y,  ty21color,  ty1key,  ty21sleep]
skillData["ty22"]  := ["ty22",  ty22x,  ty22y,  ty22color,  ty2key,  ty22sleep]
skillData["ty23"]  := ["ty23",  ty23x,  ty23y,  ty23color,  ty3key,  ty23sleep]
skillData["ty24"]  := ["ty24",  ty24x,  ty24y,  ty24color,  ty4key,  ty24sleep]
skillData["ty25"]  := ["ty25",  ty25x,  ty25y,  ty25color,  ty5key,  ty25sleep]
skillData["f1"]  := ["f1",  f1x,  f1y,  f1color,  f1key,  f1sleep,  f1cd]
skillData["f2"]  := ["f2",  f2x,  f2y,  f2color,  f2key,  f2sleep,  f2cd]
skillData["f3"]  := ["f3",  f3x,  f3y,  f3color,  f3key,  f3sleep,  f3cd]
skillData["f4"]  := ["f4",  f4x,  f4y,  f4color,  f4key,  f4sleep,  f4cd]
skillData["f5"]  := ["f5",  f5x,  f5y,  f5color,  f5key,  f5sleep,  f5cd]
skillData["f13"]  := ["f13",  f13x,  f13y,  f13color,  f3key,  1,  f13cd]
skillData["f23"]  := ["f23",  f23x,  f23y,  f23color,  f3key,  1,  f23cd]
skillData["f43"]  := ["f43",  f43x,  f43y,  f43color,  f3key,  1,  f43cd]
skillData["f24"]  := ["f24",  f24x,  f24y,  f24color,  f4key,  f24sleep,  f24cd]
skillData["f21"]  := ["f21",  f21x,  f21y,  f21color,  f1key,  f21sleep]
skillData["f31"]  := ["f31",  f31x,  f31y,  f31color,  f1key,  1,  f13cd]
skillData["f41"]  := ["f41",  f41x,  f41y,  f41color,  f1key,  1,  f41cd]
skillData["f34"]  := ["f34",  f34x,  f34y,  f34color,  f4key,  1,  f43cd]
skillData["f12"]  := ["f12",  f12x,  f12y,  f12color,  f1key,  f12sleep,  f12cd]
skillData["f22"]  := ["f22",  f22x,  f22y,  f22color,  f2key,  f22sleep,  f22cd]
skillData["f32"]  := ["f32",  f32x,  f32y,  f32color,  f3key,  f32sleep,  f32cd]
skillData["f42"]  := ["f42",  f42x,  f42y,  f42color,  f4key,  f42sleep,  f42cd]
skillData["f43"]  := ["f43",  f43x,  f43y,  f43color,  f4key,  f43sleep,  f43cd]
skillData["f51"]  := ["f51",  f51x,  f51y,  f51color,  f5key,  f51sleep,  f51cd]
skillData["f52"]  := ["f52",  f52x,  f52y,  f52color,  f5key,  f52sleep,  f52cd]
skillData["f11"]  := ["f11",  f11x,  f11y,  f11color,  f1key,  f11sleep,  f11cd]
skillData["f6"]  := ["f6",  f6x,  f6y,  f6color,  f6key,  1,  f6cd]
skillData["f61"]  := ["f6",  f6x,  f6y,  f6color,  f6key,  1,  f6cd]
skillData["wp1"]  := ["wp1",  wp1x,  wp1y,  wp1color,  wp1key,  10,  wp1cd]
skillData["mieshi"]  := ["mieshi",  mieshix,  mieshiy,  mieshicolor,  "", 0 ,0  ]
skillData["qwq"]  := ["qwq",  qwqx,  qwqy,  qwqcolor, qwqkey , qwqwait ,qwqcd  ]
skillData["fr"]  := ["fr",  frx,  fry,  frcolor, rollkey , 50 ,frcd  ]
if(bdlist!="ERROR")
{
start_skills := []
for index, skillName in qishou_loop {
skillName := Trim(skillName)
if (skillData.Haskey(skillName))
{
start_skills.Push(skillData[skillName])
}
}
skills := []
for index, skillName in xunhuan_loop {
skillName := Trim(skillName)
if (skillData.Haskey(skillName))
{
skills.Push(skillData[skillName])
}
else
if (InStr(skillName, "=") > 0)
{
skills.Push(skillName)
}
}
mieshi_skill := []
for index, skillName in pomie_value {
skillName := Trim(skillName)
if (skillData.Haskey(skillName))
{
mieshi_skill.Push(skillData[skillName])
}
}
qwqkey1 := []
for index, skillName in qwq1_value {
skillName := Trim(skillName)
if (skillData.Haskey(skillName))
{
qwqkey1.Push(skillData[skillName])
}
}
qwqkey2 := []
for index, skillName in qwq2_value {
skillName := Trim(skillName)
if (skillData.Haskey(skillName))
{
qwqkey2.Push(skillData[skillName])
}
}
cd := {}
for index, skill in skillData  {
sname := skill[1]
cd[sname] := {startcd: 0, nextcd: 0}
}
skill_use := {}
for index, skill in skillData  {
sname := skill[1]
skill_use[sname] := {use: 0}
}
}
if (startkey = "CapsLock") {
if GetKeyState("CapsLock", "T") {
SetCapsLockState, Off
}
}
SetTimer,checkwindows,100
SetTimer,checkflykey,100
Label=%1%
if (Label!="")
{
Suspend, On
if IsLabel(Label)
Gosub, %Label%
ExitApp
}
Menu, Tray, Icon
Class Thread
{
__New(Label)
{
if (A_IsCompiled)
Run, "%A_ScriptFullPath%" /f "%Label%",,, pid
else
Run, "%A_AhkPath%" /f "%A_ScriptFullPath%" "%Label%",,, pid
this.pid:=pid
}
__Delete()
{
Process, Close, % this.pid
}
}
Hotkey, %startkey%, startrun,ON
Hotkey, %savecolorkey%, findcolor,ON
Hotkey, %savekey%, savekey,ON
Hotkey, ~Enter, enters
return
Toggle := false
startrun:
IniRead, waitkey, %iniFilePath%, Hotkeys, waitkey
optionData := {}
optionData["大剑直伤时空"] := {name: "dajianshikong",name2: "dajianshikong2"}
optionData["野外步枪时空"] := {name: "buqiangshikong",name2: "buqiangshikong2"}
optionData["步枪奶时空"] := {name: "naishikong",name2: "naishikong2"}
optionData["匕斧破法"] := {name: "bishoupofa"}
optionData["匕首症状灵刃"] := {name: "bishoulingren",name2: "bishoulingren2"}
optionData["大剑直伤灵刃"] := {name: "dajianlingren",name2: "dajianlingren2"}
optionData["长弓大剑猎龙"] := {name: "djlielong"}
optionData["匕枪杖野外蜃楼"] := {name: "fqhshenlou",name2: "fqhshenlou2"}
optionData["长弓野外狂兽"] := {name: "changgongkuangshou",name2: "changgongkuangshou2"}
optionData["双剑杖野外夺魂"] := {name: "jianzhangduohun",name2: "jianzhangduohun2"}
optionData["节火杖野外灾厄"] := {name: "jiehuozhangzaie",name2: "jiehuozhangzaie2"}
optionData["枪火症状灾厄"] := {name: "qianghuozaie",name2: "qianghuozaie2"}
optionData["治疗敏捷灾厄"] := {name: "zhiliaozaie",name2: "zhiliaozaie2"}
optionData["双剑杖野外先驱"] := {name: "shuangjianxianqu",name2: "shuangjianxianqu2"}
optionData["枪火野外先驱"] := {name: "qianghuoxianqu",name2: "qianghuoxianqu2"}
optionData["剑锤野外狂兽"] := {name: "yewaikuangshou",name2: "yewaikuangshou2"}
optionData["斧锤野外破峰"] := {name: "yewaipofeng",name2: "yewaipofeng2"}
optionData["三剑野外破峰"] := {name: "shuangjianpofeng",name2: "shuangjianpofeng2"}
optionData["步枪野外丁真"] := {name: "yewaidingzhen",name2: "yewaidingzhen2"}
optionData["大锤直伤机械"] := {name: "dachuijixie",name2: "dachuijixie2"}
optionData["大锤直伤暴风"] := {name: "dachuibaofeng",name2: "dachuibaofeng2"}
optionData["辅助奶燃火"] := {name: "nairanhuo",name2: "nairanhuo2"}
optionData["直伤敏捷龙魂"] := {name: "minjielonghun",name2: "minjielonghun2"}
optionData["直伤极速预告"] := {name: "jisuyugao",name2: "jisuyugao2"}
optionData["奶预告"] := {name: "naiyugao",name2: "naiyugao2"}
optionData["裁决"] := {name: "caijue",name2: "caijue2"}
optionData["直伤大剑夺魂"] := {name: "dajianduohun",name2: "dajianduohun2"}
optionData["症状敏缚影"] := {name: "minfuying",name2: "minfuying2"}
optionData["节号症状编织"] := {name: "jianbibianzhi",name2: "jianbibianzhi2"}
optionData["症状输出破峰"] := {name: "shuchupofeng",name2: "shuchupofeng2"}
optionData["枪火野外破峰"] := {name: "qiangpofeng",name2: "qiangpofeng2"}
optionData["枪聚野外破峰"] := {name: "qiangjupofeng",name2: "qiangjupofeng2"}
optionData["剑枪直伤全息"] := {name: "zhishagnquanxi",name2: "zhishagnquanxi2"}
optionData["症状先驱"] := {name: "zhengzhuangxianqu",name2: "zhengzhuangxianqu2"}
optionData["野外直伤龙魂"] := {name: "yewailonghun",name2: "yewailonghun2"}
optionData["斧锤直伤魂兽"] := {name: "zhishanghunshou",name2: "zhishanghunshou2"}
optionData["症状德鲁伊"] := {name: "zhengzhuangdeluyi",name2: "zhengzhuangdeluyi2"}
optionData["剑号野外元晶"] := {name: "jianhaoyuanjing",name2: "jianhaoyuanjing2"}
optionData["剑号急速元晶"] := {name: "jisuyuanjing",name2: "jisuyuanjing2"}
optionData["枪号野外元晶"] := {name: "qianghaoyuanjing",name2: "qianghaoyuanjing2"}
optionData["节号野外元晶"] := {name: "jiehaoyuanjing",name2: "jiehaoyuanjing2"}
optionData["大锤野外元晶"] := {name: "dachuiyuanjing",name2: "dachuiyuanjing2", name3: "dachuiyuanjing3"}
optionData["双法杖野外狂兽"] := {name: "fazhangkuangshou",name2: "", name3: ""}
optionData["双大剑野外狂兽"] := {name: "dajiankuangshou",name2: "", name3: ""}
optionData["斧号野外狂兽"] := {name: "fuhaokuangshou",name2: "", name3: ""}
optionData["奶急速狂战"] := {name: "naikuangzhan",name2: "", name3: ""}
optionData["步枪神枪手"] := {name: "buqiangshenqiangshou",name2: "", name3: ""}
optionData["双枪急速神枪手"] := {name: "jisushenqiang",name2: "jisushenqiang2", name3: ""}
optionData["双枪野外神枪手"] := {name: "yewaishenqiang",name2: "yewaishenqiang2", name3: ""}
optionData["七星野外神枪手"] := {name: "qixingshenqiang",name2: "qixingshenqiang2", name3: ""}
optionData["节匕直伤元晶"] := {name: "jiebiyuanjing",name2: "jiebiyuanjing2", name3: ""}
optionData["节匕直伤元晶2"] := {name: "jiebiyuanjing3",name2: "jiebiyuanjing4", name3: ""}
optionData["长矛直伤元晶"] := {name: "changmaoyuanjing",name2: "changmaoyuanjing2", name3: ""}
optionData["症状极速预告"] := {name: "zhengzhuangjisuyugao",name2: "zhengzhuangjisuyugao2", name3: ""}
optionData["长矛症状龙魂"] := {name: "changmaolonghun",name2: "changmaolonghun2", name3: ""}
optionData["奶机械"] := {name: "naijixie",name2: "naijixie2", name3: ""}
optionData["节匕症状暴风"] := {name: "jiebibaofeng",name2: "jiebibaofeng2", name3: ""}
optionData["节聚敏捷暴风"] := {name: "minjiebaofeng",name2: "minjiebaofeng2", name3: ""}
timerLabel := optionData[bdlist].name
timerLabel2 := optionData[bdlist].name2
timerLabel3 := optionData[bdlist].name3
Toggle := !Toggle
IniRead, waitkey, %iniFilePath%, Hotkeys, waitkey
if(waitkey==0)
{
if(Toggle)
{
SetTimer,checkflykey,off
if(bdlist=="剑枪直伤全息")
{
SetTimer,closef5,off
}
if(tooltipx=="" or tooltipx="ERROR" tooltipy=="" or tooltipy="ERROR")
{
msgbox 启动文字坐标未获取，先点击F10-启动文字，设置后再开启循环。
return
}
hwnd := DllCall("GetForegroundWindow")
WinGetPos, refWinX, refWinY, refWinWidth, refWinHeight,ahk_id %hwnd%
guiX := refWinX+tooltipx
guiY := refWinY+tooltipy
SplashImage,, X%guiX% Y%guiY% H25 W25 CW00FF00 CT000000 ZX2 ZY2 B1,开
thread1 := new Thread(timerLabel)
if(timerLabel2!="")
{
thread2 := new Thread(timerLabel2)
}
if(timerLabel3!="")
{
thread3 := new Thread(timerLabel3)
}
}
else
{
if(bdlist=="剑枪直伤全息")
{
SetTimer,closef5,10
}
SetTimer,checkflykey,on
thread1 := ""
thread2 := ""
thread3 := ""
thread1.__Delete()
thread2.__Delete()
thread3.__Delete()
SplashImage, Off
tooltip
Gdip_DisposeImage(pBitmap)
}
}
return
checkflykey:
hwnd := DllCall("GetForegroundWindow")
WinGet, ProcessName, ProcessName, ahk_id %hwnd%
if (ProcessName != "Gw2-64.exe") {
Hotkey, %flykey%, flymain,off
SplashImage, Off
Toggle:=False
}
else
Hotkey, %flykey%, flymain,on
return
enters:
SetTimer,checkflykey,off
Hotkey, %flykey%, flymain,off
thread1 := ""
thread2 := ""
thread3 := ""
thread1.__Delete()
thread2.__Delete()
thread3.__Delete()
SplashImage, Off
Toggle:=False
sleep 1000
tooltip
return
closef5:
getf51:=GetPixelColor(f51x,f51y)
if(getf51==f51color)
{
sendone(f5key,1)
}
getf52:=GetPixelColor(f52x,f52y)
if(getf52==f52color)
{
sendone(f5key,1)
}
return
checkwindows:
return
dajianshikong:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]-15
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
}
checkqwq(smode)
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]-15
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
getf6:=Getdxgicolor(pBitmap, f6x, f6y)
if (sname == "f1" or sname == "f2" or sname == "f3" ) {
if (hexColor == scolor && getf6 == f6color)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendloop(skey, 10)
buff:=A_TickCount
while(A_TickCount-buff<=1000)
{
sendloop(skey, 20)
getf6:=GetPixelColor(f6x,f6y)
if(getf6!=f6color)
{
break
}
}
break
}
}
else
{
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="wp5")
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
if(sname=="twp2" )
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
if(sname=="ty2")
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
if(sname=="twp4" )
{
getty1:=GetPixelColor(ty1x,ty1y)
if(getty1==ty1color)
{
sendbreak(sname,wp4key,twp4sleep)
while(GetPixelColor(twp4x,twp4y)!=0x000000)
{
sendone(wp4key,100)
}
sendone(ty1key,100)
while(GetPixelColor(twp4x,twp4y)!=twp4color)
{
}
sendbreak(sname,wp4key,twp4sleep)
while(GetPixelColor(twp4x,twp4y)!=0x000000)
{
sendone(wp4key,100)
}
cd["twp4"].startcd := A_TickCount
}
else
{
sendbreak(sname,wp4key,twp4sleep)
cd["twp4"].startcd := A_TickCount
}
}
else
if(sname=="ty1" )
{
if(smode==1)
{
while(GetPixelColor(twp4x,twp4y)!=0x000000)
{
sendone(wp4key,100)
}
sendone(ty1key,100)
while(GetPixelColor(twp4x,twp4y)!=twp4color)
{
}
sendbreak(twp4,wp4key,twp4sleep)
cd["twp4"].startcd := A_TickCount
}
else
{
continue
}
}
else
if(sname=="ty42")
{
if(A_TickCount-ty42time>=10000 && ty42)
{
sendone(ty4key,10)
ty42:=false
}
if(!ty42)
{
ty42time:=A_TickCount
ty42:=true
}
else
{
continue
}
}
Else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
break
}
}
}
for index, skill in skills {
sname := skill[1]
scd := skill[7]
cd[sname].nextcd := scd/1.50- (A_TickCount - cd[sname].startcd)
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
if( cd["wp5"].nextcd>2000 && cd["wp3"].nextcd>1000 && cd["wp2"].nextcd>1000   )
{
sendone(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
else
if (smode == 1)
{
if( cd["twp4"].nextcd>1500 && cd["twp2"].nextcd>1000 )
{
sendone(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
sendloop(wp1key,20)
}
return
dajianshikong2:
loop {
fpoint:=GetPixelColor(f6x,f6y)
getty42:=GetPixelColor(ty42x,ty42y)
if(fpoint==f6color)
{
getf3:=GetPixelColor(f3x,f3y)
gmieshi:=GetPixelColor(mieshix,mieshiy)
if(getf3==f3color && gmieshi==mieshicolor)
{
SendLoop(f3key, 10)
Continue
}
getf1:=GetPixelColor(f1x,f1y)
if(getf1==f1color)
{
SendLoop(f1key, 10)
f1time:=A_TickCount
Continue
}
getf2:=GetPixelColor(f2x,f2y)
if(getf2==f2color && A_TickCount-f1time<10000)
{
SendLoop(f2key, 10)
f1time:=""
Continue
}
}
}
return
buqiangshikong:
start:=0
if(start==0)
{
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
}
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="ty1")
{
if(smode==1)
{
if(GetPixelColor(twp3x,twp3y)!=0x000000)
{
break
}
if(GetPixelColor(qwqx,qwqy)!=qwqcolor)
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
}
else
continue
}
else
if(sname=="wp3")
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
wp3++
if(wp3>=2)
{
sendbreak(sname,skey,ssleep)
}
}
else
if(sname=="twp3")
{
sendone(wp3key,500)
while(GetPixelColor(twp3x,twp3y)!=0x000000)
{
sendone(wp3key,50)
}
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
}
}
for index, skill in skills {
sname := skill[1]
scd := skill[7]
if(cd[sname].startcd>0)
{
cd[sname].nextcd := scd- (A_TickCount - cd[sname].startcd)
}
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
if( skill_use["wp3"].use>=1 )
{
sendloop(qwqkey,120)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
skill_use["wp3"].use:=0
}
}
else
if (smode == 1)
{
if(  skill_use["twp3"].use>=1 )
{
sendloop(qwqkey,120 )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
skill_use["twp3"].use:=0
}
}
}
sendloop(wp1key,20)
}
return
buqiangshikong2:
loop {
fpoint:=GetPixelColor(f6x,f6y)
getty42:=GetPixelColor(ty42x,ty42y)
if(fpoint==f6color)
{
getf2:=GetPixelColor(f2x,f2y)
if(getf2==f2color )
{
SendLoop(f2key, 10)
f1time:=""
Continue
}
getf1:=GetPixelColor(f1x,f1y)
if(getf1==f1color)
{
SendLoop(f1key, 10)
f1time:=A_TickCount
Continue
}
getf3:=GetPixelColor(f3x,f3y)
if(getf3==f3color)
{
SendLoop(f3key, 10)
f1time:=A_TickCount
Continue
}
}
}
return
naishikong:
Gdip_DisposeImage(pBitmap)
start:=0
if(start==0)
{
skill_group := []
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
skill_group.Push(skill)
}
}
for index, skill in skill_group {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(skill[8]!="" )
{
smode := skill[8]
}
sendone(skey,ssleep*alltime)
cd[sname].startcd := A_TickCount
}
start:=1
}
loop {
skill_group := []
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
checkskill(skills, pBitmap, skill_group)
for index, skill in skill_group {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(skill[8]!="" )
{
smode := skill[8]
}
if(sname=="twp3")
{
sendloop(skey, ssleep)
twp3++
if(twp3>=2)
{
sendloop(skey, 100)
}
}
else
if(sname!="twp3" )
{
sendone(skey,ssleep*alltime)
cd[sname].startcd := A_TickCount
}
break
}
sendloop(wp1key,20)
if GetKeyState(ty5key, "P") {
sendloop(ty5key, ty5sleep)
}
if GetKeyState(ty1key, "P") {
sendloop(ty1key, ty1sleep)
}
if GetKeyState(ty4key, "P") {
sendloop(ty4key, ty4sleep)
}
Gdip_DisposeImage(pBitmap)
}
return
naishikong2:
start:=0
loop {
if(start==0)
{
sleep 1000
start:=1
}
getf3:=GetPixelColor(f3x,f3y)
if(getf3==f3color )
{
SendLoop(f3key,1)
}
Else
getf1:=GetPixelColor(f1x,f1y)
if(getf1==f1color )
{
SendLoop(f1key, 1)
}
Else
getf2:=GetPixelColor(f2x,f2y)
if(getf2==f2color && getf1!=f1color)
{
SendLoop(f2key, 1)
}
}
return
bishoupofa:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(sname=="f1")
{
PixelSearch, Px, Py, sx, sy, sx, sy, f1color,50, Fast RGB
if (ErrorLevel) = 0
{
sendloop(skey, ssleep)
}
}
else
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
start:=1
ty2:=0
}
loop {
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if (sname == "ty2" && ty2<2)
{
if (A_TickCount - cd[sname].startcd >= 5200)
{
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
ty2++
}
}
else
if(sname=="wp5" )
{
sendloop(ty4key, 1)
sleep 230
sendloop(skey, 1)
sleep 2050
Continue
}
else
{
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
if(cd[sname].startcd>0)
{
cd[sname].nextcd:=scd-(A_TickCount-cd[sname].startcd)
}
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if (smode == 0)
{
if(getqwq==qwqcolor && cd["wp4"].nextcd>3000 )
{
sendloop(qwqkey,qwqwait )
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
smode:=1
}
}
}
else
if (smode == 1)
{
if(getqwq==qwqcolor  && cd["twp4"].nextcd>3000 )
{
sendloop(qwqkey,qwqwait)
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
smode:=0
}
}
}
sendloop(wp1key,20)
Gdip_DisposeImage(pBitmap)
}
return
fqhshenlou:
start:=0
fruse:=false
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pbitmap,sx,sy)
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
start:=1
}
loop {
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if (sname == "fr") {
if (!fruse) {
sendone(skey, ssleep)
sendloop(wp1key,1100)
fruse := true
cd[sname].startcd := A_TickCount
}
}
else
{
sendbreak(sname,skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
cd[sname].nextcd := A_TickCount - cd[sname].startcd
}
if(A_TickCount-cd["fr"].startcd>=1000 && cd["fr"].startcd>0)
{
fruse:=false
cd["fr"].startcd:=0
}
for index, skill in skills {
sname := skill[1]
scd := skill[7]
cd[sname].nextcd := scd/1.25- (A_TickCount - cd[sname].startcd)
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if (smode == 0)
{
if(getqwq==qwqcolor && cd["wp2"].nextcd>2000 )
{
sendloop(qwqkey,qwqwait )
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
smode:=1
}
}
}
else
if (smode == 1)
{
if(getqwq==qwqcolor && cd["twp3"].nextcd>2000 )
{
sendloop(qwqkey,qwqwait)
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
smode:=0
}
}
}
sendloop(wp1key,20)
Gdip_DisposeImage(pBitmap)
}
return
fqhshenlou2:
start:=0
loop {
getf6:=GetPixelColor(f6x,f6y)
if(getf6==f6color)
{
getf1:=GetPixelColor(f1x,f1y)
if(getf1==f1color )
{
SendLoop(f1key, 1)
}
getf2:=GetPixelColor(f2x,f2y)
if(getf2==f2color )
{
SendLoop(f2key, 1)
}
getf3:=GetPixelColor(f3x,f3y)
if(getf3==f3color )
{
SendLoop(f3key, 1)
}
}
}
return
bishoulingren:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
}
checkqwq(smode)
start:=1
}
loop {
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
getf6:=Getdxgicolor(pBitmap, f6x, f6y)
if (hexColor == scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f1")
{
if(getf6==f6color)
{
buff:=A_TickCount
while(A_TickCount-buff<=1000)
{
sendloop(skey, 20)
getf6:=getdxgicolor(pbitmap,f6x,f6y)
if(getf6!=f6color)
{
break
}
}
skill_use[sname].use++
cd[sname].startcd := A_TickCount
}
else
{
continue
}
}
Else
if(sname=="f2")
{
if(getf6==f6color)
{
buff:=A_TickCount
while(A_TickCount-buff<=1000)
{
sendloop(skey, 20)
getf6:=getdxgicolor(pbitmap,f6x,f6y)
if(getf6!=f6color)
{
break
}
}
cd[sname].startcd := A_TickCount
}
else
{
continue
}
}
else
if(sname=="f5")
{
if(getf6==f6color)
{
buff:=A_TickCount
while(A_TickCount-buff<=1000)
{
sendloop(skey, 20)
getf6:=getdxgicolor(pbitmap,f6x,f6y)
if(getf6!=f6color)
{
break
}
}
}
else
{
continue
}
}
else
if(sname=="f3")
{
if(A_TickCount-buff>=6000)
{
buff:=A_TickCount
while(A_TickCount-buff<=1000)
{
sendloop(skey, 20)
getf6:=getdxgicolor(pbitmap,f6x,f6y)
if(getf6!=f6color)
{
break
}
}
}
else
{
continue
}
}
else
if(sname=="ty4")
{
if(cd["f2"].nextcd>2000 && cd["f1"].nextcd>2000 && skill_use["f1"].use>=2)
{
sendbreak(sname,skey,880)
cd["f2"].nextcd:=0
cd["f1"].nextcd:=0
skill_use["f1"].use:=0
}
else
{
continue
}
}
else
if(sname=="twp5" )
{
getty1:=getdxgicolor(pbitmap,ty1x,ty1y)
if(getty1==ty1color)
{
sendbreak(sname,wp5key,twp5sleep)
sendone(ty1key,200)
while(GetPixelColor(twp5x,twp5y)!=twp5color)
{
}
sendbreak(sname,wp5key,twp5sleep)
cd["twp4"].startcd := A_TickCount
}
else
{
sendbreak(sname,wp5key,twp5sleep)
while(GetPixelColor(twp5x,twp5y)!=0x000000)
{
}
cd["twp5"].startcd := A_TickCount
}
}
else
if(sname=="ty1" )
{
if(smode==1)
{
gettwp5:=getdxgicolor(pbitmap,twp5x,twp5y)
if(gettwp5!=twp5color)
{
sendone(ty1key,200)
while(GetPixelColor(twp5x,twp5y)!=twp5color)
{
}
}
sendone(wp5key,300)
while(GetPixelColor(twp5x,twp5y)!=0x000000)
{
}
cd["twp5"].startcd := A_TickCount
}
else
{
continue
}
}
else
if(sname=="wp5")
{
sendbreak(sname,skey,wp5sleep)
while(GetPixelColor(wp5x,wp5y)!=0x000000)
{
}
cd[sname].startcd := A_TickCount
}
Else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
break
}
}
for index, skill in skills {
sname := skill[1]
scd := skill[7]
cd[sname].nextcd := scd/1.25- (A_TickCount - cd[sname].startcd)
}
if (smode == 0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if( cd["wp5"].nextcd>2000 )
{
sendloop(qwqkey,150)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if( cd[sname].nextcd<=1)
{
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
}
if (smode == 1)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if( cd["twp5"].nextcd>2000 )
{
sendloop(qwqkey,150 )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if( cd[sname].nextcd<=1)
{
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
}
Gdip_DisposeImage(pBitmap)
sendloop(wp1key,20)
}
return
dajianlingren:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]-20
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
}
checkqwq(smode)
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]-20
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
getf6:=Getdxgicolor(pBitmap, f6x, f6y)
if (sname == "f1" or sname == "f2" or sname == "f3" or sname =="f5") {
if (hexColor == scolor && getf6 == f6color)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f1")
{
sendone(skey, 10)
buff:=A_TickCount
while(A_TickCount-buff<=630)
{
sendone(skey, 50)
getf6:=GetPixelColor(f6x,f6y)
if(getf6!=f6color)
{
break
}
}
break
}
else
if(sname=="f2")
{
sendone(skey, 10)
buff:=A_TickCount
while(A_TickCount-buff<=480)
{
sendone(skey, 50)
getf6:=GetPixelColor(f6x,f6y)
if(getf6!=f6color)
{
break
}
}
break
}
else
if(sname=="f5" )
{
sendone(skey, 10)
buff:=A_TickCount
break
}
else
if(sname=="f3")
{
sendone(skey, 10)
buff:=A_TickCount
while(A_TickCount-buff<=480)
{
sendone(skey, 50)
getf6:=GetPixelColor(f6x,f6y)
if(getf6!=f6color)
{
break
}
}
break
}
}
}
else
{
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="ty4")
{
continue
}
else
if(sname=="twp2" )
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
if(sname=="twp4" )
{
getty1:=GetPixelColor(ty1x,ty1y)
if(getty1==ty1color)
{
sendbreak(sname,wp4key,twp4sleep)
while(GetPixelColor(twp4x,twp4y)!=0x000000)
{
sendone(wp4key,100)
}
sendone(ty1key,100)
while(GetPixelColor(twp4x,twp4y)!=twp4color)
{
}
sendbreak(sname,wp4key,twp4sleep)
while(GetPixelColor(twp4x,twp4y)!=0x000000)
{
sendone(wp4key,100)
}
cd["twp4"].startcd := A_TickCount
}
else
{
sendbreak(sname,wp4key,twp4sleep)
while(GetPixelColor(twp4x,twp4y)!=0x000000)
{
sendone(wp4key,100)
}
cd["twp4"].startcd := A_TickCount
}
}
else
if(sname=="ty1" )
{
if(smode==1)
{
while(GetPixelColor(twp4x,twp4y)!=0x000000)
{
sendone(wp4key,100)
}
sendone(ty1key,100)
while(GetPixelColor(twp4x,twp4y)!=twp4color)
{
}
sendbreak(twp4,wp4key,twp4sleep)
while(GetPixelColor(twp4x,twp4y)!=0x000000)
{
sendone(wp4key,100)
}
cd["twp4"].startcd := A_TickCount
}
else
{
continue
}
}
Else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
break
}
}
}
for index, skill in skills {
sname := skill[1]
scd := skill[7]
cd[sname].nextcd := scd/1.25- (A_TickCount - cd[sname].startcd)
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
if( cd["wp5"].nextcd>2000 && cd["wp3"].nextcd>1000 )
{
sendloop(qwqkey,120)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
else
if (smode == 1)
{
if( cd["twp4"].nextcd>2000 && cd["twp2"].nextcd>1000 )
{
sendloop(qwqkey,120 )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
twp4:=1
}
}
}
}
Gdip_DisposeImage(pBitmap)
sendloop(wp1key,20)
}
return
dajianlingren2:
loop {
sleep 10000
getty4:=GetPixelColor(ty4x,ty4y)
if(getty4==ty4color)
{
sendone(ty4key,50)
}
}
return
djlielong:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=getdxgicolor(pbitmap,sx,sy)
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
if (smode == 0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
else
if (smode == 1)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(sname=="wp2")
{
sendone(skey, ssleep)
}
else
{
sendloop(skey, ssleep)
}
cd[sname].startcd := A_TickCount
}
}
}
start:=1
}
loop {
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f1")
{
sendone(skey, ssleep)
buff:=A_TickCount
break
}
Else
if(sname=="f3" && A_TickCount-buff>5500 )
{
sendone(skey, ssleep)
buff:=A_TickCount
break
}
else
{
sendbreak(sname,skey, ssleep)
}
cd[sname].startcd := A_TickCount
}
}
for index, skill in skills {
sname := skill[1]
scd := skill[7]
cd[sname].nextcd := scd/1.25- (A_TickCount - cd[sname].startcd)
}
if (smode == 0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if(  cd["wp2"].nextcd>2000  &&   cd["wp4"].nextcd>2000   )
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
else
if (smode == 1)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if(cd["twp3"].nextcd>2000 && cd["twp2"].nextcd>500  && cd["twp4"].nextcd>500   )
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
Gdip_DisposeImage(pBitmap)
sendloop(wp1key,20)
}
return
jianzhangduohun:
start:=0
f1use:=false
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if (sname == "f1") {
if (!f1use) {
sendone(ty4key,1)
sendone(ty3key,1)
sendone(skey, 150)
sendone(wp1key,1)
sleep 1750
f1use := true
cd[sname].startcd := A_TickCount
}
}
else
{
sendbreak(sname,sKey, sSleep)
cd[sname].startcd := A_TickCount
}
}
}
}
loop {
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if (sname == "f1") {
if (!f1use) {
sendone(ty4key,1)
sendone(ty3key,1)
sendone(skey, 150)
sendone(wp1key,1)
sleep 1750
f1use := true
cd[sname].startcd := A_TickCount
}
}
else
{
sendbreak(sname,skey, ssleep)
cd[sname].startcd := A_TickCount
}
break
}
}
if(A_TickCount-cd["f1"].startcd>=13000  && cd["f1"].startcd>0)
{
sendone(f1key,150)
sendone(wp2key,wp2sleep)
f1use:=false
cd["f1"].startcd:=0
}
if(A_TickCount-cd["wm3"].startcd>=3500 && cd["wm3"].startcd>0)
{
sendone(wp3key,wm32sleep)
cd["wm3"].startcd:=0
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
cd[sname].nextcd:=scd-(A_TickCount-cd[sname].startcd)
}
if (smode == 0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if( cd["wp2"].nextcd>1000 && cd["wp3"].nextcd>1000 && cd["wp5"].nextcd>1000 )
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
else
if (smode == 1)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if( cd["twp2"].nextcd>1000 )
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
Gdip_DisposeImage(pBitmap)
sendloop(wp1key,20)
}
return
changgongkuangshou:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
start:=1
}
loop {
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor := Getdxgicolor(pBitmap, sx,sy)
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
break
}
}
pBitmap := getpbitmap()
getqwq:=Getdxgicolor(pBitmap, qwqx, qwqy)
if( getqwq==qwqcolor  )
{
getf5:=Getdxgicolor(pBitmap, f5x, f5y)
if(getf5==f5color)
{
if(!f5use)
{
sendone(f5key,1)
loop {
sendone(f1key,10)
sendone(f2key,10)
sendone(f3key,10)
getf51:=GetPixelColor(f51x,f51y)
if(getf51==f51color)
{
SendLoop(f5key,1)
sttime:=A_TickCount
while(A_TickCount-sttime<1000)
{
SendLoop(wp1key,50)
}
f5start:=A_TickCount
f5use:=true
break
}
}
}
}
}
if(A_TickCount-f5start>=4000)
{
sendloop(qwqkey,qwqwait )
sttime:=A_TickCount
while(A_TickCount-sttime<1000)
{
SendLoop(wp1key,50)
}
f5use:=false
f5start:=""
}
Gdip_DisposeImage(pBitmap)
sendloop(wp1key,20)
}
return
yewaikuangshou:
Gdip_DisposeImage(pBitmap)
start:=0
if(start==0)
{
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
sendloop(sKey, sSleep)
cd[sname].startcd := A_TickCount
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
}
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if (smode == 0)
{
if( getqwq==qwqcolor )
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
else
if (smode == 1)
{
if( getqwq==qwqcolor )
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
start:=1
}
loop {
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendone(skey,ssleep*alltime)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
break
}
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
if(cd[sname].startcd>0)
{
cd[sname].nextcd:=scd-(A_TickCount-cd[sname].startcd)
}
}
getqwq:=Getdxgicolor(pBitmap, qwqx, qwqy)
if (smode == 0)
{
if( getqwq==qwqcolor )
{
sendone(f5key,1)
loop {
SendLoop(f1key,20)
SendLoop(f2key,20)
SendLoop(f3key,20)
getf51:=GetPixelColor(f51x,f51y)
if(getf51==f51color)
{
SendLoop(f5key,1)
sttime:=A_TickCount
while(A_TickCount-sttime<1200)
{
SendLoop(wp1key,50)
}
break
}
}
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
else
if (smode == 1)
{
if( getqwq==qwqcolor )
{
if( skill_use["twp2"].use>=2 && cd["twp3"].nextcd>2000 && cd["twp4"].nextcd>2000 && cd["twp5"].nextcd>2000 )
{
sendone(f5key,1)
loop {
SendLoop(f1key,20)
SendLoop(f2key,20)
SendLoop(f3key,20)
getf51:=GetPixelColor(f51x,f51y)
if(getf51==f51color)
{
SendLoop(f5key,1)
sttime:=A_TickCount
while(A_TickCount-sttime<960)
{
SendLoop(wp1key,50)
}
break
}
}
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
skill_use["twp2"].use:=0
}
}
}
Gdip_DisposeImage(pBitmap)
sendloop(wp1key,20)
}
return
jiehuozhangzaie:
Gdip_DisposeImage(pBitmap)
start:=0
if(start==0)
{
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendloop(sKey, sSleep)
cd[sname].startcd := A_TickCount
}
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
else
if (smode == 1)
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
start:=1
}
loop {
skill_group := []
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
checkskill(skills, pBitmap, skill_group)
for index, skill in skill_group {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey,ssleep*alltime)
cd[sname].startcd := A_TickCount
if(skill[8]!="" )
{
smode := skill[8]
}
break
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
if( cd["wp2"].nextcd>2000 && cd["wp3"].nextcd>2000  )
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
else
if (smode == 1)
{
if( cd["twp2"].nextcd>2000 && cd["twp3"].nextcd>2000 )
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
sendloop(wp1key,20)
}
return
qianghuozaie:
Gdip_DisposeImage(pBitmap)
start:=0
if(start==0)
{
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}sendloop(sKey, sSleep)
cd[sname].startcd := A_TickCount
}
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
else
if (smode == 1)
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
start:=1
}
loop {
skill_group := []
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
checkskill(skills, pBitmap, skill_group)
for index, skill in skill_group {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(skill[8]!="" )
{
smode := skill[8]
}
if(sname=="wp2")
{
sendone(skey,920)
cd[sname].startcd := A_TickCount
}
else
if(sname=="twp2")
{
sendone(skey,880)
cd[sname].startcd := A_TickCount
}
else
if(sname=="f5")
{
sendone(skey,ssleep)
getty4:=Getdxgicolor(pBitmap,ty4x,ty4y)
if(getty4==ty4color)
{
sendone(ty4key,ty4sleep)
}
sendone(skey,ssleep)
}
else
if(sname=="f52")
{
sendone(skey,ssleep)
getty4:=Getdxgicolor(pBitmap,ty4x,ty4y)
if(getty4==ty4color)
{
sendone(ty4key,ty4sleep)
}
sendone(skey,ssleep)
}
Else
if(sname=="f1" && !f1use)
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
f1use:=true
}
else
if(sname!="f1" && sname!="f5" && sname!="wp2" && sname!="twp2")
{
sendone(skey,ssleep*alltime)
cd[sname].startcd := A_TickCount
}
else
{
continue
}
break
}
if(A_TickCount-cd["f1"].startcd>3000)
{
f1use:=false
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
if(cd[sname].startcd>=0)
{
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
if( cd["wp2"].nextcd>3000 && cd["wp3"].nextcd>3000  )
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
else
if (smode == 1)
{
if( cd["twp2"].nextcd>1000 && cd["twp3"].nextcd>1000 )
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
sendloop(wp1key,20)
}
return
qianghuozaie2:
loop{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getf2:=Getdxgicolor(pbitmap,f2x,f2y)
if(getf2==f2color)
{
sendone(f2key,10)
}
}
return
zhiliaozaie:
Gdip_DisposeImage(pBitmap)
start:=0
if(start==0)
{
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}sendloop(sKey, sSleep)
cd[sname].startcd := A_TickCount
}
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
else
if (smode == 1)
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
start:=1
}
loop {
skill_group := []
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
checkskill(skills, pBitmap, skill_group)
for index, skill in skill_group {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(skill[8]!="" )
{
smode := skill[8]
}
if(sname=="wp2")
{
sendone(skey,920)
cd[sname].startcd := A_TickCount
}
else
if(sname=="twp2")
{
sendone(skey,880)
cd[sname].startcd := A_TickCount
}
else
if(sname=="f1" && !f1use)
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
f1use:=true
}
else
if(sname=="ty1")
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
ty1use:=true
}
else
if(sname=="ty4" && !ty1use)
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
if(sname!="f1" && sname!="wp2" && sname!="twp2" && sname!="ty1" && sname!="ty4")
{
sendone(skey,ssleep*alltime)
cd[sname].startcd := A_TickCount
}
else
{
continue
}
break
}
if(A_TickCount-cd["f1"].startcd>3000)
{
f1use:=false
}
if(A_TickCount-cd["ty1"].startcd>5000)
{
ty1use:=false
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
if(cd[sname].startcd>=0)
{
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
if( cd["wp2"].nextcd>3000 && cd["wp3"].nextcd>3000 && cd["wp4"].nextcd>1000  )
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
break
}
}
}
else
if (smode == 1)
{
if( cd["twp2"].nextcd>2000 && cd["twp3"].nextcd>2000 && cd["twp5"].nextcd>1000  )
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
break
}
}
}
}
sendloop(wp1key,20)
}
return
zhiliaozaie2:
return
shuangjianxianqu:
Gdip_DisposeImage(pBitmap)
start:=0
f1use:=false
if(start==0)
{
pBitmap := getpbitmap()
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if (sname == "f1" ) {
if(!f1use)
{
sendone(skey, 100)
sendone(wp2key,wm2sleep)
f1use := true
cd[sname].startcd := A_TickCount
}
else
{
continue
}
}
else
if(sname=="f11")
{
sendone(skey, 150)
sendone(wp2key,wm2sleep)
f1use:=false
cd["f1"].startcd:=0
skill_use["wm2"].use:=0
}
else
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
}
}
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexcolor==scolor)
{
cd[sname].startcd := 0
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if (sname == "f1" ) {
if(!f1use)
{
sendone(skey, 150)
sendone(wp2key,wm2sleep)
f1use := true
cd[sname].startcd := A_TickCount
}
else
{
continue
}
}
else
if(sname=="wp2")
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
if(sname=="twp2")
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
break
}
}
if(skill_use["wm2"].use>=2  && cd["f1"].startcd>0)
{
sendone(f1key,150)
sendone(wp2key,twp2sleep)
f1use:=false
cd["f1"].startcd:=0
skill_use["wm2"].use:=0
}
if(skill_use["wm2"].use>=1)
{
getf1:=Getdxgicolor(pBitmap,f1x,f1y)
if(getf1==f1color)
{
f1use:=false
cd["f1"].startcd:=0
skill_use["wm2"].use:=0
}
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
if( cd[sname].startcd>0 )
{
cd[sname].nextcd:=scd-(A_TickCount-cd[sname].startcd)
}
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
if( cd["wp2"].nextcd>2000 && cd["wp5"].nextcd>2000 && cd["wp4"].nextcd>2000  )
{
sendone(qwqkey,100)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
else
if (smode == 1)
{
if(  cd["twp5"].nextcd>1000  && cd["twp4"].nextcd>1000 && cd["twp3"].nextcd>1000  && cd["twp2"].nextcd>500  )
{
sendone(qwqkey,100 )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
sendone(wp1key,20)
}
return
qianghuoxianqu:
Gdip_DisposeImage(pBitmap)
start:=0
f1use:=false
if(start==0)
{
pBitmap := getpbitmap()
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if (sname == "f1" ) {
if(!f1use)
{
sendone(skey, 150)
sendone(wp2key,wm2sleep)
f1use := true
cd[sname].startcd := A_TickCount
}
else
{
continue
}
}
else
if(sname=="f11")
{
sendone(f1key,qwqwait)
sendone(wp2key,twp2sleep)
f1use:=false
cd["f1"].startcd:=0
skill_use["wm2"].use:=0
}
else
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
}
}
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexcolor==scolor)
{
cd[sname].startcd := 0
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if (sname == "f1" ) {
if(!f1use)
{
sendone(skey,150)
sendone(wp2key,wm2sleep)
f1use := true
cd[sname].startcd := A_TickCount
}
else
{
continue
}
}
else
if(sname=="wp2")
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
if(sname=="twp2")
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
break
}
}
if(skill_use["wm2"].use>=2  && cd["f1"].startcd>0)
{
sendone(f1key,150)
sendone(wp2key,twp2sleep)
f1use:=false
cd["f1"].startcd:=0
skill_use["wm2"].use:=0
}
if(skill_use["wm2"].use>=1)
{
getf1:=Getdxgicolor(pBitmap,f1x,f1y)
if(getf1==f1color)
{
f1use:=false
cd["f1"].startcd:=0
skill_use["wm2"].use:=0
}
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
if( cd[sname].startcd>0 )
{
cd[sname].nextcd:=scd-(A_TickCount-cd[sname].startcd)
}
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
if( cd["wp2"].nextcd>2000 && cd["wp5"].nextcd>2000 && cd["wp4"].nextcd>2000  )
{
sendone(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
else
if (smode == 1)
{
if(  cd["twp5"].nextcd>1000  && cd["twp4"].nextcd>1000 && cd["twp3"].nextcd>1000  && cd["twp2"].nextcd>500  )
{
sendone(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
sendone(wp1key,20)
}
return
qianghuoxianqu2:
return
yewaipofeng:
Gdip_DisposeImage(pBitmap)
start:=0
if(start==0)
{
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f1")
{
sendone(f2key,250)
sendone(skey,ssleep)
}
else
if(sname=="twp4" )
{
sendloop(wp4key,twp4sleep)
twp4use:=true
cd[sname].startcd := A_TickCount
}
else
{
sendloop(sKey, sSleep)
cd[sname].startcd := A_TickCount
}
}
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
else
if (smode == 1)
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(A_TickCount-bufftime>=7000)
{
buff:=false
}
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="ty1" )
{
if(!buff)
{
sendone(ty1key,ty1sleep)
bufftime:=A_TickCount
loop {
sendone(ty1key,100)
PixelSearch, Px, Py, ty1x-5, ty1y-5, ty1x+5, ty1y+5, 0x000000, 0 , Fast RGB
if ErrorLevel = 0
{
break
}
else
if(A_TickCount-bufftime>=1000)
{
break
}
}
buff:=true
}
Else
{
continue
}
}
else
if(sname=="f3")
{
if(!buff)
{
sendone(skey,ssleep)
bufftime:=A_TickCount
buff:=true
}
Else
{
continue
}
}
else
if(sname=="twp4")
{
if(!twp4use)
{
sendone(wp4key,twp4sleep)
twp4use:=true
cd[sname].startcd := A_TickCount
}
else
{
continue
}
}
else
if(sname=="twp5" )
{
getf3:=getdxgicolor(pbitmap,f3x, f3y)
if(getf3!=f3color)
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
Else
{
continue
}
}
else
if(sname=="f1")
{
sendone(f2key,250)
sendone(skey,ssleep)
}
else
if(sname=="twp2" )
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
{
sendone(skey,ssleep*alltime)
cd[sname].startcd := A_TickCount
}
break
}
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
if(cd[sname].startcd>0)
{
cd[sname].nextcd:=scd-(A_TickCount-cd[sname].startcd)
}
}
if(A_TickCount-cd["twp4"].startcd>=20000 && cd["twp4"].startcd>0)
{
twp4use:=false
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
if( cd["wp2"].nextcd>2000 )
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
else
if (smode == 1)
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
sendloop(wp1key,20)
}
}
return
shuangjianpofeng:
Gdip_DisposeImage(pBitmap)
start:=0
if(start==0)
{
skill_group := []
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
skill_group.Push(skill)
}
}
for index, skill in skill_group {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(skill[8]!="" )
{
smode := skill[8]
}
if(sname=="f1")
{
sendone(f2key,250)
sendone(skey,ssleep)
}
else
if(sname=="wp5" )
{
sendloop(wp5key,wp5sleep)
wp5time:=A_tickcount
while(A_tickcount-wp5time<wp52sleep)
{
sendone(wp5key,20)
}
cd[sname].startcd := A_TickCount
wp5use:=true
}
else
{
sendone(skey,ssleep*alltime)
cd[sname].startcd := A_TickCount
}
}
start:=1
}
loop {
skill_group := []
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="wp5" )
{
if(!wp5use)
{
sendloop(wp5key,wp5sleep)
wp5time:=A_tickcount
while(A_tickcount-wp5time<wp52sleep)
{
sendone(wp5key,20)
}
cd[sname].startcd := A_TickCount
wp5use:=true
}
else
{
continue
}
}
else
if(sname=="ty1" )
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
loop {
PixelSearch, Px, Py, ty1x-5, ty1y-5, ty1x+5, ty1y+5, 0x000000, 0, Fast RGB
if ErrorLevel = 0
{
break
}
if(A_TickCount-cd["ty1"].startcd>1000)
{
break
}
}
}
else
if(sname=="ty3" )
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
continue
}
else
if(sname=="f1")
{
sendone(f2key,f2sleep)
sendone(skey,ssleep)
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
break
}
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
if(cd[sname].startcd>0)
{
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
}
if(A_TickCount-cd["wp5"].startcd>=20100)
{
wp5use:=false
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
if( cd["wp2"].nextcd>2000 && cd["wp4"].nextcd>2000)
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
else
if (smode == 1)
{
if( cd["twp2"].nextcd>2000  && cd["twp3"].nextcd>2000  )
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
sendloop(wp1key,20)
}
return
yewaidingzhen:
Gdip_DisposeImage(pBitmap)
start:=0
if(start==0)
{
skill_group := []
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
skill_group.Push(skill)
}
}
for index, skill in skill_group {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(skill[8]!="" )
{
smode := skill[8]
}
sendone(skey,ssleep*alltime)
cd[sname].startcd := A_TickCount
}
start:=1
}
loop {
skill_group := []
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
getty33:=Getdxgicolor(pBitmap,ty33x,ty33y)
if(getty33==ty33color)
{
sendloop(ty3key,ty33sleep)
break
}
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="wp2")
{
sendone(skey,200)
getty3:=Getdxgicolor(pBitmap,ty3x,ty3y)
if(getty3==ty3color)
{
sendone(ty3key,150)
sendloop(wp2key,twp2sleep)
PixelSearch, x, y,twp4x-5,twp4y-5,twp4x+5,twp4y+5, twp4color, 0, Fast RGB
if (ErrorLevel = 0) {
sendloop(wp4key,twp4sleep*alltime)
}
PixelSearch, x, y,twp5x-5,twp5y-5,twp5x+5,twp5y+5, twp5color, 0, Fast RGB
if (ErrorLevel = 0) {
sendloop(wp5key,twp5sleep*alltime)
}
}
cd[sname].startcd := A_TickCount
break
}
else
if(sname=="ty32")
{
sendone(qwqkey,120)
if(cd["wp3"].nextcd<=0)
{
sendone(wp3key,wp3sleep)
cd[sname].startcd := A_TickCount
}
if(cd["wp4"].nextcd<=0)
{
sendone(wp4key,wp4sleep)
cd[sname].startcd := A_TickCount
}
break
}
if(sname=="ty33")
{
sendloop(ty3key,ty33sleep)
}
else
if(sname!="wp2" && sname!="ty32" && sname!="ty33" )
{
sendone(skey,ssleep*alltime)
cd[sname].startcd := A_TickCount
break
}
}
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
if(cd[sname].startcd>0)
{
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
}
sendone(wp1key,20)
}
return
dachuijixie:
Gdip_DisposeImage(pBitmap)
start:=0
if(start==0)
{
skill_group := []
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
skill_group.Push(skill)
}
}
for index, skill in skill_group {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(skill[8]!="" )
{
smode := skill[8]
}
sendone(skey,ssleep*alltime)
cd[sname].startcd := A_TickCount
}
start:=1
}
loop {
skill_group := []
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
checkskill(skills, pBitmap, skill_group)
for index, skill in skill_group {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(skill[8]!="" )
{
smode := skill[8]
}
if(sname=="wp2")
{
sendone(skey,400)
sendone(ty3key,ty3sleep)
sendone(wp2key,twp2sleep)
PixelSearch, x, y,twp4x-5,twp4y-5,twp4x+5,twp4y+5, twp4color, 1, Fast RGB
if (ErrorLevel = 0) {
sendone(wp4key,twp4sleep*alltime)
}
PixelSearch, x, y,twp5x-5,twp5y-5,twp5x+5,twp5y+5, twp5color, 1, Fast RGB
if (ErrorLevel = 0) {
sendone(wp5key,twp5sleep*alltime)
}
}
else
if(sname=="ty5" && !ty5use)
{
sendone(skey,ssleep)
sendone(wp2key,twp2sleep)
sendone(qwqkey,1)
ty5use:=true
ty5time:=A_TickCount
}
else
if(sname=="ty32")
{
sendone(skey,ty32sleep)
}
else
if(sname=="f5" )
{
sendone(skey,ssleep)
buff:=A_TickCount
buffuse:=true
}
else
if(sname=="f3")
{
sendone(skey,ssleep)
buff:=A_TickCount
buffuse:=true
}
else
if(sname=="f2" )
{
sendone(skey,ssleep*alltime)
buff:=A_TickCount
buffuse:=true
}
else
if(sname=="f1" && !buffuse)
{
sendone(skey,ssleep*alltime)
buff:=A_TickCount
buffuse:=true
}
else
if(sname!="wp2" && sname!="ty32"  && sname!="f5" && sname!="f5"  && sname!="f2"  && sname!="f1"  && sname!="f3" && sname!="ty5")
{
sendone(skey,ssleep*alltime)
cd[sname].startcd := A_TickCount
}
Else
{
sendloop(wp1key,20)
continue
}
break
}
if(A_TickCount-ty5time>10000)
{
ty5use:=false
}
if(A_TickCount-buff>6000)
{
buffuse:=false
}
sendone(wp1key,20)
}
return
dachuijixie2:
loop {
getf42:=GetPixelColor(f42x,f42y)
if(getf42==f42color)
{
sendone(f4key,1)
}
getty42:=GetPixelColor(ty42x,ty42y)
if(getty42==ty42color)
{
sendone(ty4key,1)
}
}
return
dachuibaofeng:
if (pBitmap)
{
Gdip_DisposeImage(pBitmap)
}
pBitmap := getpbitmap()
start:=0
f3use:=false
fireuse:=false
wateruse:=false
stoneuse:=false
ty5use:=0
if(start==0)
{
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
getty5:=Getdxgicolor(pBitmap, ty5x, ty5y)
if(getty5==ty5color)
{
ty5use:=1
fire4sleep:=550
fire5sleep:=850
}
Else
{
fire4sleep:=100
fire5sleep:=400
}
foundPos := findbitcolor(pBitmap,  f3x-5, f3y-5,f3x+5, f3y+5, f3color, 0)
if (!foundPos ) {
if (!fireuse) {
sendone(f1key,150)
sendone(wp4key,fire4sleep)
sendone(wp5key,fire5sleep)
if( ty5use==1 )
{
sendbreak(ty5,ty5key,1300)
}
fireuse:=true
}
else
if (!wateruse) {
sendone(f2key,120)
sendone(wp2key,200)
wateruse:=true
} else
if (!stoneuse) {
sendone(f4key,120)
sendone(wp2key,300)
stoneuse:=true
}
}
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(sname=="f3")
{
foundPos := findbitcolor(pBitmap,  f3x-5, f3y+5,f3x-5, f3y+5, f3color, 0)
if (foundPos) {
sendone(f3key,3170)
f3use:=true
}
}
if(hexColor==scolor )
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
}
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
ty5use := 0
getty5:=Getdxgicolor(pBitmap, ty5x, ty5y)
if(getty5==ty5color)
{
ty5use:=1
fire4sleep:=550
fire5sleep:=750
}
Else
{
fire4sleep:=100
fire5sleep:=400
}
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
if(cd[sname].startcd>0)
{
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
hexColor:=Getdxgicolor(pBitmap, sx, sy)
getty4:=Getdxgicolor(pBitmap, ty4x, ty4y)
if(sname=="f3")
{
foundPos := findbitcolor(pBitmap,f3x-2,f3y-2,f3x+2,f3y+2,f3color,0)
if (foundPos) {
sendone(f3key,3180)
while(GetPixelColor(f3x,f3y)==f3color)
{
}
f3use:=true
}
}
else if(sname=="f31" && f3use && !fireuse)
{
foundPos := findbitcolor(pBitmap, f31x-4, f31y-4,f31x+4, f31y+4, f31color, 1)
if (foundPos) {
sendone(f1key,qwqwait)
sendone(wp4key,fire4sleep)
sendone(wp5key,fire5sleep)
if(ty5use==1 )
{
sendone(ty5key,1300)
ty5use:=0
}
f3use:=false
fireuse:=true
break
}
}
else if(sname=="f32" && f3use && !wateruse)
{
foundPos := findbitcolor(pBitmap, f32x-4, f32y-4,f32x+4, f32y+4, f32color, 1)
if (foundPos) {
sendone(f2key,qwqwait)
sendone(wp2key,300)
f3use:=false
wateruse:=true
break
}
}
else if(sname=="f34" && f3use && !stoneuse)
{
foundPos := findbitcolor(pBitmap, f34x-4, f34y-4,f34x+4, f34y+4, f34color, 1)
if (foundPos) {
sendone(f4key,qwqwait)
sendone(wp2key,200)
f3use:=false
stoneuse:=true
break
}
}
else
if(sname=="f1")
{
foundPos := findbitcolor(pBitmap,  f1x-1, f1y-1,f1x+1, f1y+1, f1color, 5)
if (foundPos) {
sendone(f3key,1)
f3time:=A_tickcount
}
}
else
if(sname=="f2")
{
foundPos := findbitcolor(pBitmap,  f2x-1, f2y-1,f2x+1, f2y+1, f2color, 5)
if (foundPos) {
sendone(f3key,1)
f3time:=A_tickcount
}
}
else
if(sname=="f4")
{
foundPos := findbitcolor(pBitmap, f4x-1, f4y-1,f4x+1, f4y+1, f4color, 5)
if (foundPos) {
sendone(f3key,1)
f3time:=A_tickcount
}
}
if(hexColor==scolor )
{
if(sname=="flash2")
{
if(4000-(A_tickcount-f3time)>1500 && getty4!=ty4color && cd["flash5"].nextcd>1000)
{
sendbreak(sname,skey,1)
cd[sname].startcd := A_TickCount
f3time:=""
}
else
continue
}
else
if(sname=="ty4")
{
if(f3use==false)
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
break
}
Else
continue
}
Else
if(sname=="flash2")
{
if(cd["flash5"].nextcd>2430)
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
break
}
Else
continue
}
else
if(sname!="f31" && sname!="f32" && sname!="f34" && sname!="f3"  && sname!="f1"  && sname!="f2"   && sname!="f4" )
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
break
}
}
}
if(wateruse && stoneuse && fireuse)
{
stoneuse:=false
wateruse:=false
fireuse:=false
}
if (pBitmap)
{
Gdip_DisposeImage(pBitmap)
}
}
return
dachuibaofeng2:
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getflash32:=Getdxgicolor(pBitmap, flash32x, flash32y)
wp3group:=["fire3","water3","flash3","stone3"]
for  index, skill in wp3group
{
getx :=skill . "x"
getx:=%getx%
gety := skill . "y"
gety:=%gety%
getcolor := skill . "color"
getcolor:=%getcolor%
foundPos := findbitcolor(pBitmap, getx-5, gety-5,getx+5, gety+5, getcolor, 4)
if (foundPos) {
sendone(wp3key,500)
wp3++
}
}
if(wp3>=4 && getflash32==flash32color)
{
wp3:=0
usetime:=A_TickCount
while(A_TickCount-usetime<1100)
{
sendloop(wp3key,300)
getflash32:=getdxgicolor(pbitmap,flash32x,flash32y)
if(getflash!=flash32color)
{
break
}
}
}
getty52:=Getdxgicolor(pBitmap,ty52x,ty52y)
getty2:=Getdxgicolor(pBitmap,ty2x,ty2y)
getty3:=Getdxgicolor(pBitmap,ty3x,ty3y)
if(getty52==ty52color)
{
sendone(ty5key,1)
}
if(getty2==ty2color )
{
sendone(ty2key,1)
}
if(getty3==ty3color)
{
sendone(ty3key,1)
}
}
return
nairanhuo:
Gdip_DisposeImage(pBitmap)
start:=0
if(start==0)
{
skill_group := []
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
skill_group.Push(skill)
}
}
for index, skill in skill_group {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(skill[8]!="" )
{
smode := skill[8]
}
if(sname=="wp4")
{
sendone(skey,1650)
}
else
if(sname=="f1")
{
sendone(skey,1)
loop {
PixelSearch, FoundX, FoundY,f1x-5, f1y-5,f1x+5,f1y+5, 0xffffff, 2, Fast RGB
if (ErrorLevel = 0 )
{
sendone(wp5key,1050)
sendone(wp3key,750)
sendone(qwqkey,100)
f1use:=true
f1usetime:=A_TickCount
break
}
}
}
else
if(sname=="f2")
{
sendone(skey,1)
loop {
PixelSearch, FoundX, FoundY,f2x-5, f2y-5,f2x+5,f2y+5, 0xffffff, 2, Fast RGB
if (ErrorLevel = 0 )
{
sendone(qwqkey,100)
break
}
}
}
else
if(sname=="f3")
{
sendone(skey,1)
loop {
PixelSearch, FoundX, FoundY,f3x-5, f3y-5,f3x+5,f3y+5, 0xffffff, 2, Fast RGB
if (ErrorLevel = 0 )
{
sendone(wp1key,500)
sendone(qwqkey,100)
break
}
}
}
else
if(sname=="f5")
{
sendone(qwqkey,1)
}
else
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
sleep 500
}
start:=1
}
loop {
skill_group := []
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="wp4")
{
sendone(skey,1650)
cd[sname].startcd := A_TickCount
}
Else
if(sname=="wp3" )
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
getf43:=Getdxgicolor(pBitmap, f43x,f43y)
if(getf43==f43color)
{
sendone(f3key,1)
loop {
PixelSearch, FoundX, FoundY,f3x-5, f3y-5,f3x+5,f3y+5, 0xffffff, 1, Fast RGB
if (ErrorLevel = 0 )
{
sendone(wp4key,950)
sendone(wp1key,500)
sendone(qwqkey,100)
f3use++
break
}
}
}
}
else
if(sname=="wp2" or sname=="twp2")
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
if(!f2use)
{
sendone(f2key,150)
loop {
PixelSearch, FoundX, FoundY,f2x-5, f2y-5,f2x+5,f2y+5, 0xffffff, 2, Fast RGB
if (ErrorLevel = 0 )
{
getf43:=getdxgicolor(pbitmap,f43x,f43y)
if(getf43==f43color)
{
sendone(wp4key,900)
sendone(wp2key,750)
sendone(wp3key,750)
f2usetime:=A_TickCount
f2use:=true
}
sendone(qwqkey,100)
break
}
}
}
}
Else
if(sname=="f1" && !f1use)
{
sendone(f1key,1)
loop {
PixelSearch, FoundX, FoundY,f1x-5, f1y-5,f1x+5,f1y+5, 0xffffff, 2, Fast RGB
if (ErrorLevel = 0 )
{
sendone(wp5key,1050)
sendone(wp3key,750)
sendone(qwqkey,100)
f1usetime:=A_TickCount
f1use:=true
break
}
}
}
else
if(sname=="f2")
{
sendone(skey,1)
loop {
PixelSearch, FoundX, FoundY,f2x-5, f2y-5,f2x+5,f2y+5, 0xffffff, 2, Fast RGB
if (ErrorLevel = 0 )
{
sendone(qwqkey,100)
break
}
}
}
else
if(sname=="f3")
{
sendone(skey,1)
loop {
PixelSearch, FoundX, FoundY,f3x-5, f3y-5,f3x+5,f3y+5, 0xffffff, 2, Fast RGB
if (ErrorLevel = 0 )
{
sendone(qwqkey,100)
break
}
}
}
else
if(sname!="f1" && sname!="wp2" && sname!="twp2")
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
break
}
}
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
if(cd[sname].startcd>0)
{
cd[sname].nextcd:=scd-(A_TickCount-cd[sname].startcd)
}
}
if(A_TickCount-f2usetime>=4000)
{
f2use:=false
}
if(A_TickCount-f1usetime>20000)
{
f1use:=false
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
if( cd["wp2"].nextcd>2000 && cd["wp4"].nextcd>2000)
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
Gdip_DisposeImage(pBitmap)
continue
}
}
else
if (smode == 1)
{
if( cd["twp2"].nextcd>2000 &&  cd["twp4"].nextcd>2000 )
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
Gdip_DisposeImage(pBitmap)
continue
}
}
}
sendloop(wp1key,20)
}
return
nairanhuo2:
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
tygroup:=["ty1","ty2","ty3"]
for  index, skill in tygroup
{
skey := skill . "key"
skey:=%skey%
ssleep := ssleep . "key"
ssleep:=%ssleep%
getx :=skill . "x"
getx:=%getx%
gety := skill . "y"
gety:=%gety%
getcolor := skill . "color"
getcolor:=%getcolor%
hexColor:=Getdxgicolor(pBitmap, getx, gety)
if(hexcolor==getcolor)
{
sendone(skey,10)
}
}
}
return
minjielonghun:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
}
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
getf2:=Getdxgicolor(pbitmap,f2x,f2y)
if(cd[sname].startcd>0)
{
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="ty5")
{
if( A_tickcount-f1time>9000)
{
sendone(skey,600)
skill_use[sname].use++
cd[sname].startcd := A_TickCount
}
else
continue
}
else
if(sname=="f3")
{
if(cd["f4"].nextcd>3000)
{
sendbreak(sname,skey,ssleep)
skill_use[sname].use++
cd[sname].startcd := A_TickCount
}
Else
continue
}
else
if(sname=="ty24")
{
sendone(ty4key,20)
}
else
{
sendbreak(sname,skey,ssleep)
skill_use[sname].use++
cd[sname].startcd := A_TickCount
}
break
}
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
if( cd["wp2"].nextcd>2000 && cd["wp5"].nextcd>2000 && cd["wp4"].nextcd>2000  )
{
sendone(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
else
if (smode == 1)
{
if(  cd["twp2"].nextcd>100  && cd["twp5"].nextcd>2000 )
{
sendone(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
foundPos := findbitcolor(pBitmap, f1x-2, f1y-2, f1x+2, f1y+2, f1color, 0)
if (foundPos)
{
foundPos := findbitcolor(pBitmap, f5x-5, f5y-5, f5x+5, f5y+5, 0xFFFFFF, 1)
if (!foundPos)
{
foundPos := findbitcolor(pBitmap, f6x, f6y-2, f6x+20, f6y+2, 0xFFFFFF, 10)
if (foundPos) {
sendone(f1key,1)
f1time:=A_tickcount
}
}
}
foundPos := findbitcolor(pBitmap, f21x-2, f21y-2, f21x+2, f21y+2, f21color, 0)
if (foundPos)
{
if (foundPos)
{
foundPos := findbitcolor(pBitmap, f5x-5, f5y-5, f5x+5, f5y+5, 0xFFFFFF, 1)
if (!foundPos)
{
foundPos := findbitcolor(pBitmap, f6x, f6y-2, f6x+20, f6y+2, 0xFFFFFF, 10)
if (foundPos) {
sendone(f1key,150)
sendone(ty2key,ty2sleep)
sendone(ty3key,ty3sleep)
f1time:=A_tickcount
}
}
}
}
sendloop(wp1key,20)
}
return
jisuyugao:
start:=0
f1time:=0
if(start==0)
{
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
}
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
if(cd[sname].startcd>0)
{
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
hexColor:=Getdxgicolor(pBitmap, sx, sy)
getf2:=Getdxgicolor(pbitmap,f2x,f2y)
while GetKeyState(wp4key, "P") {
sleep 100
}
if(hexColor!=scolor)
{
continue
}
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="twp2")
{
sendbreak(sname,skey,ssleep)
while(GetPixelColor(wp2x,wp2y)!=0x000000)
{
sendone(wp2key,50)
}
cd[sname].startcd := A_TickCount
}
else
if(sname=="ty2" )
{
continue
}
else
if(sname=="ty3" )
{
continue
}
else
if(sname=="ty4" )
{
continue
}
else
if(sname=="ty5" )
{
continue
}
else
if(sname=="ty42")
{
foundPos := findbitcolor(pBitmap, f6x, f6y-2, f6x+50, f6y+2, 0xFFFFFF, 5)
if (foundPos) {
sendone(ty4key,830)
continue
}
else
continue
}
else
if(sname=="ty32")
{
foundPos := findbitcolor(pBitmap, f6x, f6y-2, f6x+50, f6y+2, 0xFFFFFF, 5)
if (foundPos) {
sendone(ty3key,480)
}
else
continue
}
else
{
sendbreak(sname,skey,ssleep)
skill_use[sname].use++
cd[sname].startcd := A_TickCount
}
break
}
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(cd["wp2"].nextcd>1000 && cd["twp5"].nextcd>2000)
{
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
else
if (smode == 1)
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(cd["twp2"].nextcd>1000 && cd["twp5"].nextcd>1000)
{
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
foundPos := findbitcolor(pBitmap, f1x-2, f1y-2, f1x+2, f1y+2, f1color, 0)
if (foundPos) {
foundPos := findbitcolor(pBitmap, f5x-5, f5y-5, f5x+5, f5y+5, 0x000000, 0)
if (!foundPos) {
foundPos := findbitcolor(pBitmap, f6x, f6y-2, f6x+10, f6y+2, 0xFFFFFF, 10)
if (foundPos) {
sendone(f1key,1)
f1time:=A_TickCount
}
}
}
foundPos := findbitcolor(pBitmap, f21x-2, f21y-2, f21x+2, f21y+2, f21color, 0)
if (foundPos) {
foundPos := findbitcolor(pBitmap, f5x-5, f5y-5, f5x+5, f5y+5, 0x000000, 0)
if (!foundPos) {
foundPos := findbitcolor(pBitmap, f6x, f6y-2, f6x+10, f6y+2, 0xFFFFFF, 10)
if (foundPos) {
sendone(f1key,1)
f1time:=A_TickCount
}
}
}
sendloop(wp1key,20)
}
return
jisuyugao2:
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor!=scolor)
{
continue
}
if(sname=="ty2" )
{
if(skill_use[sname].use<1)
{
sendone(skey,10)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
break
}
Else
continue
}
else
if(sname=="ty3" )
{
if(skill_use[sname].use<1)
{
sendone(skey,10)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
break
}
Else
continue
}
else
if(sname=="ty4" )
{
if(skill_use[sname].use<1)
{
sendone(skey,10)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
break
}
Else
continue
}
else
if(sname=="ty5" )
{
if(skill_use[sname].use<1)
{
sendone(skey,10)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
break
}
Else
continue
}
}
foundPos := findbitcolor(pBitmap, f21x-5, f21y-5, f21x+5, f21y+5, f21color, 0)
if (foundPos) {
if(!f1use)
{
f1time:=A_tickcount
f1use:=true
}
skill_use["ty2"].use:=0
skill_use["ty3"].use:=0
skill_use["ty4"].use:=0
skill_use["ty5"].use:=0
}
if(A_tickcount-f1time>9000)
{
f1use:=false
}
}
return
naiyugao:
wp1:=0
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="ty23")
{
sendone(skey,100)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
else
if(sname=="ty25")
{
continue
}
else
if(sname=="f21")
{
foundPos := findbitcolor(pBitmap, f5x-5, f5y-5, f5x+5, f5y+5, 0xFFFFFF, 4)
if (!foundPos) {
foundPos := findbitcolor(pBitmap, f6x, f6y-2, f6x+20, f6y+2, 0xFFFFFF, 3)
if (foundPos) {
sendone(f1key,150)
}
}
else
continue
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
}
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(A_TickCount-f1time>9000)
{
skill_use["ty23"].use:=0
skill_use["ty2"].use:=0
skill_use["ty3"].use:=0
skill_use["ty4"].use:=0
skill_use["ty5"].use:=0
}
if(cd[sname].startcd>0)
{
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
while GetKeyState(wp4key, "P") {
sleep 100
}
while GetKeyState(wp5key, "P") {
sleep 100
}
if(hexcolor!=scolor)
{
continue
}
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="ty2" )
{
continue
}
else
if(sname=="ty3" )
{
continue
}
else
if(sname=="ty4" )
{
continue
}
else
if(sname=="ty5" )
{
continue
}
else
if(sname=="ty23")
{
if(skill_use[sname].use<1)
{
sendone(skey,50)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
Else
continue
}
else
if(sname=="ty25")
{
continue
}
else
if(sname=="f1" or sname=="f21")
{
continue
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
break
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
if (sname == "wp1")
{
sendone(wp1key, 100)
}
if(sname=="f1")
{
foundPos := findbitcolor(pBitmap, f1x-2, f1y-2, f1x+2, f1y+2, f1color, 0)
if (foundPos) {
skill_use["ty25"].use:=0
skill_use["ty23"].use:=0
foundPos := findbitcolor(pBitmap, f5x-5, f5y-5, f5x+5, f5y+5, 0x000000, 0)
if (!foundPos) {
foundPos := findbitcolor(pBitmap, f6x, f6y-2, f6x+5, f6y+2, 0xFFFFFF, 3)
if (foundPos) {
sendone(ty1key,100)
sendone(f1key,500)
f1time:=A_TickCount
sendone(ty5key,1500)
}
}
}
}
if(sname=="f21")
{
foundPos := findbitcolor(pBitmap, f21x-2, f21y-2, f21x+2, f21y+2, f21color, 0)
if (foundPos) {
foundPos := findbitcolor(pBitmap, f5x-5, f5y-5, f5x+5, f5y+5, 0x000000, 0)
if (!foundPos) {
foundPos := findbitcolor(pBitmap, f6x, f6y-2, f6x+20, f6y+2, 0xFFFFFF, 3)
if (foundPos) {
sendone(f1key,1)
f1time:=A_TickCount
}
}
}
}
}
}
return
naiyugao2:
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor!=scolor)
{
continue
}
if(sname=="ty2" )
{
if(skill_use[sname].use<1)
{
sendone(skey,10)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
break
}
Else
continue
}
else
if(sname=="ty3" )
{
if(skill_use[sname].use<1)
{
sendone(skey,10)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
break
}
Else
continue
}
else
if(sname=="ty4" )
{
if(skill_use[sname].use<1)
{
sendone(skey,10)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
break
}
Else
continue
}
else
if(sname=="ty5" )
{
if(skill_use[sname].use<1)
{
sendone(skey,10)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
break
}
Else
continue
}
}
foundPos := findbitcolor(pBitmap, f21x-5, f21y-5, f21x+5, f21y+5, f21color, 0)
if (foundPos) {
if(!f1use)
{
f1time:=A_tickcount
f1use:=true
}
skill_use["ty2"].use:=0
skill_use["ty3"].use:=0
skill_use["ty4"].use:=0
skill_use["ty5"].use:=0
}
if(A_tickcount-f1time>9000)
{
f1use:=false
}
}
return
caijue:
start:=0
if(start==0)
{
skill_group := []
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="ty24")
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
ty24++
}
else
if(sname=="twp2" )
{
sendone(wp2key,350)
loop 15 {
send %wp1key%
sleep 10
}
sendone(rollkey,1)
sleep 650
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
}
}
foundPos := findbitcolor(pBitmap,  f21x-10, f21y-10,  f21x+10, f21y+10, f21color, 2)
if (foundPos) {
ty24++
}
foundPos := findbitcolor(pBitmap,  f1x-10, f1y-10,  f1x+10, f1y+10, f1color, 2)
if (foundPos) {
foundPos := findbitcolor(pBitmap,  f5x-10, f5y-10,  f5x+10, f5y+10, 0xFFFFFF, 1)
if (!foundPos) {
sendone(f1key,150)
sendone(ty4key,1)
ty24++
}
}
Gdip_DisposeImage(pBitmap)
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="ty24")
{
if(A_TickCount-ty24use>=1500)
{
sendone(skey,ssleep)
ty24use:=false
ty24++
}
if(!ty24use)
{
ty24time:=A_TickCount
ty24use:=true
}
else
{
continue
}
}
else
if(sname=="ty5")
{
sendbreak(sname,skey,ssleep)
ty5use++
}
else
if(sname=="fr")
{
sendone(skey,550)
}
else
if(sname=="wp2" )
{
sendone(wp2key,200)
loop 20 {
send %wp1key%
sleep 10
}
cd[sname].startcd := A_TickCount
sendone(rollkey,1)
sleep 800
Continue
}
else
if(sname=="twp2" )
{
sendone(wp2key,300)
loop 20 {
send %wp1key%
sleep 10
}
cd[sname].startcd := A_TickCount
sendone(rollkey,1)
sleep 700
Continue
}
else
if(sname=="ty3")
{
if(ty3use<1)
{
sendbreak(sname,skey,ssleep)
ty3use++
}
else
{
continue
}
}
else
if(sname=="ty2")
{
if(ty2use<2)
{
sendbreak(sname,skey,ssleep)
ty2use++
}
else
{
continue
}
}
else
if(sname=="ty4")
{
if(ty4use<1)
{
sendbreak(sname,skey,ssleep)
ty4use++
}
else
{
continue
}
}
else
{
sendbreak(sname,skey,ssleep)
skill_use[sname].use++
cd[sname].startcd := A_TickCount
}
break
}
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
if(cd[sname].startcd>0)
{
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
}
foundPos := findbitcolor(pBitmap,  f5x-8, f5y-8,  f5x+8, f5y+8, 0xFFFFFF, 2)
if (!foundPos) {
if(ty5use>=1)
{
sendone(f1key,1)
ty5use:=0
ty4use:=0
ty3use:=0
ty2use:=0
}
}
foundPos := findbitcolor(pBitmap,  f21x-5, f21y-5,  f21x+5, f21y+5, f21color, 2)
if (foundPos) {
ty24++
}
if(ty24>=1)
{
foundPos := findbitcolor(pBitmap,  f5x-8, f5y-8,  f5x+8, f5y+8, 0xFFFFFF, 2)
if (!foundPos) {
foundPos := findbitcolor(pBitmap,  f6x, f6y-3,  f6x+24, f6y+3, 0xFFFFFF, 2)
if (foundPos) {
sendone(f1key,150)
sendone(ty5key,500)
twp4:=0
ty24:=0
}
}
}
sendloop(wp1key,20)
}
return
caijue2:
return
dajianduohun:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="wp5")
{
sendone(sKey, 150)
sendone(wp1key, 1)
cd[sname].startcd := A_TickCount
}
else
if (sname == "f1") {
if (!f1use) {
sendone(ty4key,10)
sendone(skey, 150)
sendone(wp1key,1)
sleep 1750
f1use := true
cd[sname].startcd := A_TickCount
}
else
{
continue
}
}
else
{
sendloop(sKey, sSleep)
cd[sname].startcd := A_TickCount
}
}
}
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
if (skill[8] != "") {
smode := skill[8]
}
if(sname=="wm4")
{
sendone(skey, ssleep )
cd[sname].startcd := A_TickCount
}
else
if(sname=="ty2")
{
sendone(skey, ssleep )
cd[sname].startcd := A_TickCount
continue
}
else
if(sname=="ty3")
{
sendone(skey, ssleep )
cd[sname].startcd := A_TickCount
continue
}
else
if (sname == "f1") {
if (!f1use) {
sendone(ty4key,10)
sendone(skey, 150)
sendone(wp1key,1)
sleep 1750
f1use := true
cd[sname].startcd := A_TickCount
}
else
{
continue
}
}
else
if(sname=="wp2")
{
sendone(skey, ssleep )
cd[sname].startcd := A_TickCount
}
else
if(sname=="twp2")
{
sendone(skey, ssleep )
cd[sname].startcd := A_TickCount
}
else
if(sname!="f1" && sname!="wm4")
{
sendbreak(sname,skey, ssleep )
cd[sname].startcd := A_TickCount
}
break
}
}
if(A_TickCount-cd["f1"].startcd>=13000  && cd["f1"].startcd>0)
{
sendone(f1key,1)
f1use:=false
cd["f1"].startcd:=0
}
getf11:=Getdxgicolor(pbitmap,f11x,f11y)
if(f1use:=true && getf11==f11color)
{
f1use:=false
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if( cd["wp5"].nextcd>2000 && cd["wp3"].nextcd>1000 && cd["wp2"].nextcd>1000  )
{
sendone(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
else
if (smode == 1)
{
if( cd["twp2"].nextcd>1000 && cd["twp3"].nextcd>1000 && cd["twp4"].nextcd>1000 && cd["twp5"].nextcd>1000  )
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
sendloop(wp1key,20)
}
return
minfuying:
start:=0
if(start==0)
{
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f2")
{
sendone(f2key, 150 )
sendone(wp2key, 280)
sendone(wp4key, wm4sleep)
cd[sname].startcd := A_TickCount
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
}
}
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
getf4:=Getdxgicolor(pbitmap,f4x,f4y)
getwp3:=Getdxgicolor(pbitmap,wp3x,wp3y)
if(hexColor==scolor)
{
if(sname=="f4")
{
if(getwp3==wp3color)
{
sendbreak(sname,skey,760 )
cd[sname].startcd := A_TickCount
}
else
continue
}
Else
if(sname=="f2")
{
sendbreak(sname,skey,ssleep)
sendone(wp2key, 280)
sendone(wp4key, 760)
cd[sname].startcd := A_TickCount
}
else
if(sname=="wm2")
{
sendbreak(sname,skey,280)
skill_use[sname].use++
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
break
}
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
if(skill_use["wm2"].use>=2)
{
sendone(f2key,120)
skill_use["wm2"].use:=0
}
sendone(wp1key,50)
}
return
minfuying2:
sleep 5000
loop {
getty3:=GetPixelColor(ty3x,ty3y)
getty2:=GetPixelColor(ty2x,ty2y)
getty42:=GetPixelColor(ty42x,ty42y)
if(getty3==ty3color)
{
sendone(ty3key,10)
}
if(getty2==ty2color)
{
sendone(ty2key,10)
}
if(getty42==ty42color)
{
sendone(ty4key,10)
}
}
return
jianbibianzhi:
start:=0
if(start==0)
{
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendloop(sKey, sSleep)
cd[sname].startcd := A_TickCount
}
}
}
start:=1
loop
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor)
{
if(snma=="stone2")
{
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
else
{
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
getf5:=Getdxgicolor(pbitmap,f5x,f5y)
if (getf5 & 0xF00000 = 0xF00000)
leftcolor:="fire"
else
if (getf5 & 0xE00000 = 0xE00000)
leftcolor:="fire"
else
leftcolor:="stone"
getf6:=Getdxgicolor(pbitmap,f6x,f6y)
if (getf6 & 0xF00000 = 0xF00000)
rightcolor:="fire"
else
if (getf6 & 0xE00000 = 0xE00000)
rightcolor:="stone"
if(leftcolor=="fire" && rightcolor=="stone")
{
PixelSearch, Px, Py, f1x-5, f1y-5, f1x+5, f1y+5, 0X000000, 0, Fast RGB
if ErrorLevel != 0
{
sendone(f1key,1)
}
}
else
if(leftcolor=="fire" && rightcolor=="fire")
{
PixelSearch, Px, Py, f1x-5, f1y-5, f1x+5, f1y+5, 0X000000, 0, Fast RGB
if ErrorLevel != 0
{
sendone(f4key,1)
}
}
else
if(leftcolor=="stone" && rightcolor=="fire")
{
PixelSearch, Px, Py, f1x-5, f1y-5, f1x+5, f1y+5, 0X000000, 0, Fast RGB
if ErrorLevel != 0
{
sendone(f1key,1)
}
}
}
return
jianbibianzhi2:
return
shuchupofeng:
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendbreak(sname,sKey, sSleep)
cd[sname].startcd := A_TickCount
}
}
getqwq:=Getdxgicolor(pBitmap, qwqx, qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
else
if (smode == 1)
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=Getdxgicolor(pBitmap, qwqx, qwqy)
gettwp4:=Getdxgicolor(pBitmap, twp42x, twp42y)
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor!=scolor)
{
continue
}
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(A_tickcount-bufftime>4000)
{
buff:=false
}
if(sname=="f1")
{
sendbreak(sname,sKey, ssleep)
bufftime:=A_tickcount
}
else
if(sname=="f3")
{
if(!buff)
{
sendbreak(sname,sKey, 700)
bufftime:=A_tickcount
}
else
continue
}
else
if(sname=="twp3")
{
while(GetPixelColor(wp3x,wp3y)!=0x000000)
{
sendbreak(sname,sKey, 100)
}
cd[sname].startcd := A_TickCount
}
else
if(sname=="twp4")
{
twp4time:=A_tickcount
while(A_tickcount-twp4time<700)
{
sendone(skey,20)
}
}
else
if(sname=="ty3")
{
sendbreak(sname,sKey, 400)
cd[sname].startcd := A_TickCount
}
else
if(sname=="f1")
{
sendbreak(sname,sKey, ssleep)
cd[sname].startcd := A_TickCount
cd[sname].nextcd:=cd[sname].nextcd-1000
}
else
{
sendbreak(sname,sKey, ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
break
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
getqwq:=Getdxgicolor(pBitmap, qwqx, qwqy)
getwp4:=Getdxgicolor(pBitmap,wp4x, wp4y)
gettwp4:=Getdxgicolor(pBitmap, twp4x, twp4y)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
if(cd["wp2"].nextcd>1000 && cd["wp5"].nextcd>1000 && cd["wp4"].nextcd>3000  && getwp4!=wp4color)
{
sendone(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
else
if (smode == 1)
{
if(gettwp4!=twp4color)
{
if(cd["twp2"].nextcd>2000 && cd["twp3"].nextcd>3000 )
{
sendone(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
}
sendone(wp1key,10)
}
return
qiangpofeng:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendone(sKey, sSleep*0.95)
cd[sname].startcd := A_TickCount
}
}
getqwq:=Getdxgicolor(pBitmap, qwqx, qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(sname=="twp4")
{
sendone(skey,ssleep)
twp4use:=A_TickCount
}
else
if(sname=="f1")
{
sendone(skey,ssleep)
loop {
PixelSearch, Px, Py, f1x-5, f1y-5, f1x+5, f1y+5, 0x000000, 1, Fast RGB
if ErrorLevel = 0
{
buff:=A_TickCount
break
}
}
}
else
{
sendone(skey, ssleep)
}
cd[sname].startcd := A_TickCount
}
}
else
if (smode == 1)
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(hexColor==scolor)
{
if(sname=="twp4")
{
if(!twp4)
{
sendone(skey,1)
twp4use:=A_TickCount
cd[sname].startcd := A_TickCount
twp4:=true
}
else
{
continue
}
}
else
if(sname=="twp42")
{
sendloop(wp4key,twp42sleep)
twp4:=false
}
else
if(sname=="ty3")
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
continue
}
else
if(sname=="wp5")
{
sendone(skey,ssleep)
wp5time:=A_TickCount
loop {
sendone(skey,200)
PixelSearch, Px, Py, wp5x-5, wp5y-5, wp5x+5, wp5y+5, 0x000000, 0 , Fast RGB
if ErrorLevel = 0
{
break
}
if(A_TickCount-wp5time>2000)
{
break
}
}
cd[sname].startcd := A_TickCount
}
else
if(sname=="twp5")
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
if(sname=="twp2")
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
if(sname=="ty3")
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
if(sname=="f1")
{
sendone(f2key,200)
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
if(sname=="f3")
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
{
sendone(skey, ssleep*alltime)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
break
}
}
if(A_TickCount-cd["twp4"].startcd>=4000)
{
cd[sname].startcd := A_TickCount
twp4:=false
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
cd[sname].nextcd:=scd-(A_TickCount-cd[sname].startcd)
}
getqwq:=Getdxgicolor(pBitmap, qwqx, qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
if(cd["wp4"].nextcd>2000 && cd["wp5"].nextcd>2000  )
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(sname=="twp4")
{
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
else
{
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
else
if (smode == 1)
{
if(cd["twp4"].nextcd>2000 && cd["twp5"].nextcd>2000 && !twp4)
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
sendloop(wp1key,20)
}
return
qiangjupofeng:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendone(sKey, sSleep*0.95)
cd[sname].startcd := A_TickCount
}
}
getqwq:=Getdxgicolor(pBitmap, qwqx, qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(sname=="twp4")
{
sendone(skey,ssleep)
twp4use:=A_TickCount
}
else
if(sname=="f1")
{
sendone(skey,ssleep)
loop {
PixelSearch, Px, Py, f1x-5, f1y-5, f1x+5, f1y+5, 0x000000, 1, Fast RGB
if ErrorLevel = 0
{
buff:=A_TickCount
break
}
}
}
else
{
sendone(skey, ssleep)
}
cd[sname].startcd := A_TickCount
}
}
else
if (smode == 1)
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(A_TickCount-bufftime>=5000)
{
buff:=false
}
if(hexColor==scolor)
{
if(sname=="twp4")
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
if(sname=="ty3")
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
continue
}
else
if(sname=="wp5")
{
sendone(skey,ssleep)
wp5time:=A_TickCount
loop {
sendone(skey,200)
PixelSearch, Px, Py, wp5x-5, wp5y-5, wp5x+5, wp5y+5, 0x000000, 0 , Fast RGB
if ErrorLevel = 0
{
break
}
if(A_TickCount-wp5time>2000)
{
break
}
}
cd[sname].startcd := A_TickCount
}
else
if(sname=="twp5")
{
getf3:=Getdxgicolor(pbitmap,f3x, f3y)
if(getf3!=f3color)
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
{
continue
}
}
else
if(sname=="twp2")
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
if(sname=="ty3")
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
if(sname=="f1")
{
sendone(f2key,200)
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
if(sname=="ty1")
{
if(!buff)
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
buff:=true
bufftime:=A_TickCount
}
Else
{
continue
}
}
else
if(sname=="f3")
{
if(!buff)
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
buff:=true
bufftime:=A_TickCount
}
Else
{
continue
}
}
else
{
sendone(skey, ssleep*alltime)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
break
}
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
getqwq:=Getdxgicolor(pBitmap, qwqx, qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
if(cd["wp4"].nextcd>2000 && cd["wp5"].nextcd>2000  )
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
else
if (smode == 1)
{
if(cd["twp4"].nextcd>2000 && cd["twp5"].nextcd>2000)
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
sendloop(wp1key,20)
}
return
zhishagnquanxi:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
PixelSearch, Px, Py, f6x, f6y, f61x, f61y, 0xFFFFFF,0, Fast RGB
if (ErrorLevel) = 0
{
total_distance := f61x - f6x
current_distance := Px - f6x
current_energy := (current_distance / total_distance) * 150
}
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f5")
{
if(current_energy<=100)
{
sendone(f5key,150)
sendone(wp3key,twp3sleep)
}
}
else
{
sendone(sKey, sSleep)
cd[sname].startcd := A_TickCount
}
}
}
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
PixelSearch, Px, Py, f6x, f6y, f61x, f61y, 0xFFFFFF,0, Fast RGB
if (ErrorLevel) = 0
{
total_distance := f61x - f6x
current_distance := Px - f6x
current_energy := (current_distance / total_distance) * 150
}
if(current_energy>=140)
{
if(!f5use)
{
sendone(f5key,150)
sendone(wp2key,wp2sleep)
f5use:=true
}
}
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f5")
{
if(current_energy<=85)
{
sendone(f5key,150)
sendone(wp3key,twp3sleep)
f5use:=false
}
else
{
continue
}
}
else
if(sname=="twp3")
{
if(current_energy<140)
{
sendone(skey,ssleep)
}
else
{
continue
}
}
else
if(sname=="wp2")
{
sendone(skey,ssleep)
getty2:=GetPixelColor(ty2x,ty2y)
if(getty2==ty2color)
{
sendone(ty2key,150)
sendone(wp2key,650)
sendloop(qwqkey,50)
}
}
else
if(sname=="twp4")
{
if(current_energy<140)
{
sendone(skey,ssleep)
}
else
{
continue
}
}
else
if(sname=="f3")
{
if(current_energy>=100)
{
sendone(f3key,1)
}
else
{
continue
}
}
else
if(sname=="f1")
{
if(current_energy<=120)
{
sendone(f1key,f1sleep)
}
else
{
continue
}
}
else
if(sname=="f4")
{
if(current_energy>=100)
{
sendone(f4key,1)
}
else
{
continue
}
}
else
if(sname=="ty5")
{
if(current_energy>=100 && current_energ<130 )
{
sendone(skey,ssleep)
}
else
{
continue
}
}
else
if(sname=="ty3")
{
if(current_energy>=100 && current_energ<130 )
{
sendone(ty3key,150)
}
else
{
continue
}
}
else
if(sname=="ty32")
{
if(current_energy>=100)
{
sendone(ty3key,ty3sleep)
}
else
{
continue
}
}
else
if(sname=="ty4")
{
if(current_energy>=100 && current_energ<140 )
{
sendone(ty4key,850)
}
else
{
continue
}
}
else
if(sname!="f51" )
{
sendone(skey, ssleep*alltime)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
break
}
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
cd[sname].nextcd:=scd-(A_TickCount-cd[sname].startcd)
}
sendloop(wp1key,20)
}
return
zhishagnquanxi2:
loop {
PixelSearch, Px, Py, f6x, f6y, f61x, f61y, 0xFFFFFF,0, Fast RGB
if (ErrorLevel) = 0
{
total_distance := f61x - f6x
current_distance := Px - f6x
current_energy := (current_distance / total_distance) * 150
tooltip % Round(current_energy,1),f5x-20,f5y-70
}
if(current_energy>=140)
{
if(!ty5use)
{
sendone(f5key,1)
ty5use:=true
}
}
if(current_energy<=100)
{
ty5use:=false
}
}
return
zhengzhuangxianqu:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f1")
{
sendone(skey, 150)
sendone(wp3key,wm3sleep*alltime)
sendone(wp2key,wp2sleep)
cd[sname].startcd := A_TickCount
}
else
{
sendone(sKey, sSleep)
cd[sname].startcd := A_TickCount
}
}
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
if( skill_use["wp2"].use>=1)
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
skill_use["wp2"].use:=0
}
}
}
else
if (smode == 1)
{
if(cd["twp2"].nextcd>1000)
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f1")
{
sendone(skey, 150)
sendone(wp3key,wm3sleep*alltime)
sendone(wp2key,wp2sleep*alltime)
cd[sname].startcd := A_TickCount
skill_use["wm2"].use=0
}
else
if(sname=="wm2")
{
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
else
if(sname=="wm3")
{
sendone(skey, ssleep*alltime)
cd[sname].startcd := A_TickCount
}
else
if(sname=="f2")
{
if(skill_use["wm2"].use>=2)
{
sendone(f1key, 150)
if(smode==0)
{
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(cd[sname].nextcd<=1)
{
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
if(smode==1)
{
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(cd[sname].nextcd<=1)
{
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
cd[sname].startcd := A_TickCount
skill_use["wm2"].use:=0
}
else
{
continue
}
}
else
if(sname=="wp2")
{
sendone(skey, ssleep*alltime)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
else
if(sname=="wp4")
{
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
else
if(sname=="twp2")
{
sendone(skey, ssleep*alltime)
cd[sname].startcd := A_TickCount
}
else
if(sname=="twp3")
{
sendone(skey, 650)
cd[sname].startcd := A_TickCount
}
else
if(sname=="twp5")
{
sendone(skey, 600)
cd[sname].startcd := A_TickCount
}
else
if(sname=="wp5")
{
sendone(skey,700)
cd[sname].startcd := A_TickCount
}
else
if(sname=="ty2")
{
getty4:=GetPixelColor(ty4x,ty4y)
if(getty4==ty4color)
{
sendone(skey,ssleep)
sendone(ty4key,10)
}
Else
continue
}
else
if(sname=="ty4")
{
continue
}
else
{
sendone(skey, ssleep*alltime)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
break
}
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
getqwq:=Getdxgicolor(pBitmap, qwqx, qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
if( cd["wp2"].nextcd>1000 && cd["wp3"].nextcd>1000 && cd["wp4"].nextcd>1000 &&  cd["wp5"].nextcd>1000)
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(cd[sname].nextcd<=1)
{
sendone(skey, ssleep*alltime)
cd[sname].startcd := A_TickCount
}
}
}
}
else
if (smode == 1)
{
if(cd["twp2"].nextcd>1000)
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(cd[sname].nextcd<=1)
{
sendone(skey, ssleep*alltime)
cd[sname].startcd := A_TickCount
}
}
}
}
}
sendloop(wp1key,20)
}
return
yewailonghun:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(name=="ty23")
{
if(snmode==0 && !ty23use)
{
sendone(ty23key,300)
cd[sname].startcd := A_TickCount
ty23use:=true
}
else
continue
}
else
{
sendone(sKey, sSleep)
cd[sname].startcd := A_TickCount
}
}
}
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendone(skey, ssleep*alltime)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
break
}
}
if(A_TickCount-cd["ty23"].startcd>=20000)
{
ty23use:=false
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
cd[sname].nextcd:=scd-(A_TickCount-cd[sname].startcd)
}
PixelSearch, Px, Py, f1x-10, f1y-10, f1x+10, f1y+10, f1color, 2, Fast RGB
if ErrorLevel = 0
{
PixelSearch, Px, Py, f5x-5, f5y-5, f5x+5, f5y+5, 0xFFFFFF, 0, Fast RGB
if ErrorLevel != 0
{
PixelSearch, Px, Py, f6x, f6y-3, f6x+30, f6y+3, 0xFFFFFF, 8, Fast RGB
if ErrorLevel = 0
{
sendone(f1key,1)
}
}
}
PixelSearch, Px, Py, f21x-10, f21y-10, f21x+10, f21y+10, f21color, 2, Fast RGB
if ErrorLevel = 0
{
PixelSearch, Px, Py, f5x-5, f5y-5, f5x+5, f5y+5, 0xFFFFFF, 0, Fast RGB
if ErrorLevel != 0
{
PixelSearch, Px, Py, f6x, f6y-3, f6x+25, f6y+3, 0xFFFFFF, 8, Fast RGB
if ErrorLevel = 0
{
sendone(f1key,1)
}
}
}
getqwq:=Getdxgicolor(pBitmap, qwqx, qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
Gdip_DisposeImage(pBitmap)
if( cd["wp2"].nextcd>1000 && cd["wp5"].nextcd>1000 )
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(cd[sname].nextcd<=1)
{
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
else
if (smode == 1)
{
Gdip_DisposeImage(pBitmap)
if(cd["twp2"].nextcd>1000 && cd["twp4"].nextcd>1000 && cd["twp5"].nextcd>1000)
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(cd[sname].nextcd<=1)
{
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
}
sendloop(wp1key,20)
}
return
zhishanghunshou:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="wp5")
{
getty5:=GetPixelColor(ty5x,ty5y)
if(getty5==ty5color)
{
sendone(ty5key,ty5sleep)
}
sendone(skey,100)
wp5time:=A_TickCount
while(A_TickCount-wp5time<ssleep-150)
{
getty3:=GetPixelColor(ty3x,ty3y)
if(getty3==ty3color)
{
sendone(ty3key,10)
}
}
}
else
if(sname=="twp4")
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
while(GetPixelColor(twp4x,twp4y)!=0x000000)
{
}
}
else
if(sname=="twp2")
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
while(GetPixelColor(twp2x,twp2y)!=0x000000)
{
}
}
else
{
sendone(sKey, sSleep)
cd[sname].startcd := A_TickCount
}
}
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
getqwq:=Getdxgicolor(pBitmap, qwqx, qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(cd[sname].nextcd<=1)
{
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
else
if (smode == 1)
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(cd[sname].nextcd<=1)
{
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f1")
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
if(sname=="twp5")
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
sleep 1850
}
else
if(sname=="wp4")
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
else
if(sname=="wp5")
{
getty5:=GetPixelColor(ty5x,ty5y)
if(getty5==ty5color)
{
sendone(ty5key,ty5sleep)
}
sendone(skey,100)
wp5time:=A_TickCount
while(A_TickCount-wp5time<ssleep-150)
{
getty3:=GetPixelColor(ty3x,ty3y)
if(getty3==ty3color)
{
sendone(ty3key,10)
}
}
}
else
if(sname=="f3")
{
if( cd["wp3"].nextcd<=1000)
{
sendone(skey,ssleep)
}
else
continue
}
else
if(sname=="wp2")
{
sendone(skey,ssleep)
while(GetPixelColor(wp2x,wp2y)!=0x000000)
{
}
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
else
if(sname=="twp4")
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
while(GetPixelColor(twp4x,twp4y)!=0x000000)
{
}
}
else
if(sname=="twp2")
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
else
if(sname=="twp3")
{
if( skill_use["twp2"].use>=1)
{
sendone(wp3key, ssleep)
cd[sname].startcd := A_TickCount
}
else
{
continue
}
}
else
{
sendone(skey, ssleep*alltime)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
break
}
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
getqwq:=Getdxgicolor(pBitmap, qwqx, qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
if( skill_use["wp4"].use>=1 && cd["wp2"].nextcd>1000 )
{
sendloop(qwqkey,150)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
skill_use["wp4"].use:=0
}
}
else
if (smode == 1)
{
if( skill_use["twp4"].use>=1 && cd["twp2"].nextcd>1000 )
{
sendloop(qwqkey,150 )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
skill_use["twp4"].use:=0
skill_use["twp2"].use:=0
}
}
}
sendloop(wp1key,20)
}
return
zhengzhuangdeluyi:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
getqwq:=Getdxgicolor(pBitmap, qwqx, qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(cd[sname].nextcd<=1)
{
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
else
if (smode == 1)
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
if(cd[sname].nextcd<=1)
{
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="twp3")
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
if(sname=="twp2")
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
else
if(sname=="wp4")
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
if(sname=="wp5")
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
if(sname=="wm5")
{
sendone(wp5key,ssleep)
cd[sname].startcd := A_TickCount
}
else
if(sname=="wm3")
{
sendone(wp3key,ssleep)
cd[sname].startcd := A_TickCount
}
else
if(sname=="wm2")
{
sendone(skey, 10)
while(GetPixelColor(wm2x,wm2y)!=0x000000)
{
sendone(skey, 20)
}
cd[sname].startcd := A_TickCount
skill_use[sname].use++
if(skill_use["wm2"].use>=1)
{
sendone(f5key, 180)
sendone(wp2key, 1)
skill_use["wm2"].use:=0
inf5:=0
}
}
else
if(sname=="f5")
{
if(smode==0)
{
if(cd["wp2"].nextcd>=1000 )
{
inf5:=1
sendone(skey, 130)
sendone(wp2key, 10)
sendone(wp5key,wp5sleep)
cd[sname].startcd := A_TickCount
}
else
continue
}
else
if(smode==1)
{
if(cd["twp2"].nextcd>=1000 )
{
inf5:=1
sendone(skey, 130)
sendone(wp2key, 10)
sendone(wp5key,wp5sleep)
cd[sname].startcd := A_TickCount
}
else
continue
}
}
else
if(sname=="ty2")
{
if(inf5!=1)
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
continue
}
else
if(sname=="ty4")
{
if(inf5!=1)
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
continue
}
else
if(sname=="ty5")
{
if(inf5!=1)
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
continue
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
break
}
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq:=getdxgicolor(pBitmap,qwqx,qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
if(cd["wp5"].nextcd>100  && cd["wp4"].nextcd>1000 && cd["wp3"].nextcd>1000  && cd["wp2"].nextcd>1000 )
{
sendloop(qwqkey,130)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
else
if (smode == 1)
{
if(cd["twp5"].nextcd>100  && cd["twp4"].nextcd>1000 && cd["twp3"].nextcd>1000  && cd["twp2"].nextcd>1000 )
{
sendloop(qwqkey,130 )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
sendloop(wp1key,20)
}
return
jianhaoyuanjing:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(sname=="f5")
{
sendone(f5key,1)
}
if(sname=="f2")
{
sendone(f2key,300)
}
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="ty2")
{
sendbreak(sname,ty2key,510)
while(GetPixelColor(ty2x,ty2y)!=0x000000)
{
}
}
else
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
}
}
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f5")
{
continue
}
else
if(sname=="f1")
{
if( skill_use["fire2"].use>=1 )
{
foundPos := findbitcolor(pBitmap, f14x-5, f14y-5, f14x+5, f14y+5, f14color, 0)
if (foundPos)
{
sendone(f4key,150)
sendone(wp2key,stone2sleep)
cd["stone2"].startcd := A_TickCount
}
}
}
else
if(sname=="f4")
{
skill_use["fire2"].use:=0
if( cd["stone2"].nextcd>1000 &&  cd["stone3"].nextcd>1000 &&  cd["stone5"].nextcd>1000 )
{
foundPos := findbitcolor(pBitmap, f42x-5, f42y-5, f42x+5, f42y+5, f42color, 0)
if (foundPos)
{
sendone(f2key,150)
sendone(wp3key,water3sleep)
cd["water3"].startcd := A_TickCount
}
}
}
else
if(sname=="f2")
{
if( cd["water3"].nextcd>2000 && cd["water4"].nextcd>2000  && cd["water5"].nextcd>2000 )
{
foundPos := findbitcolor(pBitmap, f23x-5, f23y-5, f23x+5, f23y+5, f23color, 0)
if (foundPos)
{
sendone(f3key,1)
}
}
}
else
if(sname=="f3")
{
foundPos := findbitcolor(pBitmap, f31x-5, f31y-5, f31x+5, f31y+5, f31color, 0)
if (foundPos)
{
sendone(f1key,150)
sendone(wp2key,fire2sleep)
cd["fire2"].startcd := A_TickCount
}
}
else
if(sname=="fire2")
{
sendbreak(sname,wp2key,fire2sleep/2)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
break
}
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
cd[sname].nextcd:=scd-(A_TickCount-cd[sname].startcd)
}
sendloop(wp1key,20)
}
return
jianhaoyuanjing2:
loop
{
foundPos := findbitcolor(pBitmap, f5x-5, f5y-5, f5x+5, f5y+5, 0x000000, 0)
if (!foundPos)
{
sleep 150
sendone(f5key,1)
}
}
return
jisuyuanjing:
start:=0
if(start==0)
{
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(sname=="f5")
{
sendone(f5key,1)
}
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
}
}
Gdip_DisposeImage(pBitmap)
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
while GetKeyState(ty2key, "P") {
sleep 100
}
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f5")
{
continue
}
else
if(sname=="f1")
{
foundPos := findbitcolor(pBitmap, f14x-5, f14y-5,  f14x+5, f14y+5, f14color, 0)
if (foundPos) {
sendone(f4key,150)
sendone(wp2key,stone2sleep)
}
else
continue
}
else
if(sname=="f4")
{
foundPos :=  findbitcolor(pBitmap, f42x-5, f42y-5,  f42x+5, f42y+5, f42color, 0)
if (foundPos) {
sendone(f2key,150)
sendone(wp3key,water3sleep)
}
else
continue
}
else
if(sname=="f2")
{
foundPos := findbitcolor(pBitmap,  f23x-5, f23y-5,  f23x+5, f23y+5, f23color, 0)
if (foundPos) {
sendone(f3key,1)
}
else
continue
}
else
if(sname=="f3")
{
foundPos := findbitcolor(pBitmap,  f31x-5, f31y-5,  f31x+5, f31y+5, f31color, 0)
if (foundPos) {
sendone(f1key,150)
sendone(wp2key,fire2sleep)
}
else
continue
}
else
if(sname=="water5")
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
break
}
}
if (!GetKeyState(ty2key, "P") ) {
sendone(wp1key, 20)
}
}
return
jisuyuanjing2:
loop
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
foundPos := findbitcolor(pBitmap,  f5x-10, f5y-10,  f5x+10, f5y, 0x000000,0 )
if (!foundPos) {
sleep 50
sendone(f5key,1)
}
}
return
qianghaoyuanjing:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(sname=="f5")
{
sendone(f5key,1)
}
if(sname=="f2")
{
sendone(f2key,300)
}
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
}
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if GetKeyState(ty2key, "P")
{
sendone(ty2key,510)
}
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f5")
{
continue
}
else
if(sname=="f1")
{
if( skill_use["fire2"].use>=1 )
{
foundPos := findbitcolor(pBitmap,  f14x-5, f14y-5,  f14x+5, f14y+5, f14color, 1)
if (foundPos) {
sendone(f4key,120)
sendone(wp2key,stone2sleep)
cd["stone2"].startcd := A_TickCount
}
}
}
else
if(sname=="f4")
{
skill_use["fire2"].use:=0
foundPos := findbitcolor(pBitmap,  f42x-5, f42y-5,  f42x+5, f42y+5, f42color, 1)
if (foundPos) {
sendone(f2key,120)
sendone(wp2key,water2sleep)
cd["water3"].startcd := A_TickCount
skill_use["stone2"].use:=0
}
}
else
if(sname=="f2")
{
if( cd["water2"].nextcd>1000 )
{
foundPos := findbitcolor(pBitmap,  f23x-5, f23y-5,f23x+5, f23y+5, f23color,1)
if (foundPos) {
sendone(f3key,120)
sendone(wp2key,flash2sleep)
cd["flash2"].startcd := A_TickCount
}
}
}
else
if(sname=="f3")
{
foundPos := findbitcolor(pBitmap,  f31x-5, f31y-5,  f31x+5, f31y+5, f31color, 1)
if (foundPos) {
sendone(f1key,120)
sendone(wp2key,fire2sleep)
cd["fire2"].startcd := A_TickCount
}
}
else
if(sname=="fire2")
{
sendbreak(sname,wp2key,fire2sleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
else
if(sname=="stone2")
{
sendbreak(sname,wp2key,stone2sleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
else
if(sname=="water2")
{
sendbreak(sname,wp2key,water2sleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
else
if(sname=="falsh2")
{
sendbreak(sname,wp2key,falsh2sleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
break
}
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
cd[sname].nextcd:=scd-(A_TickCount-cd[sname].startcd)
}
sendloop(wp1key,20)
}
return
qianghaoyuanjing2:
loop
{
pBitmap := getpbitmap()
foundPos := findbitcolor(pBitmap,  f5x-10, f5y-10,  f5x+10, f5y, 0x000000,0 )
if (!foundPos) {
sleep 50
sendone(f5key,1)
}
Gdip_DisposeImage(pBitmap)
}
return
jiehaoyuanjing:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(sname=="f5")
{
sendone(f5key,1)
}
if(sname=="f2")
{
sendone(f2key,300)
}
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="ty2")
{
sendbreak(sname,ty2key,510)
while(GetPixelColor(ty2x,ty2y)!=0x000000)
{
}
}
else
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
}
}
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if GetKeyState(ty2key, "P")
{
sendone(ty2key,510)
}
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f5")
{
continue
}
else
if(sname=="f1")
{
if(   skill_use["fire2"].use>=1)
{
foundPos := findbitcolor(pBitmap,  f14x-5, f14y-5,  f14x+5, f14y+5, f14color, 0)
if (foundPos) {
sendone(f4key,150)
sendone(wp2key,stone2sleep)
cd["stone2"].startcd := A_TickCount
skill_use["fire2"].use:=0
}
}
}
else
if(sname=="f4")
{
skill_use["fire2"].use:=0
foundPos := findbitcolor(pBitmap,  f42x-5, f42y-5,  f42x+5, f42y+5, f42color,0)
if (foundPos) {
sendone(wp2key,1)
sendone(f2key,150)
sendone(wp2key,water2sleep)
cd["water3"].startcd := A_TickCount
skill_use["stone2"].use:=0
}
}
else
if(sname=="f2")
{
foundPos := findbitcolor(pBitmap,  f23x-5, f23y-5,  f23x+5, f23y+5, f23color, 0)
if (foundPos) {
sendone(f3key,150)
sendone(wp3key,1)
sendone(wp2key,1)
}
}
else
if(sname=="f3")
{
foundPos := findbitcolor(pBitmap,  f31x-5, f31y-5,  f31x+5, f31y+5, f31color, 0)
if (foundPos) {
sendone(f1key,150)
sendone(wp2key,fire2sleep)
cd["flash2"].startcd := A_TickCount
skill_use["flash2"].use:=0
}
}
else
if(sname=="fire2")
{
sendbreak(sname,wp2key,fire2sleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
else
if(sname=="stone2")
{
sendbreak(sname,wp2key,stone2sleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
else
if(sname=="water2")
{
sendbreak(sname,wp2key,water2sleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
else
if(sname=="falsh2")
{
sendbreak(sname,wp2key,falsh2sleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
break
}
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
cd[sname].nextcd:=scd-(A_TickCount-cd[sname].startcd)
}
sendloop(wp1key,20)
}
return
jiehaoyuanjing2:
loop
{
pBitmap := getpbitmap()
getstone22:=Getdxgicolor(pBitmap,stone22x,stone22y)
if(getstone22==stone22color)
{
sendone(wp2key,10)
}
foundPos := findbitcolor(pBitmap,  f5x-10, f5y-10,  f5x+10, f5y, 0x000000,0 )
if (!foundPos) {
sleep 50
sendone(f5key,1)
}
Gdip_DisposeImage(pBitmap)
}
return
dachuiyuanjing:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pbitmap,sx,sy)
if(sname=="f5")
{
sendone(f5key,1)
}
if(sname=="f2")
{
sendone(f2key,300)
}
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="ty2")
{
sendbreak(sname,ty2key,510)
while(GetPixelColor(ty2x,ty2y)!=0x000000)
{
}
}
else
{
sendone(skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
}
}
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
a:=A_TickCount
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor := Getdxgicolor(pBitmap, sx,sy)
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f5")
{
continue
}
else
if(sname=="f1")
{
foundPos := findbitcolor(pBitmap,  f13x-5, f13y-5,  f13x+5, f13y+5, f13color, 0)
if (foundPos) {
sendone(f3key,1)
}
}
else
if(sname=="f4")
{
foundPos := findbitcolor(pBitmap,  f41x-5, f41y-5,  f41x+5, f41y+5, f41color, 0)
if (foundPos) {
sendone(f1key,150)
sendone(wp2key,fire2sleep)
}
}
else
if(sname=="f2")
{
foundPos := findbitcolor(pBitmap,  f24x-5, f24y-5,  f24x+5, f24y+5, f24color, 0)
if (foundPos) {
sendone(f4key,150)
sendone(wp2key,stone2sleep)
}
}
else
if(sname=="f3")
{
foundPos := findbitcolor(pBitmap,  f32x-5, f32y-5,  f32x+5, f32y+5, f32color,0)
if (foundPos) {
sendone(f2key,150)
sendone(wp2key,water2sleep)
}
}
else
if(sname=="fire2")
{
sendone(wp2key,fire2sleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
else
if(sname=="stone2")
{
sendone(wp2key,stone2sleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
else
if(sname=="water2")
{
sendone(wp2key,water2sleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
else
if(sname=="falsh2")
{
sendone(wp2key,falsh2sleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
}
}
for index, skill in skills {
scd := skill[7]
sname := skill[1]
cd[sname].nextcd:=scd-(A_TickCount-cd[sname].startcd)
}
sendloop(wp1key,20)
}
return
dachuiyuanjing2:
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getflash32:=Getdxgicolor(pBitmap, flash32x, flash32y)
wp3group:=["fire3","water3","flash3","stone3"]
for  index, skill in wp3group
{
getx :=skill . "x"
getx:=%getx%
gety := skill . "y"
gety:=%gety%
getcolor := skill . "color"
getcolor:=%getcolor%
foundPos := findbitcolor(pBitmap, getx-10, gety-10,getx+10, gety+10, getcolor, 4)
if (foundPos) {
sendone(wp3key,500)
wp3++
}
}
if(wp3>=4 && getflash32==flash32color)
{
usetime:=A_TickCount
while(A_TickCount-usetime<2000)
{
sendloop(wp3key,500)
while(GetPixelColor(flash32x,flash32y)!=0x000000)
{
sendone(wp3key,500)
}
wp3:=0
}
}
}
return
dachuiyuanjing3:
loop {
pBitmap := getpbitmap()
foundPos := findbitcolor(pBitmap, f5x-5, f5y-5,  f5x+5, f5y+5, 0x000000, 0)
if (!foundPos) {
sendone(f5key,1)
}
Gdip_DisposeImage(pBitmap)
}
return
fazhangkuangshou:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendloop(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor := Getdxgicolor(pBitmap, sx,sy)
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
break
}
}
pBitmap := getpbitmap()
getqwq:=Getdxgicolor(pBitmap, qwqx, qwqy)
if( getqwq==qwqcolor  )
{
getf5:=Getdxgicolor(pBitmap, f5x, f5y)
if(getf5==f5color)
{
if(!f5use)
{
sendone(f5key,1)
loop {
sendone(f1key,10)
sendone(f2key,10)
sendone(f3key,10)
getf51:=GetPixelColor(f51x,f51y)
if(getf51==f51color)
{
SendLoop(f5key,1)
sttime:=A_TickCount
while(A_TickCount-sttime<1130)
{
SendLoop(wp1key,50)
}
f5start:=A_TickCount
f5use:=true
break
}
}
}
}
}
if(A_TickCount-f5start>=1000)
{
sendloop(qwqkey,qwqwait )
sttime:=A_TickCount
while(A_TickCount-sttime<1130)
{
SendLoop(wp1key,50)
}
f5use:=false
f5start:=""
}
sendloop(wp1key,20)
}
return
dajiankuangshou:
loop
{
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="wp3")
{
sendbreak(sname,skey,ssleep+200)
cd[sname].startcd := A_TickCount
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
}
}
start:=1
}
while GetKeyState(wp4key, "P") {
sleep 100
}
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor := Getdxgicolor(pBitmap, sx,sy)
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f51")
{
sendone(f1key,1)
sendone(f2key,1)
sendone(f3key,1)
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
f5use:=false
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
break
}
}
pBitmap := getpbitmap()
getqwq:=Getdxgicolor(pBitmap, qwqx, qwqy)
if( getqwq==qwqcolor  )
{
getf5:=Getdxgicolor(pBitmap, f5x, f5y)
if(getf5==f5color)
{
if(!f5use)
{
sendone(f5key,1)
f5time:=A_TickCount
while(A_TickCount-f5time<1750)
{
sendone(f1key,10)
sendone(f2key,10)
sendone(f3key,10)
sendone(wp1key,10)
}
getf51:=GetPixelColor(f51x,f51y)
getty22:=GetPixelColor(ty22x,ty22y)
if(getf51==f51color)
{
f5use:=false
sendone(f5key,150)
if(getty22==ty22color)
{
sendone(ty2key,10)
}
sendone(wp1key,860)
sendone(qwqkey,150)
sendone(wp1key,760)
}
}
}
}
if (!GetKeyState(wp4key, "P") ) {
sendone(wp1key, 20)
}
}
return
fuhaokuangshou:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
}
start:=1
}
loop
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor := Getdxgicolor(pBitmap, sx,sy)
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f51")
{
sendone(f1key,1)
sendone(f2key,1)
sendone(f3key,1)
sendbreak(sname,skey,ssleep)
sendone(wp1key,760)
cd[sname].startcd := A_TickCount
f5use:=false
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
break
}
}
pBitmap := getpbitmap()
getqwq:=Getdxgicolor(pBitmap, qwqx, qwqy)
if( getqwq==qwqcolor  )
{
getf5:=Getdxgicolor(pBitmap, f5x, f5y)
if(getf5==f5color)
{
if(!f5use)
{
sendone(f5key,120)
loop {
sendone(f1key,10)
sendone(f2key,10)
sendone(f3key,10)
getf51:=GetPixelColor(f51x,f51y)
getty22:=GetPixelColor(ty22x,ty22y)
if(getf51==f51color)
{
f5use:=false
sendone(f5key,150)
if(getty22==ty22color)
{
sendone(ty2key,10)
}
sendone(wp1key,800)
sendone(qwqkey,150)
sendone(wp1key,800)
break
}
}
}
}
}
sendone(wp1key, 20)
}
return
naikuangzhan:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
}
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor := Getdxgicolor(pBitmap, sx,sy)
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="wp5")
{
sendbreak(sname,skey,ssleep)
while(GetPixelColor(wp5x,wp5y)!=0x000000)
{
sendone(wp5key,20)
}
}
Else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
break
}
}
sendone(wp1key,20)
}
return
buqiangshenqiangshou:
Iniread, wp3skill, %bdFilePath%, wp3skill, wp3use
wp3:=wp3skill
Iniread, times, %bdFilePath%, wp3time, times
if(A_tickcount-times>15000)
{
wp3:=0
}
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
}
start:=1
}
loop{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor := Getdxgicolor(pBitmap, sx,sy)
if(cd[sname].startcd>0)
{
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
getwp2:=Getdxgicolor(pBitmap, wp2x,wp2y)
gettwp4:=Getdxgicolor(pBitmap, twp4x,twp4y)
getf2:=getdxgicolor(pbitmap,f2x,f2y)
if(getwp2==wp2color)
{
smode:=0
wp1sleep:=660
}
if(gettwp4==twp4color)
{
smode:=1
wp1sleep:=1100
}
if(sname=="f2")
{
if(wp3>=3)
{
if(getf2==f2color)
{
loop {
getf2:=GetPixelColor(f2x,f2y)
if(getf2!=f2color)
{
break
}
sendone(f2key,50)
}
wp1time:=A_tickcount
while(A_tickcount-wp1time<wp1sleep)
{
sendone(wp1key,60)
}
wp3:=0
IniWrite, 0, %bdFilePath%, wp3skill, wp3use
}
}
else
continue
}
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f1")
{
if(getf2!=f2color)
{
sendbreak(sname,skey,ssleep)
sendone(wp1key,1)
cd[sname].startcd := A_TickCount
}
else
continue
}
else
if(sname=="f4")
{
if(wp3<3 && smode==0)
{
sendone(wp3key,800)
wp3++
IniWrite, %wp3%, %bdFilePath%, wp3skill, wp3use
IniWrite, % A_tickcount, %bdFilePath%, wp3time, times
}
else
if(wp3<3 && smode==1 )
{
sendone(wp2key,620)
wp3++
IniWrite, %wp3%, %bdFilePath%, wp3skill, wp3use
IniWrite, % A_tickcount, %bdFilePath%, wp3time, times
}
else
continue
}
else
if(sname=="f12")
{
if(smode==0)
{
sendone(wp3key,810  )
}
else
if(smode==1)
{
sendone(wp2key,620)
}
else
continue
}
else
if(sname=="ty5")
{
if(wp3>=3 )
{
sendbreak(sname,skey,600)
cd[sname].startcd := A_TickCount
wp1time:=A_tickcount
while(A_tickcount-wp1time<=wp1sleep)
{
sendone(wp1key,60)
}
wp3:=0
IniWrite, 0, %bdFilePath%, wp3skill, wp3use
}
else
continue
}
else
if(sname=="ty1")
{
if(wp3>=3 )
{
sendbreak(sname,skey,950)
cd[sname].startcd := A_TickCount
wp1time:=A_tickcount
while(A_tickcount-wp1time<=wp1sleep)
{
sendone(wp1key,60)
}
wp3:=0
IniWrite, 0, %bdFilePath%, wp3skill, wp3use
}
else
continue
}
else
if(sname=="ty4")
{
if(wp3>=3 )
{
if(getf2!=f2color )
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd:= A_TickCount
wp1time:=A_tickcount
while(A_tickcount-wp1time<=wp1sleep)
{
sendone(wp1key,60)
}
wp3:=0
IniWrite, 0, %bdFilePath%, wp3skill, wp3use
}
}
else
continue
}
else
if(sname=="twp5")
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
if(sname=="ty3")
{
if(wp3>=3)
{
if(getf2!=f2color)
{
getty3:=Getdxgicolor(pBitmap, ty3x,ty3y)
if(getty3==ty3color)
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
wp3:=0
IniWrite, 0, %bdFilePath%, wp3skill, wp3use
}
}
}
else
continue
}
Else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
break
}
}
}
return
jisushenqiang:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
}
start:=1
}
loop{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor := Getdxgicolor(pBitmap, sx,sy)
if(cd[sname].startcd>0)
{
cd[sname].nextcd:=scd-(A_TickCount-cd[sname].startcd)
}
getwp2 := Getdxgicolor(pBitmap, wp2x,wp2y)
gettwp2 := Getdxgicolor(pBitmap, twp2x,twp2y)
getf2:=getdxgicolor(pbitmap,f2x,f2y)
if(getwp2==wp2color)
{
smode:=0
wp1sleep:=700
}
if(gettwp2==twp2color)
{
smode:=1
wp1sleep:=750
}
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f2")
{
if(wp3>=3 )
{
sendbreak(sname,skey,400)
cd[sname].startcd:= A_TickCount
wp1time:=A_tickcount
while(A_tickcount-wp1time<wp1sleep)
{
sendone(wp1key,20)
}
wp3:=0
}
else
continue
}
else
if(sname=="ty2")
{
if (getf2!=f2color && cd["f1"].nextcd<=15000)
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
wp3:=0
}
Else
continue
}
else
if(sname=="ty4")
{
if(wp3>=3 )
{
if (getf2!=f2color && cd["f1"].nextcd<=15000)
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd:= A_TickCount
wp1time:=A_tickcount
while(A_tickcount-wp1time<wp1sleep)
{
sendone(wp1key,20)
}
wp3:=0
}
}
else
continue
}
else
if(sname=="f1")
{
if (getf2!=f2color)
{
sendbreak(sname,skey,ssleep)
sendone(wp1key,1)
cd[sname].startcd := A_TickCount
}
else
continue
}
else
if(sname=="f4")
{
if(smode==0)
{
sendone(wp3key,1310)
wp3++
}
else
if(smode==1)
{
sendone(wp3key,750)
wp3++
}
}
else
if(sname=="ty5")
{
if(wp3>=3 )
{
if (getf2!=f2color)
{
if(cd["f1"].nextcd<=15000)
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
wp1time:=A_tickcount
while(A_tickcount-wp1time<wp1sleep)
{
sendone(wp1key,20)
}
wp3:=0
}
}
}
else
continue
}
Else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
break
}
}
}
return
jisushenqiang2:
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getty3:=getdxgicolor(pbitmap,ty3x,ty3y)
if(getty3==ty3color)
{
sendone(ty3key,20)
}
}
return
yewaishenqiang:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
}
start:=1
}
loop{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor := Getdxgicolor(pBitmap, sx,sy)
if(cd[sname].startcd>0)
{
cd[sname].nextcd:=scd-(A_TickCount-cd[sname].startcd)
}
getwp2 := Getdxgicolor(pBitmap, wp2x,wp2y)
gettwp2 := Getdxgicolor(pBitmap, twp2x,twp2y)
getf2:=getdxgicolor(pbitmap,f2x,f2y)
if(getwp2==wp2color)
{
smode:=0
wp1sleep:=700
}
if(gettwp2==twp2color)
{
smode:=1
wp1sleep:=750
}
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f2")
{
if(wp3>=3 )
{
loop {
getf2:=GetPixelColor(f2x,f2y)
if(getf2!=f2color)
{
break
}
sendone(f2key,50)
}
wp1time:=A_tickcount
while(A_tickcount-wp1time<wp1sleep)
{
sendone(wp1key,60)
}
wp3:=0
IniWrite, 0, %bdFilePath%, wp3skill, wp3use
}
else
continue
}
else
if(sname=="ty2")
{
if (getf2!=f2color && cd["f1"].nextcd<=15000)
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
Else
continue
}
else
if(sname=="ty4")
{
if(wp3>=3 )
{
if (getf2!=f2color && cd["f1"].nextcd<=15000)
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd:= A_TickCount
wp1time:=A_tickcount
while(A_tickcount-wp1time<wp1sleep)
{
sendone(wp1key,20)
}
wp3:=0
}
}
else
continue
}
else
if(sname=="f1")
{
if (getf2!=f2color)
{
sendbreak(sname,skey,ssleep)
sendone(wp1key,1)
cd[sname].startcd := A_TickCount
}
else
continue
}
else
if(sname=="f4")
{
if(smode==0)
{
sendone(wp3key,1310)
wp3++
}
else
if(smode==1)
{
sendone(wp3key,750)
wp3++
}
}
else
if(sname=="ty5")
{
if(wp3>=3 )
{
if (getf2!=f2color)
{
if(cd["f1"].nextcd<=15000)
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
wp1time:=A_tickcount
while(A_tickcount-wp1time<wp1sleep)
{
sendone(wp1key,20)
}
wp3:=0
}
}
}
else
continue
}
Else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
break
}
}
}
return
qixingshenqiang:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
}
start:=1
}
loop{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor := Getdxgicolor(pBitmap, sx,sy)
if(cd[sname].startcd>0)
{
cd[sname].nextcd:=scd-(A_TickCount-cd[sname].startcd)
}
getwp2 := Getdxgicolor(pBitmap, wp2x,wp2y)
gettwp2 := Getdxgicolor(pBitmap, twp2x,twp2y)
getf2:=getdxgicolor(pbitmap,f2x,f2y)
if(getwp2==wp2color)
{
smode:=0
wp1sleep:=700
}
if(gettwp2==twp2color)
{
smode:=1
wp1sleep:=650
}
if(sname=="f2")
{
if(wp3>=4)
{
if(getf2==f2color)
{
loop {
getf2:=GetPixelColor(f2x,f2y)
if(getf2!=f2color)
{
break
}
sendone(f2key,50)
}
wp1time:=A_tickcount
while(A_tickcount-wp1time<wp1sleep)
{
sendone(wp1key,60)
}
wp3:=0
IniWrite, 0, %bdFilePath%, wp3skill, wp3use
}
}
else
continue
}
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="ty2")
{
if(getf2!=f2color && cd["f1"].nextcd<=15000)
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
Else
continue
}
else
if(sname=="f1")
{
if(getf2!=f2color)
{
sendbreak(sname,skey,600)
sendone(wp1key,1)
cd[sname].startcd := A_TickCount
}
else
continue
}
else
if(sname=="f4")
{
sendbreak(sname,wp3key,1300 )
wp3++
}
else
if(sname=="ty5")
{
if(wp3>=4 && cd["f1"].nextcd<=15000)
{
if(getf2!=f2color)
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
wp1time:=A_tickcount
while(A_tickcount-wp1time<wp1sleep)
{
sendone(wp1key,20)
}
wp3:=0
}
}
else
continue
}
Else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
break
}
}
}
return
qixingshenqiang2:
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getty3:=getdxgicolor(pbitmap,ty3x,ty3y)
if(getty3==ty3color)
{
sendone(ty3key,20)
}
}
return
jiebiyuanjing:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
getty2:=Getdxgicolor(pBitmap,ty2x,ty2y)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
}
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
getty2:=getdxgicolor(pbitmap,ty2x,ty2y)
if(cd[sname].startcd>0)
{
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="stone2")
{
stone2time:=A_tickcount
while(A_tickcount-stone2time<900)
{
sendone(skey,20)
}
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
else
if(sname=="f1")
{
if( skill_use["fire2"].use>=2)
{
foundPos := findbitcolor(pBitmap,  f14x-2, f14y-2,  f14x+2, f14y+2, f14color, 0)
if (foundPos) {
sendone(f4key,150)
skill_use["fire2"].use:=0
}
}
else
continue
}
else
if(sname=="f4")
{
foundPos := findbitcolor(pBitmap,  f42x-2, f42y-2,  f42x+2, f42y+2, f42color,0)
if (foundPos) {
sendone(f2key,qwqwait)
sendone(wp4key,1)
}
else
continue
}
else
if(sname=="f2")
{
if( skill_use["water2"].use>=2)
{
foundPos := findbitcolor(pBitmap,  f23x-2, f23y-2,f23x+2, f23y+2, f23color, 0)
if (foundPos)
{
sendone(f3key,qwqwait)
sendone(wp2key,1)
skill_use["water2"].use:=0
}
}
else
continue
}
else
if(sname=="f3")
{
foundPos := findbitcolor(pBitmap,  f31x-2, f31y-2,  f31x+2, f31y+2, f31color, 0)
if (foundPos ) {
sendone(f1key,qwqwait)
if(getty2==ty2color)
{
sendone(ty2key,ty2sleep)
ty2time:=A_tickcount
ty2++
}
}
else
continue
}
else
if(sname=="ty2")
{
foundPos := findbitcolor(pBitmap, f1x-1, f1y-1,  f1x+1, f1y+1, f1color, 0)
if (foundPos) {
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
ty2time:=A_tickcount
ty2++
}
else
continue
}
else
if(sname=="ty3")
{
if(ty2>=1)
{
sendone(ty3key,10)
}
else
continue
}
else
if(sname=="ty4")
{
foundPos := findbitcolor(pBitmap, f3x-1, f3y-1,  f3x+1, f3y+1, f3color, 0)
if (foundPos) {
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
continue
}
else
if(sname=="ty5")
{
foundPos := findbitcolor(pBitmap, f1x-1, f1y-1,  f1x+1, f1y+1, f1color, 0)
if (foundPos) {
if(cd["fire2"].nextcd>1000 && cd["fire5"].nextcd>1000 && cd["fire4"].nextcd>1000 && cd["fire3"].nextcd>1000)
{
sendbreak(sname,skey,300)
cd[sname].startcd := A_TickCount
skill_use["fire2"].use:=1
}
}
else
continue
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
break
}
}
if(A_tickcount-ty2time>8000)
{
ty2:=0
}
sendloop(wp1key,20)
}
return
jiebiyuanjing2:
sleep 100
loop {
pBitmap := getpbitmap()
getstone22:=Getdxgicolor(pBitmap, stone22x, stone22y)
getty3:=Getdxgicolor(pBitmap, ty3x, ty3y)
foundPos := findbitcolor(pBitmap, f5x-5, f5y-5,  f5x+5, f5y+5, 0x000000, 0)
if (!foundPos) {
sendone(f5key,1)
}
if(getstone22==stone22color)
{
sendone(wp2key,10)
}
Gdip_DisposeImage(pBitmap)
}
return
jiebiyuanjing3:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
getty2:=Getdxgicolor(pBitmap,ty2x,ty2y)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
}
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
getty2:=getdxgicolor(pbitmap,ty2x,ty2y)
if(cd[sname].startcd>0)
{
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="stone2")
{
stone2time:=A_tickcount
while(A_tickcount-stone2time<900)
{
sendone(skey,20)
}
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
else
if(sname=="f1")
{
if( skill_use["fire2"].use>=2)
{
foundPos := findbitcolor(pBitmap,  f14x-2, f14y-2,  f14x+2, f14y+2, f14color, 0)
if (foundPos) {
sendone(f4key,qwqwait)
stone2time:=A_tickcount
while(A_tickcount-stone2time<900)
{
sendone(wp2key,20)
}
skill_use["fire2"].use:=0
}
}
else
continue
}
else
if(sname=="f4")
{
foundPos := findbitcolor(pBitmap,  f42x-2, f42y-2,  f42x+2, f42y+2, f42color,0)
if (foundPos) {
sendone(f2key,1)
}
else
continue
}
else
if(sname=="f2")
{
if( skill_use["water2"].use>=2)
{
foundPos := findbitcolor(pBitmap,  f23x-2, f23y-2,f23x+2, f23y+2, f23color, 0)
if (foundPos)
{
sendone(f3key,qwqwait)
sendone(wp2key,1)
skill_use["water2"].use:=0
}
}
else
continue
}
else
if(sname=="f3")
{
foundPos := findbitcolor(pBitmap,  f31x-2, f31y-2,  f31x+2, f31y+2, f31color, 0)
if (foundPos ) {
sendone(f1key,qwqwait)
if(getty2==ty2color)
{
sendone(ty2key,ty2sleep)
ty2time:=A_tickcount
ty2++
}
}
else
continue
}
else
if(sname=="ty2")
{
foundPos := findbitcolor(pBitmap, f1x-1, f1y-1,  f1x+1, f1y+1, f1color, 0)
if (foundPos) {
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
ty2time:=A_tickcount
ty2++
}
else
continue
}
else
if(sname=="ty3")
{
if(ty2>=1)
{
sendone(ty3key,10)
}
else
continue
}
else
if(sname=="ty4")
{
foundPos := findbitcolor(pBitmap, f3x-1, f3y-1,  f3x+1, f3y+1, f3color, 0)
if (foundPos) {
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
continue
}
else
if(sname=="ty5")
{
foundPos := findbitcolor(pBitmap, f1x-1, f1y-1,  f1x+1, f1y+1, f1color, 0)
if (foundPos) {
if(cd["fire2"].nextcd>1000 && cd["fire5"].nextcd>1000 && cd["fire4"].nextcd>1000 && cd["fire3"].nextcd>1000)
{
sendbreak(sname,skey,300)
cd[sname].startcd := A_TickCount
skill_use["fire2"].use:=1
}
}
else
continue
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
break
}
}
if(A_tickcount-ty2time>8000)
{
ty2:=0
}
sendloop(wp1key,20)
}
return
jiebiyuanjing4:
sleep 100
loop {
pBitmap := getpbitmap()
getstone22:=Getdxgicolor(pBitmap, stone22x, stone22y)
getty3:=Getdxgicolor(pBitmap, ty3x, ty3y)
foundPos := findbitcolor(pBitmap, f5x-5, f5y-5,  f5x+5, f5y+5, 0x000000, 0)
if (!foundPos) {
sendone(f5key,1)
}
if(getstone22==stone22color)
{
sendone(wp2key,10)
}
Gdip_DisposeImage(pBitmap)
}
return
changmaoyuanjing:
start:=0
if(start==0)
{
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[w7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
getty2:=Getdxgicolor(pBitmap,ty2x,ty2y)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
}
start:=1
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
getty2:=getdxgicolor(pbitmap,ty2x,ty2y)
if(cd[sname].startcd>0)
{
cd[sname].nextcd:=scd/1.24-(A_TickCount-cd[sname].startcd)
}
if(A_tickcount-ty2time>8000)
{
ty2:=0
}
if(A_tickcount-cd["fire5"].startcd)>4000
{
skill_use["fire5"].use:=0
}
if(A_tickcount-cd["water5"].startcd)>4000
{
skill_use["water5"].use:=0
}
if(A_tickcount-cd["flash5"].startcd)>4000
{
skill_use["flash5"].use:=0
}
if(A_tickcount-cd["stone5"].startcd)>4000
{
skill_use["stone5"].use:=0
}
if(sname=="fire5")
{
foundPos := findbitcolor(pBitmap, fire5x-5, fire5y-5,  fire5x+5, fire5y+5, fire5color, 2)
if (foundPos) {
sendbreak(sname,wp5key,50)
skill_use["fire5"].use++
cd[sname].startcd := A_TickCount
}
}
if(sname=="water5")
{
foundPos := findbitcolor(pBitmap, water5x-5, water5y-5,  water5x+5, water5y+5, water5color,0)
if (foundPos) {
sendbreak(sname,wp5key,50)
skill_use["water5"].use++
cd[sname].startcd := A_TickCount
}
}
if(sname=="flash5")
{
foundPos := findbitcolor(pBitmap, flash5x-5, flash5y-5,  flash5+5, flash5y+5, flash5color, 2)
if (foundPos) {
sendbreak(sname,wp5key,50)
skill_use["flash5"].use++
cd[sname].startcd := A_TickCount
}
}
if(sname=="stone5")
{
foundPos := findbitcolor(pBitmap, stone5x-5, stone5y-5,  stone5x+5, stone5y+5, stone5color, 2)
if (foundPos) {
sendbreak(sname,wp5key,50)
skill_use["stone5"].use++
cd[sname].startcd := A_TickCount
}
}
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="fire52")
{
sendbreak(sname,skey,200)
cd[sname].startcd := A_TickCount
skill_use["fire5"].use:=0
}
else
if(sname=="water52")
{
sendbreak(sname,skey,200)
cd[sname].startcd := A_TickCount
skill_use["water5"].use:=0
}
else
if(sname=="flash52")
{
sendbreak(sname,skey,200)
cd[sname].startcd := A_TickCount
skill_use["flash5"].use:=0
}
else
if(sname=="stone52")
{
sendbreak(sname,skey,200)
cd[sname].startcd := A_TickCount
skill_use["stone5"].use:=0
}
else
if(sname=="ty4")
{
sendone(ty4key,1100)
}
else
if(sname=="ty2")
{
foundPos := findbitcolor(pBitmap, f1x-1, f1y-1,  f1x+1, f1y+1, f1color, 0)
if (foundPos) {
sendbreak(sname,skey,300)
cd[sname].startcd := A_TickCount
ty2time:=A_tickcountx
ty2++
}
else
continue
}
else
if(sname=="ty3")
{
if(ty2>=1)
{
sendone(ty3key,1)
}
else
continue
}
else
if(sname=="f1")
{
if(skill_use["fire5"].use>=1)
{
break
}
if(  skill_use["fire2"].use>=2)
{
foundPos := findbitcolor(pBitmap,  f14x-2, f14y-2,  f14x+2, f14y+2, f14color,0)
if (foundPos) {
if(cd["fire5"].nextcd>2000 or cd["fire5"].nextcd==0 )
{
sendone(f4key,1)
skill_use["fire2"].use:=0
}
}
}
else
continue
}
else
if(sname=="f4")
{
if(skill_use["stone5"].use>=1)
{
break
}
foundPos := findbitcolor(pBitmap,  f42x-2, f42y-2,  f42x+2, f42y+2, f42color,0)
if (foundPos) {
if(cd["stone5"].nextcd>2000 or cd["stone5"].nextcd==0 )
{
sendone(f2key,1)
}
}
else
continue
}
else
if(sname=="f2")
{
if(skill_use["water5"].use>=1)
{
break
}
foundPos := findbitcolor(pBitmap,  f23x-2, f23y-2,  f23x+2, f23y+2, f23color,0)
if (foundPos) {
if(cd["water5"].nextcd>2000 or cd["water5"].nextcd==0 )
{
sendone(f3key,1)
}
}
else
continue
}
else
if(sname=="f3")
{
if(skill_use["flash5"].use>=1)
{
break
}
if(skill_use["flash2"].use>=1)
{
foundPos := findbitcolor(pBitmap,  f31x-2, f31y-2,  f31x+2, f31y+2, f31color,0)
if (foundPos) {
if(cd["flash5"].nextcd>2000 or cd["flash5"].nextcd==0 )
{
sendone(f1key,1)
skill_use["flash2"].use:=0
}
}
}
else
continue
}
else
if(sname=="ty5")
{
foundPos := findbitcolor(pBitmap, f1x-1, f1y-1,  f1x+1, f1y+1, f1color, 0)
if (foundPos) {
if(cd["fire5"].nextcd>1000 && cd["fire4"].nextcd>1000 && cd["fire3"].nextcd>1000 && skill_use["fire5"].use==0)
{
sendbreak(sname,skey,300)
cd[sname].startcd := A_TickCount
skill_use["fire2"].use:=1
}
}
else
continue
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
break
}
}
sendloop(wp1key,20)
}
return
changmaoyuanjing2:
sleep 900
loop {
pBitmap := getpbitmap()
foundPos := findbitcolor(pBitmap, f5x-5, f5y-5,  f5x+5, f5y+5, 0x000000, 0)
if (!foundPos) {
sendone(f5key,1)
}
Gdip_DisposeImage(pBitmap)
}
return
zhengzhuangjisuyugao:
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(cd[sname].startcd>0)
{
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
if(hexcolor!=scolor)
{
continue
}
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="wp4")
{
foundPos := findbitcolor(pBitmap, f21x-5, f21y-5, f21x+5, f21y+5, f21color, 0)
if (foundPos) {
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
continue
}
else
if(sname=="ty2")
{
continue
}
else
if(sname=="ty3")
{
continue
}
else
if(sname=="ty4")
{
continue
}
else
if(sname=="ty5")
{
continue
}
else
if(sname=="ty25" )
{
if(skill_use[sname].use<1)
{
sendone(skey,50)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
Else
continue
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
foundPos := findbitcolor(pBitmap, f21x-5, f21y-5, f21x+5, f21y+5, f21color, 0)
if (foundPos) {
sleep 1000
}
}
Break
}
foundPos := findbitcolor(pBitmap, f1x-5, f1y-5, f1x+5, f1y+5, f1color, 0)
if (foundPos) {
skill_use["ty25"].use:=0
skill_use["ty23"].use:=0
if(A_tickcount-f1time>8000)
{
sendone(ty4key,850)
sendone(ty3key,480)
sendone(ty1key,100)
f1time:=""
}
foundPos := findbitcolor(pBitmap, f5x-5, f5y-5, f5x+5, f5y+5, 0xFFFFFF, 3)
if (!foundPos) {
foundPos := findbitcolor(pBitmap, f6x, f6y-2, f6x+20, f6y+2, 0xFFFFFF, 3)
if (foundPos) {
f1time:=A_tickcount
sendone(f1key,150)
sendone(ty5key,400)
}
}
}
foundPos := findbitcolor(pBitmap, f21x-5, f21y-5, f21x+5, f21y+5, f21color, 0)
if (foundPos) {
foundPos := findbitcolor(pBitmap, f5x-5, f5y-5, f5x+5, f5y+5, 0xFFFFFF, 3)
if (!foundPos) {
foundPos := findbitcolor(pBitmap, f6x-5, f6y-2, f6x+20, f6y+2, 0xFFFFFF, 3)
if (foundPos) {
f1time:=A_tickcount
sendone(f1key,150)
}
}
}
sendone(wp1key,20)
}
return
zhengzhuangjisuyugao2:
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor!=scolor)
{
continue
}
if(sname=="ty2" )
{
if(skill_use[sname].use<1)
{
sendone(skey,10)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
break
}
Else
continue
}
else
if(sname=="ty3" )
{
if(skill_use[sname].use<1)
{
sendone(skey,10)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
break
}
Else
continue
}
else
if(sname=="ty4" )
{
if(skill_use[sname].use<1)
{
sendone(skey,10)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
break
}
Else
continue
}
else
if(sname=="ty5" )
{
if(skill_use[sname].use<1)
{
sendone(skey,10)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
break
}
Else
continue
}
}
foundPos := findbitcolor(pBitmap, f21x-5, f21y-5, f21x+5, f21y+5, f21color, 0)
if (foundPos) {
if(!f1use)
{
f1time:=A_tickcount
f1use:=true
}
skill_use["ty2"].use:=0
skill_use["ty3"].use:=0
skill_use["ty4"].use:=0
skill_use["ty5"].use:=0
}
if(A_tickcount-f1time>9000)
{
f1use:=false
}
}
return
changmaolonghun:
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f3")
{
foundPos := findbitcolor(pBitmap, f1x-5, f1y-5, f1x+5, f1y+5, f1color, 0)
if (foundPos) {
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
continue
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
}
foundPos := findbitcolor(pBitmap, f1x-5, f1y-5, f1x+5, f1y+5, f1color, 0)
if (foundPos) {
foundPos := findbitcolor(pBitmap, f5x-5, f5y-5, f5x+5, f5y+5,  0xFFFFFF, 3)
if (!foundPos) {
foundPos := findbitcolor(pBitmap, f6x, f6y-2, f6x+20, f6y+2, 0xFFFFFF, 10)
if (foundPos) {
f1time:=A_tickcount
sendone(f1key,150)
sendone(ty5key,150)
}
}
}
foundPos := findbitcolor(pBitmap, f21x-5, f21y-5, f21x+5, f21y+5, f21color, 0)
if (foundPos) {
foundPos := findbitcolor(pBitmap, f5x-5, f5y-5, f5x+5, f5y+5,  0xFFFFFF, 3)
if (!foundPos) {
foundPos := findbitcolor(pBitmap, f6x-5, f6y-2, f6x+20, f6y+2, 0xFFFFFF, 10)
if (foundPos) {
f1time:=A_tickcount
sendone(f1key,150)
sendone(ty3key,480)
sendone(ty4key,850)
}
}
}
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(cd[sname].startcd>0)
{
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
if(hexcolor!=scolor)
{
continue
}
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f4")
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
f4time:=A_tickcount
}
else
if(sname=="f3")
{
if(cd["f4"].nextcd<5000 && cd["f4"].nextcd>0)
{
continue
}
else
{
foundPos := findbitcolor(pBitmap, f1x-5, f1y-5, f1x+5, f1y+5, f1color, 0)
if (foundPos) {
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
continue
}
}
else
if(sname=="wp4")
{
foundPos := findbitcolor(pBitmap, f21x-5, f21y-5, f21x+5, f21y+5, f21color, 0)
if (foundPos) {
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
else
continue
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
foundPos := findbitcolor(pBitmap, f21x-5, f21y-5, f21x+5, f21y+5, f21color, 0)
if (foundPos) {
sleep 1000
}
}
Break
}
foundPos := findbitcolor(pBitmap, f1x-5, f1y-5, f1x+5, f1y+5, f1color, 0)
if (foundPos) {
foundPos := findbitcolor(pBitmap, f5x-5, f5y-5, f5x+5, f5y+5, 0xFFFFFF, 3)
if (!foundPos) {
foundPos := findbitcolor(pBitmap, f6x, f6y-2, f6x+20, f6y+2, 0xFFFFFF, 3)
if (foundPos) {
f1time:=A_tickcount
sendone(f1key,150)
sendone(ty5key,150)
}
}
}
foundPos := findbitcolor(pBitmap, f21x-5, f21y-5, f21x+5, f21y+5, f21color, 0)
if (foundPos) {
foundPos := findbitcolor(pBitmap, f5x-5, f5y-5, f5x+5, f5y+5, 0xFFFFFF, 3)
if (!foundPos) {
foundPos := findbitcolor(pBitmap, f6x-5, f6y-2, f6x+20, f6y+2, 0xFFFFFF, 3)
if (foundPos) {
f1time:=A_tickcount
sendone(f1key,150)
sendone(ty3key,480)
sendone(ty4key,850)
}
}
}
getqwq:=Getdxgicolor(pBitmap, qwqx, qwqy)
if( getqwq==qwqcolor )
{
if (smode == 0)
{
if(cd["wp2"].nextcd>1000 && cd["wp4"].nextcd>1000 )
{
sendloop(qwqkey,qwqwait)
smode:=1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
else
if (smode == 1)
{
if(cd["twp2"].nextcd>1000 && cd["twp3"].nextcd>1000 && cd["twp5"].nextcd>1000)
{
sendloop(qwqkey,qwqwait )
smode:=0
for index, skill in qwqkey2 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
}
sendone(wp1key,20)
}
return
naijixie:
buff:=false
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexcolor:=Getdxgicolor(pBitmap,sx,sy)
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(cd[sname].startcd>0)
{
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
if(hexcolor!=scolor)
{
continue
}
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f4")
{
if(!buff)
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
buff:=true
}
else
continue
}
else
if(sname=="f3")
{
if(!buff)
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
buff:=true
}
else
continue
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
Break
}
if(cd["f4"].startcd>1 && A_tickcount-cd["f4"].startcd>11000)
{
buff:=false
cd["f4"].startcd:=0
}
if(cd["f3"].startcd>1 && A_tickcount-cd["f3"].startcd>7000)
{
buff:=false
cd["f3"].startcd:=0
}
sendone(wp1key,20)
}
return
jiebibaofeng:
buff:=false
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f3")
{
continue
}
else
if(sname=="f31")
{
continue
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
}
}
foundPos := findbitcolor(pBitmap,  f31x-2, f31y-2,  f31x+2, f31y+2, f31color, 0)
if (foundPos) {
sendone(f1key,150)
sendone(wp2key,fire2sleep)
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(cd[sname].startcd>0)
{
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
if(sname=="f1")
{
foundPos := findbitcolor(pBitmap,  f1x-5, f1y-5,  f1x+5, f1y+5, f1color, 0)
if (foundPos) {
sendbreak(sname,skey,3310)
cd[sname].startcd := A_TickCount
buff:=true
}
}
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="fire2")
{
if(cd["fire4"].nextcd>2000)
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
Else
continue
}
else
if(sname=="ty1")
{
if(buff)
{
sendone(ty1key,ty1sleep)
buff:=false
}
Else
continue
}
else
if(sname=="fire4")
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
buff:=true
}
else
if(sname=="f1")
{
continue
}
else
if(sname=="f3")
{
continue
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
break
}
}
if(cd["f1"].startcd>1 && A_tickcount-cd["f1"].startcd>5000)
{
buff:=false
cd["f1"].startcd:=0
}
if(cd["fire4"].startcd>1 && A_tickcount-cd["fire4"].startcd>5000)
{
buff:=false
cd["fire4"].startcd:=0
}
}
return
minjiebaofeng:
buff:=false
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in start_skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
if(hexColor==sColor )
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="f3")
{
continue
}
else
if(sname=="f31")
{
continue
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
}
}
foundPos := findbitcolor(pBitmap,  f31x-2, f31y-2,  f31x+2, f31y+2, f31color, 0)
if (foundPos) {
sendone(f1key,150)
sendone(wp2key,fire2sleep)
}
loop {
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill)
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
skey := skill[5]
ssleep := skill[6]
scd := skill[7]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(cd[sname].startcd>0)
{
cd[sname].nextcd:=scd/1.25-(A_TickCount-cd[sname].startcd)
}
if(sname=="f1")
{
foundPos := findbitcolor(pBitmap,  f1x-5, f1y-5,  f1x+5, f1y+5, f1color, 0)
if (foundPos) {
sendbreak(sname,skey,3310)
cd[sname].startcd := A_TickCount
buff:=true
}
}
if(hexColor==scolor)
{
if(skill[8]!="" )
{
if (InStr(wuqi1, sname) > 0) {
smode := skill[8]
}
else
if (InStr(wuqi2, sname) > 0) {
smode := skill[8]
}
}
if(sname=="fire2")
{
if(cd["fire4"].nextcd>2000)
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
}
Else
continue
}
else
if(sname=="ty1")
{
if(buff)
{
sendone(ty1key,ty1sleep)
buff:=false
}
Else
continue
}
else
if(sname=="fire4")
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
buff:=true
}
else
if(sname=="fire5")
{
fire5time:=A_tickcount
while(A_tickcount-fire5time<500)
{
sendone(wp5key,50)
}
}
else
if(sname=="fire52")
{
sendone(wp5key,fire52sleep)
cd[sname].startcd := A_TickCount
}
else
if(sname=="f1")
{
continue
}
else
if(sname=="f3")
{
continue
}
else
{
sendbreak(sname,skey,ssleep)
cd[sname].startcd := A_TickCount
skill_use[sname].use++
}
break
}
}
if(cd["f1"].startcd>1 && A_tickcount-cd["f1"].startcd>5000)
{
buff:=false
cd["f1"].startcd:=0
}
if(cd["fire4"].startcd>1 && A_tickcount-cd["fire4"].startcd>10000)
{
buff:=false
cd["fire4"].startcd:=0
}
}
return
findcolor:
MsgBox, 0x1, 技能取色, 下面将开始进行取色`nEsc跳过当前技能，F9保存当前颜色`n点击确定开始，点击取消退出
IfMsgBox, OK
{
IbSendDestroy()
Gui +AlwaysOnTop -Caption -Border +HwndMagnifierID +E0x08000000
Gui Margin, 0, 0
Gui Add, Text, x0 y90 w%displayW% h%infoH% vInfoText Center Background000000 TextColorFFFFFF
Gui Add, Text, x90 y30 w180 h%infoH% vwptext Center Background000000
totalH := displayH +20
source_hdc := GetDC(0)
dest_hdc := GetDC(MagnifierID)
hdc_buffer := CreateCompatibleDC(dest_hdc)
hbm_buffer := CreateCompatibleBitmap(dest_hdc, displayW, displayH)
SelectObject(hdc_buffer, hbm_buffer)
pGraphics := Gdip_GraphicsFromHDC(hdc_buffer)
Gdip_SetSmoothingMode(pGraphics, 4)
Gui Show,w%windowsw% h%totalH%, Magnifier
WinWaitActive, ahk_class AutoHotkeyGUI
if (!WinExist("ahk_exe Gw2-64.exe")) {
WinGetTitle, windowTitle, A
MsgBox, 48, 错误, 未找到标题为“激战2”的窗口`n当前窗口标题为%windowTitle%
Gui, Destroy
Gdip_DeleteGraphics(pGraphics)
DeleteObject(hbm_buffer)
DeleteDC(hdc_buffer)
ReleaseDC(dest_hdc)
ReleaseDC(source_hdc)
Gdip_Shutdown(pToken)
return
}
SetTimer findxy, 10
ActivateSecondaryScreenWindow()
}
IfMsgBox, Cancel
{
return
}
optionData := {}
types:="wp"
optionData["大剑直伤时空"] := {name: types, wp: ["2", "3", "4", "5"] , skillname: "匕剑",wp_name: ["2","3","4","5"]}
optionData["步枪奶时空"] := {name: types, wp: [], skillname: "法杖",wp_name: ["2","3","4","5"]}
optionData["直伤灵刃"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "匕剑",wp_name: ["2","3","4","5"]}
optionData["匕斧破法"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "匕斧",wp_name: ["2","3","4","5"]}
optionData["匕首症状灵刃"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "匕剑",wp_name: ["2","3","4","5"]}
optionData["大剑直伤灵刃"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "匕剑",wp_name: ["2","3","4","5"]}
optionData["长弓大剑猎龙"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "大剑",wp_name: ["2","3","4","5"]}
optionData["匕枪杖野外蜃楼"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "匕枪或匕火",wp_name: ["2","3","4","5"]}
optionData["长弓野外狂兽"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "长弓",wp_name: ["2","3","4","5"]}
optionData["双剑杖野外夺魂"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "双剑",wp_name: ["2","3","4","5"]}
optionData["节火杖野外灾厄"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "节火",wp_name: ["2","3","4","5"]}
optionData["枪火症状灾厄"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "枪火",wp_name: ["2","3","4","5"]}
optionData["治疗敏捷灾厄"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "枪火",wp_name: ["2","3","4","5"]}
optionData["直伤大剑夺魂"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "大剑",wp_name: ["2","3","4","5"]}
optionData["双剑杖野外先驱"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "双剑",wp_name: ["2","3","4","5"]}
optionData["枪火野外先驱"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "枪火",wp_name: ["2","3","4","5"]}
optionData["剑锤野外狂兽"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "剑号",wp_name: ["2","3","4","5"]}
optionData["斧锤野外破峰"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "斧聚",wp_name: ["2","3","4","5"]}
optionData["三剑野外破峰"] := {name: types, wp: ["2", "3", "4", "5", "52"], skillname: "大剑",wp_name: ["2","3","4","5","5二段"]}
optionData["步枪野外丁真"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "步枪",wp_name: ["2","3","4","5"]}
optionData["大锤直伤机械"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "大锤",wp_name: ["2","3","4","5"]}
optionData["辅助奶燃火"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "法杖",wp_name: ["2","3","4","5"]}
optionData["症状敏缚影"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "节匕",wp_name: ["2","3","4","5"]}
optionData["症状输出破峰"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "节枪",wp_name: ["2","3","4","5"]}
optionData["枪火野外破峰"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "枪枪",wp_name: ["2","3","4","5"]}
optionData["枪聚野外破峰"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "枪枪",wp_name: ["2","3","4","5"]}
optionData["剑枪直伤全息"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "剑枪",wp_name: ["2","3","4","5"]}
optionData["症状先驱"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "枪火",wp_name: ["2","3","4","5"]}
optionData["直伤敏捷龙魂"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "双剑",wp_name: ["2","3","4","5"]}
optionData["野外直伤龙魂"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "大剑",wp_name: ["2","3","4","5"]}
optionData["直伤极速预告"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "双剑",wp_name: ["2","3","4","5"]}
optionData["斧锤直伤魂兽"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "斧斧",wp_name: ["2","3","4","5"]}
optionData["症状德鲁伊"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "匕火",wp_name: ["2","3","4","5"]}
optionData["野外步枪时空"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "步枪",wp_name: ["2","3","4","5"]}
optionData["双法杖野外狂兽"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "法杖",wp_name: ["2","3","4","5"]}
optionData["双大剑野外狂兽"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "大剑",wp_name: ["2","3","4","5"]}
optionData["斧号野外狂兽"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "斧号",wp_name: ["2","3","4","5"]}
optionData["奶急速狂战"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "法杖",wp_name: ["2","3","4","5的10点区域"]}
optionData["步枪神枪手"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "步枪蹲下",wp_name: ["2","3","4","5"]}
optionData["双枪急速神枪手"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "双枪",wp_name: ["2","3","4","5"]}
optionData["双枪野外神枪手"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "双枪",wp_name: ["2","3","4","5"]}
optionData["七星野外神枪手"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "双枪",wp_name: ["2","3","4","5"]}
optionData["症状极速预告"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "长矛",wp_name: ["2","3","4","5"]}
optionData["长矛症状龙魂"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "长矛",wp_name: ["2","3","4","5"]}
optionData["奶机械"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "短弓",wp_name: ["2","3","4","5"]}
if (optionData.Haskey(bdlist)) {
data := optionData[bdlist]
name := data.name
type := name . "color" . bdlist
wp := data.wp
skillname:=data.skillname
wp_name:=data.wp_name
Loop, % wp.MaxIndex() {
skill := wp[A_Index]
skill_name := wp_name[A_Index]
Loop {
switch skill
{
default:
skilltext := "请移动到《武器》技能`n《" . skillname .  skill_name . "》`n" . " (" . types . skill . ")`n技能图标内任意亮色区域`n按ESC跳过"
}
if GetKeyState(savecolorkey, "P")
{
getcolor(type,name,skill)
break
}
if GetKeyState("esc", "P") {
sleep 200
Break
}
}
}
}
optionData := {}
types:="twp"
optionData["大剑直伤时空"] := {name: types, wp: ["2", "3", "4", "5"] , skillname: "大剑",wp_name: ["2","3","4左侧","5"]}
optionData["步枪奶时空"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "步枪",wp_name: ["2","3","4","5"]}
optionData["直伤灵刃"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "大剑",wp_name: ["2","3","4","5"]}
optionData["匕斧破法"] := {name: types, wp: ["4", "5"], skillname: "匕锤",wp_name:  ["2","3","4","5"]}
optionData["匕首症状灵刃"] := {name: types, wp: ["2","3","4", "5"], skillname: "匕聚",wp_name: ["2","3","4","5"]}
optionData["大剑直伤灵刃"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "大剑",wp_name: ["2","3","4左侧","5"]}
optionData["长弓大剑猎龙"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "长弓",wp_name: ["2","3","4","5"]}
optionData["匕枪杖野外蜃楼"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "法杖",wp_name: ["2","3","4","5"]}
optionData["长弓野外狂兽"] := {name: types, wp: [], skillname: ""}
optionData["双剑杖野外夺魂"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "法杖",wp_name: ["2","3","4","5"]}
optionData["节火杖野外灾厄"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "法杖",wp_name: ["2","3","4","5"]}
optionData["枪火症状灾厄"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "节火",wp_name: ["2","3","4","5"]}
optionData["治疗敏捷灾厄"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "节号",wp_name: ["2","3","4","5"]}
optionData["双剑杖野外先驱"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "法杖",wp_name: ["2","3","4","5"]}
optionData["枪火野外先驱"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "法杖",wp_name: ["2","3","4","5"]}
optionData["直伤大剑夺魂"] := {name: types, wp: ["2", "3", "4","5"], skillname: "匕剑",wp_name: ["2","3","4","5"]}
optionData["剑锤野外狂兽"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "双锤",wp_name: ["2","3","4","5"]}
optionData["斧锤野外破峰"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "大锤",wp_name: ["2","3","4","5"]}
optionData["三剑野外破峰"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "剑聚",wp_name: ["2","3","4","5"]}
optionData["步枪野外丁真"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "雷包",wp_name: ["2","3","4","5"]}
optionData["大锤直伤机械"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "雷包",wp_name: ["2","3","4","5"]}
optionData["辅助奶燃火"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "斧盾",wp_name: ["2","3","4","5"]}
optionData["直伤敏捷龙魂"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "大剑",wp_name: ["2","3","4","5"]}
optionData["直伤极速预告"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "大剑",wp_name: ["2","3","4","5"]}
optionData["奶预告"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "节盾",wp_name: ["2","3","4","5"]}
optionData["裁决"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "双剑",wp_name: ["2","3","4","5"]}
optionData["症状输出破峰"] := {name: types, wp: ["2", "3", "4","42", "5"], skillname: "枪火",wp_name: ["2","3","4","4二段","5"]}
optionData["枪火野外破峰"] := {name: types, wp: ["2", "3", "4","42", "5"], skillname: "枪火",wp_name: ["2","3","4","4二段","5"]}
optionData["枪聚野外破峰"] := {name: types, wp: ["2", "3", "4","5"], skillname: "枪聚",wp_name: ["2","3","4","5"]}
optionData["剑枪直伤全息"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "熔炉武器组",wp_name: ["2","3","4","5"]}
optionData["症状先驱"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "节匕",wp_name: ["2","3","4","5"]}
optionData["野外直伤龙魂"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "双剑",wp_name: ["2","3","4","5"]}
optionData["斧锤直伤魂兽"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "大锤",wp_name: ["2","3","4","5"]}
optionData["症状德鲁伊"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "斧匕",wp_name: ["2","3","4","5"]}
optionData["野外步枪时空"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "法杖",wp_name: ["2","3 11点位置","4","5"]}
optionData["步枪神枪手"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "匕首",wp_name: ["2","3","4","5"]}
optionData["双枪急速神枪手"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "步枪蹲下",wp_name: ["2","3","4","5"]}
optionData["症状极速预告"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "短弓 ",wp_name: ["2","3","4","5"]}
optionData["长矛症状龙魂"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "锤斧 ",wp_name: ["2","3","4","5"]}
if (optionData.Haskey(bdlist)) {
data := optionData[bdlist]
name := data.name
type := name . "color" . bdlist
wp := data.wp
skillname:=data.skillname
wp_name:=data.wp_name
Loop, % wp.MaxIndex() {
skill := wp[A_Index]
skill_name := wp_name[A_Index]
Loop {
switch skill
{
default:
skilltext := "请移动到《武器》技能`n《" . skillname .  skill_name . "》`n" . " (" . types . skill . ")`n技能图标内任意亮色区域`n按ESC跳过"
}
if GetKeyState(savecolorkey, "P")
{
getcolor(type,name,skill)
break
}
if GetKeyState("esc", "P") {
sleep 150
Break
}
}
}
}
optionData := {}
types:="wm"
optionData["双剑杖野外夺魂"] := {name: types, wp: ["2", "3","32", "4", "5"], skillname: "帷幕",wp_name: ["2","3","3二段","4","5"]}
optionData["直伤大剑夺魂"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "帷幕",wp_name: ["2","3","4","5"]}
optionData["双剑杖野外先驱"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "帷幕",wp_name: ["2","3","4","5"]}
optionData["枪火野外先驱"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "帷幕",wp_name: ["2","3","4","5"]}
optionData["症状敏缚影"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "帷幕",wp_name: ["2","3","4","5"]}
optionData["症状先驱"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "帷幕",wp_name: ["2","3","4","5"]}
optionData["症状德鲁伊"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "天界化身",wp_name: ["2","3","4","5"]}
if (optionData.Haskey(bdlist)) {
data := optionData[bdlist]
name := data.name
type := name . "color" . bdlist
wp := data.wp
skillname:=data.skillname
wp_name:=data.wp_name
Loop, % wp.MaxIndex() {
skill := wp[A_Index]
skill_name := wp_name[A_Index]
Loop {
switch skill
{
default:
skilltext := "请移动到《变身》技能`n《" . skillname .  skill_name . "》`n" . " (" . types . skill . ")`n技能图标内任意亮色区域`n按ESC跳过"
}
if GetKeyState(savecolorkey, "P")
{
getcolor(type,name,skill)
break
}
if GetKeyState("esc", "P") {
sleep 200
Break
}
}
}
}
optionData := {}
types:="fire"
optionData["大锤直伤暴风"] := {name: types, wp: ["2", "3","4", "5"], skillname: "火武器",wp_name: ["2","3中心","4","5"]}
optionData["节号症状编织"] := {name: types, wp: ["2", "3","4", "5"], skillname: "火武器",wp_name: ["2","3","4","5"]}
optionData["剑号野外元晶"] := {name: types, wp: ["2", "3","4", "5"], skillname: "火武器",wp_name: ["2","3","4","5"]}
optionData["剑号急速元晶"] := {name: types, wp: ["2", "3","4", "5"], skillname: "火武器",wp_name: ["2","3","4","5"]}
optionData["枪号野外元晶"] := {name: types, wp: ["2", "3","4", "5"], skillname: "火武器",wp_name: ["2","3","4","5"]}
optionData["节号野外元晶"] := {name: types, wp: ["2", "3","4", "5"], skillname: "火武器",wp_name: ["2","3","4","5"]}
optionData["大锤野外元晶"] := {name: types, wp: ["2", "3","4", "5"], skillname: "火武器",wp_name: ["2","3中心","4","5"]}
optionData["节匕直伤元晶"] := {name: types, wp: ["2", "3","4", "5"], skillname: "火武器",wp_name: ["2","3","4","5"]}
optionData["节匕直伤元晶2"] := {name: types, wp: ["2", "3","4", "5"], skillname: "火武器",wp_name: ["2","3","4","5"]}
optionData["长矛直伤元晶"] := {name: types, wp: ["2", "3","4", "5", "52"], skillname: "火武器",wp_name: ["2","3","4","5中心","5二段，火山爆发"]}
optionData["节匕症状暴风"] := {name: types, wp: ["2", "3", "4", "5"], skillname: "火武器",wp_name: ["2","3","4","5"]}
optionData["节聚敏捷暴风"] := {name: types, wp: ["2", "3", "4", "5","52"], skillname: "火武器",wp_name: ["2","3","4","5","5二段"]}
if (optionData.Haskey(bdlist)) {
data := optionData[bdlist]
name := data.name
type := name . "color" . bdlist
wp := data.wp
skillname:=data.skillname
wp_name:=data.wp_name
Loop, % wp.MaxIndex() {
skill := wp[A_Index]
skill_name := wp_name[A_Index]
Loop {
switch skill
{
default:
skilltext := "请移动到`n《" . skillname .  skill_name . "》`n" . " (" . types . skill . ")`n技能图标内任意亮色区域`n按ESC跳过"
}
if GetKeyState(savecolorkey, "P")
{
getcolor(type,name,skill)
break
}
if GetKeyState("esc", "P") {
sleep 200
Break
}
}
}
}
optionData := {}
types:="water"
optionData["大锤直伤暴风"] := {name: types, wp: ["2", "3","4", "5"], skillname: "水武器",wp_name: ["2","3中心","4","5"]}
optionData["剑号野外元晶"] := {name: types, wp: ["2", "3","4", "5"], skillname: "水武器",wp_name: ["2","3","4","5"]}
optionData["剑号急速元晶"] := {name: types, wp: ["2", "3","4", "5"], skillname: "水武器",wp_name: ["2","3","4","5"]}
optionData["枪号野外元晶"] := {name: types, wp: ["2", "3","4", "5"], skillname: "水武器",wp_name: ["2","3","4","5"]}
optionData["节号野外元晶"] := {name: types, wp: ["2", "3","4", "5"], skillname: "水武器",wp_name: ["2","3","4","5"]}
optionData["大锤野外元晶"] := {name: types, wp: ["2", "3","4", "5"], skillname: "水武器",wp_name: ["2","3中心","4","5"]}
optionData["节匕直伤元晶"] := {name: types, wp: ["2", "3","4","42", "5"], skillname: "水武器",wp_name: ["2","3","4","4二段","5"]}
optionData["节匕直伤元晶2"] := {name: types, wp: ["2", "3","4","42", "5"], skillname: "水武器",wp_name: ["2","3","4","4二段","5"]}
optionData["长矛直伤元晶"] := {name: types, wp: ["2", "3","4","5","52"], skillname: "水武器",wp_name: ["2","3","4","5中心","5二段，冰湖溃洪"]}
if (optionData.Haskey(bdlist)) {
data := optionData[bdlist]
name := data.name
type := name . "color" . bdlist
wp := data.wp
skillname:=data.skillname
wp_name:=data.wp_name
Loop, % wp.MaxIndex() {
skill := wp[A_Index]
skill_name := wp_name[A_Index]
Loop {
switch skill
{
default:
skilltext := "请移动到`n《" . skillname .  skill_name . "》`n" . " (" . types . skill . ")`n技能图标内任意亮色区域`n按ESC跳过"
}
if GetKeyState(savecolorkey, "P")
{
getcolor(type,name,skill)
break
}
if GetKeyState("esc", "P") {
sleep 200
Break
}
}
}
}
optionData := {}
types:="flash"
optionData["大锤直伤暴风"] := {name: types, wp: ["2", "3","32","4", "5"], skillname: "雷武器",wp_name: ["2","3中心","3二段中心","4","5"]}
optionData["剑号野外元晶"] := {name: types, wp: ["2", "3","4", "5"], skillname: "雷武器",wp_name: ["2","3","4","5"]}
optionData["剑号急速元晶"] := {name: types, wp: ["2", "3","4", "5"], skillname: "雷武器",wp_name: ["2","3","4","5"]}
optionData["枪号野外元晶"] := {name: types, wp: ["2", "3","4", "5"], skillname: "雷武器",wp_name: ["2","3","4","5"]}
optionData["节号野外元晶"] := {name: types, wp: ["2", "3","4", "5"], skillname: "雷武器",wp_name: ["2","3","4","5"]}
optionData["大锤野外元晶"] := {name: types, wp: ["2", "3","32","4", "5"], skillname: "雷武器",wp_name: ["2","3中心","3二段中心","4","5"]}
optionData["节匕直伤元晶"] := {name: types, wp: ["2", "3","4", "5"], skillname: "雷武器",wp_name: ["2","3","4","5"]}
optionData["节匕直伤元晶2"] := {name: types, wp: ["2", "3","4", "5"], skillname: "雷武器",wp_name: ["2","3","4","5"]}
optionData["长矛直伤元晶"] := {name: types, wp: ["2", "3","4", "5","52"], skillname: "雷武器",wp_name: ["2","3","4","5中心","5二段，对流风暴"]}
if (optionData.Haskey(bdlist)) {
data := optionData[bdlist]
name := data.name
type := name . "color" . bdlist
wp := data.wp
skillname:=data.skillname
wp_name:=data.wp_name
Loop, % wp.MaxIndex() {
skill := wp[A_Index]
skill_name := wp_name[A_Index]
Loop {
switch skill
{
default:
skilltext := "请移动到`n《" . skillname .  skill_name . "》`n" . " (" . types . skill . ")`n技能图标内任意亮色区域`n按ESC跳过"
}
if GetKeyState(savecolorkey, "P")
{
getcolor(type,name,skill)
break
}
if GetKeyState("esc", "P") {
sleep 200
Break
}
}
}
}
optionData := {}
types:="stone"
optionData["大锤直伤暴风"] := {name: types, wp: ["2", "3","4", "5"], skillname: "土武器",wp_name: ["2","3中心","4","5"]}
optionData["节号症状编织"] := {name: types, wp: ["2", "3","4", "5"], skillname: "土武器",wp_name: ["2","3","4","5"]}
optionData["剑号野外元晶"] := {name: types, wp: ["2", "3","4", "5"], skillname: "土武器",wp_name: ["2","3","4","5"]}
optionData["剑号急速元晶"] := {name: types, wp: ["2", "3","4", "5"], skillname: "土武器",wp_name: ["2","3","4","5"]}
optionData["枪号野外元晶"] := {name: types, wp: ["2", "3","4", "5"], skillname: "土武器",wp_name: ["2","3","4","5"]}
optionData["节号野外元晶"] := {name: types, wp: ["2","22","3","4", "5"], skillname: "土武器",wp_name: ["2","2二段","3","4","5"]}
optionData["大锤野外元晶"] := {name: types, wp: ["2", "3","4", "5"], skillname: "土武器",wp_name: ["2","3中心","4","5"]}
optionData["节匕直伤元晶"] := {name: types, wp: ["2","22", "3","4", "5"], skillname: "土武器",wp_name: ["2","2二段","3","4",,"5"]}
optionData["节匕直伤元晶2"] := {name: types, wp: ["2","22", "3","4", "5"], skillname: "土武器",wp_name: ["2","2二段","3","4",,"5"]}
optionData["长矛直伤元晶"] := {name: types, wp: ["2", "3","4", "5", "52"], skillname: "土武器",wp_name: ["2","3","4","5中心","5二段，哈布沙暴"]}
if (optionData.Haskey(bdlist)) {
data := optionData[bdlist]
name := data.name
type := name . "color" . bdlist
wp := data.wp
skillname:=data.skillname
wp_name:=data.wp_name
Loop, % wp.MaxIndex() {
skill := wp[A_Index]
skill_name := wp_name[A_Index]
Loop {
switch skill
{
default:
skilltext := "请移动到`n《" . skillname .  skill_name . "》`n" . " (" . types . skill . ")`n技能图标内任意亮色区域`n按ESC跳过"
}
if GetKeyState(savecolorkey, "P")
{
getcolor(type,name,skill)
break
}
if GetKeyState("esc", "P") {
sleep 200
Break
}
}
}
}
optionData := {}
types:="ty"
optionData["大剑直伤时空"] := {name: types, wp: ["1","2", "3", "4","41", "42", "5"] , skillname: "通用",ty_name: ["幻光纹章","幻影除魔","灾难法池","行动法池","通用4备选(幻象防御)","苦痛咒语二段","重力陷阱"]}
optionData["野外步枪时空"] := {name: types, wp: ["1","2", "3", "4", "5"] , skillname: "通用",ty_name: ["幻光纹章","衰老法池(清增益)","午夜纹章","支配纹章","时空扭曲"]}
optionData["步枪奶时空"] := {name: types, wp: ["1","2", "3", "4", "41", "5","51"], skillname: "通用",ty_name: ["永恒法池（正常取色，手动按住使用）","虚无立场","行动法池","衰老法池（破蔑才放）","预知法池（正常取色，手动按住使用）","时间扭曲","重力陷阱（破蔑才放）"]}
optionData["匕斧破法"] := {name: types, wp: ["1","2", "3", "4", "5"], skillname: "通用",ty_name: ["治疗纹章","飞踢","威能纹章","怒气纹章","盛怒纹章"]}
optionData["匕首症状灵刃"] := {name: types, wp: ["1","2", "3", "4", "5"], skillname: "通用",ty_name: ["幻光纹章","午夜纹章","支配纹章","幻象纹章","千刀万剐"]}
optionData["大剑直伤灵刃"] := {name: types, wp: ["1","2", "3", "4","41", "5"], skillname: "通用",ty_name: ["幻光纹章","幻影除魔","剑刃暴雨","苦痛咒语二段","通用4备选(幻象防御)","千刀万剐"]}
optionData["长弓大剑猎龙"] := {name: types, wp: ["1","2", "3", "4", "5"], skillname: "通用",ty_name: ["进化陷阱","怨毒纹章","正义之剑","利刃狂舞","巨龙之咽"]}
optionData["匕枪杖野外蜃楼"] := {name: types, wp: ["1","2", "3", "4", "5"], skillname: "通用",ty_name: ["伪装绿洲","沙铸玻璃或幻象文章","支配纹章","午夜纹章","远行"]}
optionData["长弓野外狂兽"] := {name: types, wp: ["1","2", "3", "4", "5"], skillname: "通用",ty_name: ["同心治疗","风暴精魂","狩猎纹章","自然束缚","群攻之力"]}
optionData["双剑杖野外夺魂"] := {name: types, wp: ["1","2", "3", "4", "5"], skillname: "通用",ty_name: ["症状吞噬","鬼灵铠甲","迷雾归来","弱者退散","严寒刺骨"]}
optionData["节火杖野外灾厄"] := {name: types, wp: ["1","2", "3", "4", "5","52"], skillname: "通用",ty_name: ["吸血纹章","瘟疫纹章","不死纹章","巨蛇虹吸","召唤血肉魔像","血肉魔像二段"]}
optionData["双剑杖野外先驱"] := {name: types, wp: ["1","2", "3", "4", "42", "5", "52"], skillname: "通用",ty_name: ["承诺药剂","苦痛药剂","骸骨仆从","影魔","影魔二段","召唤魔像","召唤魔像二段"]}
optionData["枪火野外先驱"] := {name: types, wp: ["1","2", "3","32", "4", "5"], skillname: "通用",ty_name: ["承诺药剂","苦痛药剂","风险试剂","通用3备选(威力法池)","鬼灵铠甲","勇气试剂"]}
optionData["枪火症状灾厄"] := {name: types, wp: ["1","12","2", "3","32", "4","5"], skillname: "通用",ty_name: ["吸血纹章","沙尘闪耀(敏捷)","怨恨纹章","召唤影魔","召唤影魔二段","鲜血力量","瘟疫化身"]}
optionData["治疗敏捷灾厄"] := {name: types, wp: ["1","2", "3","4","5","52"], skillname: "通用",ty_name: ["沙尘闪耀","威力法池","不死纹章","巨蛇虹吸","召唤魔像","召唤魔像二段"]}
optionData["直伤大剑夺魂"] := {name: types, wp: ["1","2", "3","4","5","51","52"], skillname: "通用",ty_name: ["灵魂夺取","黑暗法池","苦难法池","弱者退散","严寒刺骨","召唤魔像","召唤魔像二段"]}
optionData["直伤敏捷龙魂"] := {name: types, wp: ["1","2", "3","4","5","21","22", "23","24","25"], skillname: "通用",ty_name: ["断刃壁垒","暗刃勇气","冰刃怒火","刃爪之怒","断魂之峰","附魔匕首","暗影回撤","位面穿行","压到优势","翠玉风暴"]}
optionData["直伤极速预告"] := {name: types, wp: ["1","2", "3","32","4","42","5","21","22", "23","24","25"], skillname: "通用",ty_name: ["圣光多面体","黑暗多面体","元素多面体","元素多面体二段","力量多面体","力量多面体二段","混沌多面体","附魔匕首","暗影回撤","位面穿行","压到优势","翠玉风暴"]}
optionData["奶预告"] := {name: types, wp: ["1","2", "3","4","5","21","22", "23","24","25"], skillname: "通用",ty_name: ["圣光多面体","黑暗多面体","元素多面体","力量多面体","混沌多面体","展开石碑","自然调和","慰藉屏护","净化精华","能量爆发"]}
optionData["裁决"] := {name: types, wp: ["1","2", "3","4","5","21","22", "23","24","25"], skillname: "通用",ty_name: ["自我精魂","游牧突进","爆裂清扫","掠夺之怒","精英5长矛","附魔匕首","暗影回测","位面穿行","压倒优势","翠玉风暴"]}
optionData["剑锤野外狂兽"] := {name: types, wp: ["1","2", "3", "4", "5"], skillname: "通用",ty_name: ["治疗之泉/同心治疗","风暴精魂","快保护我(固定技能)","孢子爆炸/其他","森林壁垒"]}
optionData["斧锤野外破峰"] := {name: types, wp: ["1","2", "3", "4", "5"], skillname: "通用",ty_name: ["愤怒祷词","正义之剑","净化火焰/其他","冲着我来","怒气冲天"]}
optionData["三剑野外破峰"] := {name: types, wp: ["1","2", "3", "4", "5"], skillname: "通用",ty_name: ["愤怒祷词","旋风之光","净化火焰/其他","冲着我来","怒气冲天"]}
optionData["步枪野外丁真"] := {name: types, wp: ["1","2", "3","32","33","4", "5"], skillname: "通用",ty_name: ["整流纹章","位移纹章","手雷包","雷包展开后切武器图标","投掷地雷（通用3备选）","U型试剂\其他","超频纹章"]}
optionData["大锤直伤机械"] := {name: types, wp: ["1","12","2","3","32","4","42", "5"], skillname: "通用",ty_name: ["自动除颤","医疗机械","绞肉机械","手雷包","雷包展开后切武器图标","投掷地雷","投掷地雷二段","精英炮座"]}
optionData["大锤直伤暴风"] := {name: types, wp: ["1","2", "3", "4","5","52"], skillname: "通用",ty_name: ["再生纹章","炽火燎原","秘法爆弹","风暴雕文","任意元素雕文的中心","烈焰轰炸"]}
optionData["辅助奶燃火"] := {name: types, wp: ["1","2", "3", "4","5","51"], skillname: "通用",ty_name: ["慰藉咒语","潜能咒语","学识咒语","前进","怒气冲天","自由咒语"]}
optionData["症状敏缚影"] := {name: types, wp: ["1","2","3", "4","42","5","52"], skillname: "通用",ty_name: ["恶意纹章","蜘蛛毒液","鳞爪毒液","准备千针万箭","释放千针万箭","同仇敌忾","石蜥毒液"]}
optionData["节号症状编织"] := {name: types, wp: ["1","2","3", "4","5"], skillname: "通用",ty_name: ["再生纹章","小型元素雕文（火焰）","火焰纹章","原始编织","自我编织"]}
optionData["症状输出破峰"] := {name: types, wp: ["1","2","3", "4","5"], skillname: "通用",ty_name: ["愤怒祷词","旋风之光","净化火焰/其他","愤怒纹章","怒气冲天"]}
optionData["枪火野外破峰"] := {name: types, wp: ["1","2","3", "4","5"], skillname: "通用",ty_name: ["愤怒祷词","正义之剑","净化火焰/其他","冲着我来","怒气冲天"]}
optionData["枪聚野外破峰"] := {name: types, wp: ["1","2","3", "4","5"], skillname: "通用",ty_name: ["愤怒祷词","正义之剑","净化火焰/其他","冲着我来","怒气冲天"]}
optionData["剑枪直伤全息"] := {name: types, wp: ["1","2","3","32","4","5"], skillname: "通用",ty_name: ["自动除颤","手雷包","光子墙","释放光子墙","激光碟片","巅峰射线"]}
optionData["症状先驱"] := {name: types, wp: ["1","2","3","4","5"], skillname: "通用",ty_name: ["承诺药剂","献血力量","怨恨纹章","瘟疫纹章","勇气试剂"]}
optionData["野外直伤龙魂"] := {name: types, wp: ["1","2", "3","4","5","21","22", "23","24","25"], skillname: "通用",ty_name: ["断刃壁垒","暗刃勇气","冰刃怒火","刃爪之怒","断魂之峰","抚伤之石","复仇之锤","强制束缚","稳固激发","崇高矮人"]}
optionData["斧锤直伤魂兽"] := {name: types, wp: ["1","2","3", "4","5"], skillname: "通用",ty_name: ["同心治疗","冰霜陷阱","干掉他们","野性纹章","独狼之力"]}
optionData["症状德鲁伊"] := {name: types, wp: ["1","2","3", "4","5"], skillname: "通用",ty_name: ["同心治疗","毒蛇巢穴","锋开磨砺","旭日精魂","藤蔓缠绕"]}
optionData["剑号野外元晶"] := {name: types, wp: ["1","2","3", "4","5","52"], skillname: "通用",ty_name: ["再生纹章","火焰纹章","小型元素雕文（推荐冰火）","大地护甲","元素雕文（推荐冰火）","元素雕文二段"]}
optionData["剑号急速元晶"] := {name: types, wp: ["1","2","3", "4","5","52"], skillname: "通用",ty_name: ["再生纹章","流水纹章（按住施法）","秘法波动","大地护甲","元素雕文（推荐冰）","元素雕文二段"]}
optionData["枪号野外元晶"] := {name: types, wp: ["1","2","3", "4","5","52"], skillname: "通用",ty_name: ["再生纹章","火焰纹章","小型元素雕文（推荐冰火）","大地护甲","元素雕文（推荐冰火）","元素雕文二段"]}
optionData["节号野外元晶"] := {name: types, wp: ["1","2","3", "4","5","52"], skillname: "通用",ty_name: ["再生纹章","火焰纹章","小型元素雕文（推荐冰火）","大地护甲","元素雕文（推荐冰火）","元素雕文二段"]}
optionData["大锤野外元晶"] := {name: types, wp: ["1","2", "3", "4","5"], skillname: "通用",ty_name: ["再生纹章","火焰纹章","小型元素雕文（推荐冰火）","大地护甲","元素雕文（推荐冰火）"]}
optionData["双法杖野外狂兽"] := {name: types, wp: ["1","2", "3", "4","5"], skillname: "通用",ty_name: ["治疗之泉","风暴精魂","野性纹章","旭日精魂","森林壁垒"]}
optionData["双大剑野外狂兽"] := {name: types, wp: ["1","2","22", "3", "4", "42","5"], skillname: "通用",ty_name: ["治疗之泉","风暴精魂","通用2备选（干掉他们）","野性纹章","旭日精魂","通用4备选(孢子爆炸)","森林壁垒"]}
optionData["斧号野外狂兽"] := {name: types, wp: ["1","2", "3", "4","5"], skillname: "通用",ty_name: ["治疗之泉","风暴精魂","磐石纹章或野性纹章","快保护我","森林壁垒"]}
optionData["奶急速狂战"] := {name: types, wp: ["1","2", "3", "4","5"], skillname: "通用",ty_name: ["突破极限","为了正义","重整旗鼓","破甲跃击或替换其他","战斗旗帜"]}
optionData["步枪神枪手"] := {name: types, wp: ["1","2", "3", "4","5"], skillname: "通用",ty_name: ["遁入暗影","刺客纹章","怜悯","暗影疾风","暗影融合"]}
optionData["双枪急速神枪手"] := {name: types, wp: ["1","2", "3", "4","5"], skillname: "通用",ty_name: ["恶意纹章","束缚暗影","战斗冲动","暗影疾风","暗影融合"]}
optionData["双枪野外神枪手"] := {name: types, wp: ["1","2", "3", "4","5"], skillname: "通用",ty_name: ["恶意纹章","束缚暗影","战斗冲动","刺客纹章或其他","同仇敌忾"]}
optionData["七星野外神枪手"] := {name: types, wp: ["1","2", "3", "4","5"], skillname: "通用",ty_name: ["恶意纹章","束缚暗影","战斗冲动","刺客纹章","暗影融合"]}
optionData["节匕直伤元晶"] := {name: types, wp: ["1","2","3","4","5","51","52"], skillname: "通用",ty_name: ["秘法绚爆","无情灼焰","秘法爆弹","闪电风暴图标`n中心黄色","元素迅捷","火焰元素雕文","火焰元素雕文二段"]}
optionData["节匕直伤元晶2"] := {name: types, wp: ["1","2","3","4","5","51","52"], skillname: "通用",ty_name: ["秘法绚爆","无情灼焰","秘法爆弹","闪电风暴图标`n中心黄色","元素迅捷","火焰元素雕文","火焰元素雕文二段"]}
optionData["长矛直伤元晶"] := {name: types, wp: ["1","2","3","4","5","51","52"], skillname: "通用",ty_name: ["秘法绚爆","无情灼焰","秘法爆弹","闪电风暴图标","元素迅捷","火焰元素雕文","火焰元素雕文二段"]}
optionData["症状极速预告"] := {name: types, wp: ["1","2", "3","4","5","21","22", "23","24","25"], skillname: "通用",ty_name: ["圣光多面体","黑暗多面体","元素多面体","力量多面体","混沌多面体","赋能悲痛","驱逐恶魔","苦痛召唤","吸收苦痛","拥抱黑暗"]}
optionData["长矛症状龙魂"] := {name: types, wp: ["1","2", "3","4","5","21","22", "23","24","25"], skillname: "通用",ty_name: ["断刃壁垒","暗刃勇气","冰刃怒火","刃爪之怒","断魂之峰","赋能悲痛","驱逐恶魔","苦痛召唤","吸收苦痛","拥抱黑暗"]}
optionData["奶机械"] := {name: types, wp: ["1","2", "3","4","5"], skillname: "通用",ty_name: ["医疗器械","爆破机械","B型试剂","壁垒机械","空头补给"]}
optionData["节匕症状暴风"] := {name: types, wp: ["1","2", "3","4","5","52"], skillname: "通用",ty_name: ["秘法迅爆","火焰纹章","火焰风暴","炽火燎原","火焰元素雕文","火焰元素雕文二段"]}
optionData["节聚敏捷暴风"] := {name: types, wp: ["1","2", "3","4","5","52"], skillname: "通用",ty_name: ["秘法迅爆","火焰纹章","火焰风暴","炽火燎原","火焰元素雕文","火焰元素雕文二段"]}
if (optionData.Haskey(bdlist)) {
data := optionData[bdlist]
name := data.name
type := name . "color" . bdlist
wp := data.wp
ty_name:=data.ty_name
skillname:=data.skillname
Loop, % wp.MaxIndex() {
skill := wp[A_Index]
skill_name := ty_name[A_Index]
Loop {
switch skill
{
default:
skilltext := "请移动到《" . skillname . "》技能`n《" skill_name . "》`n" .   " (" . types . skill . ")`n技能图标内任意亮色区域`n按ESC跳过"
}
if GetKeyState(savecolorkey, "P")
{
getcolor(type,name,skill)
break
}
if GetKeyState("esc", "P") {
sleep 150
Break
}
}
}
}
optionData := {}
types:="f"
optionData["大剑直伤时空"] := {name: types, wp: ["1","2", "3", "4", "5", "6"] , skillname: "职业",f_name: ["分裂时间","回归原位","时间沉降","失真","时空裂缝","第3个豆为紫色"]}
optionData["野外步枪时空"] := {name: types, wp: ["1","2", "3", "4", "5", "6"] , skillname: "职业",f_name: ["分裂时间","回归原位","时间沉降","失真","时空裂缝","第3个豆为紫色"]}
optionData["步枪奶时空"] := {name: types, wp: ["1","2", "3", "4", "5"], skillname: "职业",f_name: ["分裂时间","回归原位","时间沉降","失真","时空裂缝"]}
optionData["匕斧破法"] := {name: types, wp: ["1","2"], skillname: "职业",f_name: ["1","2"]}
optionData["匕首症状灵刃"] := {name: types, wp: ["1","2", "3", "4","5", "6"], skillname: "职业",f_name: ["和谐咏刃","悲伤咏刃","不协咏刃","失真","旋刃魂曲","第5个豆为紫色"]}
optionData["大剑直伤灵刃"] := {name: types, wp: ["1","2", "3", "4","5", "6"], skillname: "职业",f_name: ["和谐咏刃","悲伤咏刃","不协咏刃","失真","旋刃魂曲","第5个豆为紫色"]}
optionData["长弓大剑猎龙"] := {name: types, wp: ["1","2", "3"], skillname: "职业",f_name: ["1","2","3"]}
optionData["匕枪杖野外蜃楼"] := {name: types, wp: ["1","2", "3", "4","r", "6"], skillname: "职业",f_name: ["1","2","3","4","耐力条>50靠下黄条","第3个豆为紫色"]}
optionData["长弓野外狂兽"] := {name: types, wp: ["5","51"], skillname: "职业",f_name: ["F5图标中心（文字为宠物觉醒时）","F5图标中心（文字为游侠觉醒时）"]}
optionData["双剑杖野外夺魂"] := {name: types, wp: ["1","11"], skillname: "职业",f_name: ["进入帷幕图标","退出帷幕图标"]}
optionData["节火杖野外灾厄"] := {name: types, wp: ["1","2","3","4","5"], skillname: "职业",f_name: ["1","2","3","4","5"]}
optionData["枪火症状灾厄"] := {name: types, wp: ["1","2","3","4","5","52"], skillname: "职业",f_name: ["显形沙影","邪恶恩惠","黄沙瀑布","炫耀之柱","沙漠之幕","沙爆帷幕(敏捷)"]}
optionData["直伤大剑夺魂"] := {name: types, wp: ["1","11"], skillname: "职业",f_name: ["进入帷幕图标","退出帷幕图标"]}
optionData["治疗敏捷灾厄"] := {name: types, wp: ["1","2","3","4","5"], skillname: "职业",f_name: ["显形沙影","邪恶恩惠","黄沙瀑布","炫耀之柱","沙爆帷幕(敏捷)"]}
optionData["直伤敏捷龙魂"] := {name: types, wp: ["1","21","5","2","3","4","6"], skillname: "职业",f_name: ["当前为龙魂姿态（姿态图标）","当前为刺客姿态（姿态图标）","F1左侧姿态（图标中心）","英勇指挥","壁垒轰炸","高层命令","能量条最左侧区域(任意颜色)"]}
optionData["双剑杖野外先驱"] := {name: types, wp: ["1","11"], skillname: "职业",f_name: ["进入帷幕图标","退出帷幕图标"]}
optionData["枪火野外先驱"] := {name: types, wp: ["1","11"], skillname: "职业",f_name: ["进入帷幕图标","退出帷幕图标"]}
optionData["剑锤野外狂兽"] := {name: types, wp: ["5","51"], skillname: "职业",f_name: ["F5图标中心（文字为宠物觉醒时）","F5图标中心（文字为游侠觉醒时）"]}
optionData["斧锤野外破峰"] := {name: types, wp: ["1","2","3"], skillname: "职业",f_name: ["1","2","3"]}
optionData["三剑野外破峰"] := {name: types, wp: ["1","2","3"], skillname: "职业",f_name: ["1","2","3"]}
optionData["步枪野外丁真"] := {name: types, wp: ["1","2","3"], skillname: "职业",f_name: ["火花旋轮","核心射击","迫击炮"]}
optionData["大锤直伤机械"] := {name: types, wp: ["1","12","2","3","4","42","5"], skillname: "职业",f_name: ["静电冲击","重建立场","备用电容","手雷弹幕","布设雷区","布设雷区二段","功能机型"]}
optionData["大锤直伤暴风"] := {name: types, wp: ["3","1","2","4","31","32","34"], skillname: "职业",f_name: ["雷协调图标中心`n协调需冷却完毕","火协调左上边框`n协调需冷却完毕","水协调左上边框`n协调需冷却完毕","土协调左上边框`n协调需冷却完毕","切到雷协调下`n取火协调中心","切到雷协调下`n取水协调中心","切到雷协调下`n取土协调中心"]}
optionData["辅助奶燃火"] := {name: types, wp: ["1","2","3","43","5"], skillname: "职业",f_name: ["正义圣书中心","决心圣书中心","勇气圣书中心","书页第3个豆子","打开书页后`n切武器图标"]}
optionData["直伤极速预告"] := {name: types, wp: ["1","21","5","2","6"], skillname: "职业",f_name: ["当前为巨龙姿态（姿态图标）","当前为刺客姿态（姿态图标）","上一姿态（姿态图标中心）","F2自然多面体","能量条最左侧区域(任意颜色)"]}
optionData["奶预告"] := {name: types, wp: ["1","21","5","6"], skillname: "职业",f_name: ["当前为巨龙姿态（姿态图标）","当前为人马姿态（姿态图标）","F1左侧姿态（图标中心）","能量条最左侧区域(任意颜色)"]}
optionData["裁决"] := {name: types, wp: ["1","21","5","6","r","2","22"], skillname: "职业",f_name: ["切换到同盟姿态（同盟姿态图标）","切换到刺客（刺客姿态图标）","F1左侧姿态图标中心","能量条最左侧区域(任意颜色)","耐力条50黄色","同盟下F2能量结合","刺客下F2能量结合"]}
optionData["症状敏缚影"] := {name: types, wp: ["1","2","22","4"], skillname: "职业",f_name: ["虹吸","进入暗影帷幕","退出暗影帷","先攻值第4豆"]}
optionData["节号症状编织"] := {name: types, wp: ["1","4","5","6"], skillname: "职业",f_name: ["大火协调中心","大土协调中心","火协调能量左侧","火协调能量右侧"]}
optionData["症状输出破峰"] := {name: types, wp: ["1","2","3"], skillname: "职业",f_name: ["F1","F2","F3"]}
optionData["枪火野外破峰"] := {name: types, wp: ["1","2","3"], skillname: "职业",f_name: ["F1","F2","F3"]}
optionData["剑枪直伤全息"] := {name: types, wp: ["1","2","3","4","5","51","52","6","61"], skillname: "职业",f_name: ["静电冲击","手雷弹幕","粒子加速器","剑刃爆发","启动光子熔炉（冷却完毕)","关闭光子熔炉（冷却完毕)","关闭光子熔炉（过热状态)","能量槽最左侧(0)","能量槽最右侧(150)"]}
optionData["症状先驱"] := {name: types, wp: ["1","2"], skillname: "职业",f_name: ["进入帷幕","退出帷幕"]}
optionData["野外直伤龙魂"] := {name: types, wp: ["1","21","5","2","3","4","6"], skillname: "职业",f_name: ["当前为龙魂姿态（姿态图标）","当前为矮人姿态（姿态图标）","F1左侧姿态（图标中心）","英勇指挥","壁垒轰炸","高层命令","能量条最左侧区域(任意颜色)"]}
optionData["斧锤直伤魂兽"] := {name: types, wp: ["1","2","3"], skillname: "职业",f_name: ["重击（幼龄猪）","蛮力冲锋（幼龄猪）","大地冲击（幼龄猪）"]}
optionData["症状德鲁伊"] := {name: types, wp: ["2","22","5","51"], skillname: "职业",f_name: ["致命毒液（森林蜘蛛）","毒云（腐肉噬蝎）","天界化身","退出天界化身"]}
optionData["剑号野外元晶"] := {name: types, wp: ["1","14","3","31","4","42","2","23","5"], skillname: "职业",f_name: ["火协调边框或图标中心`n（冷却完毕）","火协调下，小土协调中心`n（冷却完毕）","雷协调边框或图标中心`n（冷却完毕）","雷协调下，小火协调中心`n（冷却完毕）","土协调边框或图标中心`n（冷却完毕）","土协调下，小水协调中心`n（冷却完毕）","水协调边框或图标中心`n（冷却完毕）","水协调下，小雷协调中心`n（冷却完毕）","F5图标中心（任意协调）"]}
optionData["剑号急速元晶"] := {name: types, wp: ["1","14","3","31","4","42","2","23","5"], skillname: "职业",f_name: ["火协调边框或图标中心`n（冷却完毕）","火协调下，小土协调中心`n（冷却完毕）","雷协调边框或图标中心`n（冷却完毕）","雷协调下，小火协调中心`n（冷却完毕）","土协调边框或图标中心`n（冷却完毕）","土协调下，小水协调中心`n（冷却完毕）","水协调边框或图标中心`n（冷却完毕）","水协调下，小雷协调中心`n（冷却完毕）","F5图标中心（任意协调）"]}
optionData["枪号野外元晶"] := {name: types, wp: ["1","14","3","31","4","42","2","23","5"], skillname: "职业",f_name: ["火协调边框或图标中心`n（冷却完毕）","火协调下，小土协调中心`n（冷却完毕）","雷协调边框或图标中心`n（冷却完毕）","雷协调下，小火协调中心`n（冷却完毕）","土协调边框或图标中心`n（冷却完毕）","土协调下，小水协调中心`n（冷却完毕）","水协调边框或图标中心`n（冷却完毕）","水协调下，小雷协调中心`n（冷却完毕）","F5图标中心（任意协调）"]}
optionData["节号野外元晶"] := {name: types, wp: ["1","14","3","31","4","42","2","23","5"], skillname: "职业",f_name: ["火协调边框或图标中心`n（冷却完毕）","火协调下，小土协调中心`n（冷却完毕）","雷协调边框或图标中心`n（冷却完毕）","雷协调下，小火协调中心`n（冷却完毕）","土协调边框或图标中心`n（冷却完毕）","土协调下，小水协调中心`n（冷却完毕）","水协调边框或图标中心`n（冷却完毕）","水协调下，小雷协调中心`n（冷却完毕）","F5图标中心（任意协调）"]}
optionData["大锤野外元晶"] := {name: types, wp: ["1","13","3","32","4","41","2","24","5"], skillname: "职业",f_name: ["火协调边框或图标中心`n（冷却完毕）","火协调下，小电协调中心`n（冷却完毕）","雷协调边框或图标中心`n（冷却完毕）","雷协调下，小水协调中心`n（冷却完毕）","土协调边框或图标中心`n（冷却完毕）","土协调下，小火协调中心`n（冷却完毕）","水协调边框或图标中心`n（冷却完毕）","水协调下，小土协调中心`n（冷却完毕）","F5图标中心（任意协调）"]}
optionData["双法杖野外狂兽"] := {name: types, wp: ["5","51"], skillname: "职业",f_name: ["F5图标中心（文字为宠物觉醒时）","F5图标中心（文字为游侠觉醒时）"]}
optionData["双大剑野外狂兽"] := {name: types, wp: ["5","51"], skillname: "职业",f_name: ["F5图标中心（文字为宠物觉醒时）","F5图标中心（文字为游侠觉醒时）"]}
optionData["斧号野外狂兽"] := {name: types, wp: ["5","51"], skillname: "职业",f_name: ["F5图标中心（文字为宠物觉醒时）","F5图标中心（文字为游侠觉醒时）"]}
optionData["奶急速狂战"] := {name: types, wp: ["1","2","12"], skillname: "职业",f_name: ["胜利之路(进入战斗后取色)","狂暴(进入战斗后取色)","壁垒分离(狂暴后)"]}
optionData["步枪神枪手"] := {name: types, wp: ["1","2","4","12"], skillname: "职业",f_name: ["神枪手标记","F2上数字1内`n颜色为#898989","先攻值4为白色时","先攻值12为白色时"]}
optionData["双枪急速神枪手"] := {name: types, wp: ["1","2","4"], skillname: "职业",f_name: ["神枪手标记","吸取时间","先攻值4为白色时"]}
optionData["双枪野外神枪手"] := {name: types, wp: ["1","2","4"], skillname: "职业",f_name: ["神枪手标记","F2上数字1内`n颜色为#898989","先攻值4为白色时"]}
optionData["七星野外神枪手"] := {name: types, wp: ["1","2","4"], skillname: "职业",f_name: ["神枪手标记","F2上数字1内`n颜色为#898989","先攻值4为白色时"]}
optionData["节匕直伤元晶"] := {name: types, wp: ["1","14","3","31","4","42","2","23","5"], skillname: "职业",f_name: ["火协调边框，或图标中心`n（协调需冷却完毕）","在火协调下，取土协调中心`n（协调需冷却完毕）","雷协调边框，或图标中心`n（协调需冷却完毕）","在雷协调下，取火协调中心`n（协调需冷却完毕）","土协调边框，或图标中心`n（协调需冷却完毕）","在土协调下，取水协调中心`n（协调需冷却完毕）","水协调边框，或图标中心`n（协调需冷却完毕）","在水协调下，取雷协调中心`n（协调需冷却完毕）","F5图标中心（任意协调）"]}
optionData["节匕直伤元晶2"] := {name: types, wp: ["1","14","3","31","4","42","2","23","5"], skillname: "职业",f_name: ["火协调边框，或图标中心`n（协调需冷却完毕）","在火协调下，取土协调中心`n（协调需冷却完毕）","雷协调边框，或图标中心`n（协调需冷却完毕）","在雷协调下，取火协调中心`n（协调需冷却完毕）","土协调边框，或图标中心`n（协调需冷却完毕）","在土协调下，取水协调中心`n（协调需冷却完毕）","水协调边框，或图标中心`n（协调需冷却完毕）","在水协调下，取雷协调中心`n（协调需冷却完毕）","F5图标中心（任意协调）"]}
optionData["长矛直伤元晶"] := {name: types, wp: ["1","14","3","31","4","42","2","23","5"], skillname: "职业",f_name: ["火协调边框，或图标中心`n（协调需冷却完毕）","在火协调下，取土协调中心`n（协调需冷却完毕）","雷协调边框，或图标中心`n（协调需冷却完毕）","在雷协调下，取火协调中心`n（协调需冷却完毕）","土协调边框，或图标中心`n（协调需冷却完毕）","在土协调下，取水协调中心`n（协调需冷却完毕）","水协调边框，或图标中心`n（协调需冷却完毕）","在水协调下，取雷协调中心`n（协调需冷却完毕）","F5图标中心（任意协调）"]}
optionData["症状极速预告"] := {name: types, wp: ["21","1","5","6"], skillname: "职业",f_name: ["当前为恶魔姿态（姿态图标）","当前为巨龙姿态（姿态图标）","F1左侧姿态（图标中心）","能量条最左侧"]}
optionData["长矛症状龙魂"] := {name: types, wp: ["1","21","5","2","3","4","6"], skillname: "职业",f_name: ["当前为龙魂姿态（姿态图标）","当前为恶魔姿态（姿态图标）","F1左侧姿态（图标中心）","英勇指挥","壁垒轰炸","高层命令","能量条最左侧区域(任意颜色)"]}
optionData["奶机械"] := {name: types, wp: ["1","2","3","4","5"], skillname: "职业",f_name: ["重建立场","分流涂层","B型试剂","防御立场","功能机械"]}
optionData["节匕症状暴风"] := {name: types, wp: ["1"], skillname: "职业",f_name: ["火协调图标中心`n(需冷却完毕)"]}
optionData["节聚敏捷暴风"] := {name: types, wp: ["1"], skillname: "职业",f_name: ["火协调图标中心`n(需冷却完毕)"]}
if (optionData.Haskey(bdlist)) {
data := optionData[bdlist]
name := data.name
type := name . "color" . bdlist
wp := data.wp
f_name:=data.f_name
skillname:=data.skillname
Loop, % wp.MaxIndex() {
skill := wp[A_Index]
skill_name := f_name[A_Index]
Loop {
switch skill
{
default:
skilltext := "请移动到《" . skillname  "技能》`n《" . skill_name  . "》" . "`n" .  " (" . types . skill . ")`n技能图标内任意亮色区域`n按ESC跳过"
}
if GetKeyState(savecolorkey, "P")
{
getcolor(type,name,skill)
break
}
if GetKeyState("esc", "P") {
sleep 150
Break
}
}
}
}
type:="other"
loop
{
skilltext := "请移动到切武器图标箭头`n(需冷却完毕)`n`n如该职业无需切武器，也要取色"
if GetKeyState(savecolorkey, "P")
{
getcolor(type,"","qwq")
break
}
if GetKeyState("ESC", "P")
{
jump(200)
break
}
}
Gui, Destroy
tooltip
SetTimer findxy, off
Gdip_DeletePen(pCrossPen)
Gdip_DeleteGraphics(pGraphics)
pGraphics := ""
DeleteObject(hbm_buffer)
hbm_buffer := ""
DeleteDC(hdc_buffer)
hdc_buffer := ""
ReleaseDC(dest_hdc)
dest_hdc := ""
ReleaseDC(source_hdc)
source_hdc := ""
msgbox "取色完毕，可开启热键循环"
goto kaishi
return
savekey:
if (startkey = "CapsLock") {
if GetKeyState("CapsLock", "T") {
SetCapsLockState, Off
}
}
IfWinExist, MyGui
{
WinActivate, MyGui
}
{
Gui, MyGui:New, +Resize +MinSize100x260, 热键
Gui Add, Button, x5 y470 w40 h30 gSavebutton default, 保存
Gui Add, Button, x60 y470 w40 h30 gaboutButton , 动态
Gui Add, Button, x165 y510 w40 h30 galltimehelp , 全局调整
Gui Add, Button, x5 y510 w45 h30  gfly, 卡飞龙
Gui, Add, GroupBox, x5 y10 w60 h165, 武器热键
Gui Add, Hotkey, x10 y30 w50 vwp1key , %wp1key%
Gui Add, Hotkey, x10 y60 w50 vwp2key , %wp2key%
Gui Add, Hotkey, x10 y90 w50 vwp3key , %wp3key%
Gui Add, Hotkey, x10 y120 w50 vwp4key , %wp4key%
Gui Add, Hotkey, x10 y150 w50 vwp5key , %wp5key%
Gui, Add, GroupBox, x75 y10 w60 h165, 通用热键
Gui Add, Hotkey, x80 y30 w50 vty1key , %ty1key%
Gui Add, Hotkey, x80 y60 w50 vty2key , %ty2key%
Gui Add, Hotkey, x80 y90 w50 vty3key , %ty3key%
Gui Add, Hotkey, x80 y120 w50 vty4key , %ty4key%
Gui Add, Hotkey, x80 y150 w50 vty5key , %ty5key%
Gui, Add, GroupBox, x145 y10 w60 h165, 职业热键
Gui Add, Hotkey, x150 y30 w50 vf1key , %f1key%
Gui Add, Hotkey, x150 y60 w50 vf2key , %f2key%
Gui Add, Hotkey, x150 y90 w50 vf3key , %f3key%
Gui Add, Hotkey, x150 y120 w50 vf4key , %f4key%
Gui Add, Hotkey, x150 y150 w50 vf5key , %f5key%
Gui, Add, GroupBox, x5 y180 w80 h45, 切武器
Gui, Add, Button, x10 y200 w65 vqwqkey gqwqkey, %qwqkey%
Gui, Add, GroupBox, x90 y180 w80 h45, 启动
Gui, Add, Button, x95 y200 w65 vstartkey gstartkey, %startkey%
Gui, Add, Button, x180 y190 w20 h35 gShowHelp, 帮助
Gui, Add, GroupBox, x5 y240 w45 h45, 取色
Gui Add, Hotkey, x10 y255 w30 vsavecolorkey , %savecolorkey%
Gui, Add, GroupBox, x55 y240 w45 h45, 保存
Gui Add, Hotkey, x60 y255 w30 vsavekey , %savekey%
Gui, Add, GroupBox, x105 y240 w45 h45, 全局
Gui Add, edit, x110 y255 w35 valltime  ,%alltime%
Gui, Add, GroupBox, x155 y240 w45 h45, 闪避
Gui, Add, Button, x160 y255 w35 vrollkey grollkey, %rollkey%
Gui, Add, text, x130 y330 w50 h15, 鼠标模式
Gui, Add, ComboBox, x120 y350 w80 vmousemode gmousemode , Logitech|Razer|其他
Gui, Add, Button, x5 y370  h30 w55 vcheckskill gcheckskill  , 技能测试
Gui, Add, Button, x60 y370 h30 w55 gtooltipbutton, 启动文字
Gui, Add, Button, x120 y375 h25 w80 ggetwin, 记录窗口大小
Gui, Add, Button, x120 y405 h25 w80 gbackwin, 恢复窗口大小
Gui, Add, Button, x5 y400  h30 w55 gShowInputBox, 修改循环
Gui, Add, Button, x60 y400  h30 w55  ggetmieshi, 蔑视取色
Gui, Add, Button, x110 y470 w40 h30  ggeturl, 网盘
Gui, Add, Button, x165 y470 w40 h30 vexitapp gexitapp , 退出
Gui, Add, text, x5 y445 h15, 识别模式
Gui, Add, ComboBox, x60 y440 w55 vfindmode gfindmode  ,DXGI|GDIP|WGC
Gui, Add, Button, x120 y435 w80 h25 vcheckdxgi gcheckdxgi , 识别检测
Gui, Add, Button, x20 y345  h25 gShowbd, 查看职业BD
Gui, Add, text,  x80 y510 , 开发板制作`n逐步更新中
Gui, Add, Tab, x5 y290 w200 h22 vMyTabControl gTabChanged, 野外|直伤|症状|辅助|
Gui, Tab, 1
Gui, Add, ComboBox, x5 y320 w110 vbdlist1 gbdlist1 ,%optionList%
Gui, Tab, 2
Gui, Add, ComboBox, x5 y320 w110 vbdlist2 gbdlist2 ,%optionList2%
Gui, Tab, 3
Gui, Add, ComboBox, x5 y320 w110 vbdlist3 gbdlist3 ,%optionList3%
Gui, Tab, 4
Gui, Add, ComboBox, x5 y320 w110 vbdlist4 gbdlist4 ,%optionList4%
Gui ,Show, w210 h550,热键
WinWaitActive, ahk_class AutoHotkeyGUI
GuiControl, Choose, MyTabControl, %TabNum%
Gui, Tab, %TabNum%
GuiControl, Choose, bdlist1, %bdlist%
GuiControl, Choose, bdlist2, %bdlist%
GuiControl, Choose, bdlist3, %bdlist%
GuiControl, Choose, bdlist4, %bdlist%
GuiControl, Choose, mousemode, %mousemode%
GuiControl, Choose, findmode, %findmode%
ControlFocus, Button1
}
return
TabChanged:
GuiControlGet, TabNum, , MyTabControl
IniWrite, %TabNum%, %iniFilePath%, bdlist, tabvalue
return
checkskill:
IfWinExist, 技能测试
{
WinActivate, 技能测试
}
{
Gui, 释放测试:New,  -MinimizeBox -MaximizeBox ,技能测试
Gui Add, text,  h20, 输入要测试的技能标识（例如wp2）
Gui Add, edit,  h20 vgetedit,
Gui, Add, Button, h30 vuseskill guseskill  , 开始测试
Gui ,Show, w210 h100,技能测试
WinSet, AlwaysOnTop, On, 技能测试
}
return
useskill:
Gui, Submit, NoHide
x:=getedit . "x"
y:=getedit . "y"
colors:=getedit . "color"
xvalue:=%x%
yvalue:=%y%
colorvalue:=%colors%
WinActivate, ahk_exe Gw2-64.exe
sleep 500
getskill:=GetPixelColor(xvalue,yvalue)
if(getskill==colorvalue)
{
msgbox 屏幕技能颜色为：%getskill%`n坐标x：%xvalue%`n坐标y：%yvalue%`n本地颜色为：%colorvalue%，颜色一致，该技能正常。
}
else
{
msgbox 屏幕技能颜色为：%getskill%`n坐标x：%xvalue%`n坐标y：%yvalue%`n本地颜色为：%colorvalue%，颜色不一致，请检查其他原因。
}
return
alltimehelp:
msgbox 后续更新中，将逐步修改全局延迟在循环中的作用，新版方案将无需更改全局延迟也可实现高效输出`n`n以下职业，需要将全局延迟改为1，避免出现异常打断`n`n双剑杖先驱，枪火杖先驱，大剑时空，大剑灵刃，症状破锋，双法杖野外狂兽，奶狂战，步枪神枪手，双枪极速神枪手，直伤敏龙魂，大锤暴风
return
findmode:
GuiControlGet, findmode, , findmode
if(findmode=="DXGI")
{
msgbox DXGI`n该模式为图形加速，对系统要求较高`n可自行进行速度测试，如该模式无法使用，可使用GDIP模式`nDXGI模式启动时需加载，起手会丢失100-300毫秒延迟，但循环阶段识别效率较高，对于长续航战斗更好，DXGI暂不支持副屏幕。
}
if(findmode=="GDIP")
{
msgbox GDIP`n该模式为默认模式，对系统要求较低，兼容大多数系统`n启动速度快，但循环阶段识别效率低于DXGI，适合需要随时启停的场景，以及技能较少的职业，例如丁真，该模式支持多屏幕。
}
if(findmode=="WGC")
{
msgbox WGC`n该模式效率与DXGI相当，提供高效找色方案，起手无延迟，无需DXGI加载。`n但取色坐标信息与其他两种模式不同，该模式下的取色信息，窗口模式下无法与其他模式共享，建议只作为全屏时使用，或只使用该模式。
}
IniWrite, %findmode%, %iniFilePath%, Hotkeys, findmode
return
fly:
Gui,fly: New, -MinimizeBox -MaximizeBox
Gui Add, Text, x25 y10  h20, 骑乘/离开飞龙
Gui Add, Hotkey, x30 y30 w60 vupkey , %upkey%
Gui Add, Text, x25 y60  h20, 甲虫骑乘/跳下
Gui Add, Hotkey, x30 y80 w60 vdnkey , %dnkey%
Gui Add, Text, x30 y110 w70 h20, 卡飞龙热键
Gui Add, Hotkey, x30 y130 w60 vflykey , %flykey%
Gui Add, Text, x30 y160 w70 h20, 延迟时间
Gui Add, edit, x30 y180 w60 vflywait , %flywait%
Gui Add, Button, x30 y200 w60 gsave , 保存
Gui Add, Button, x30 y220 w60 gflyhelp , 帮助
Gui Add, Text, x5 y250 , 启动热键不要包含ALT`n卡之前需手动上甲虫
Gui Show,h280 ,卡飞龙
return
flyhelp:
msgbox 卡飞龙教程：先手动骑上甲虫，然后按下卡飞龙热键，如果技能4-5为飞龙图标，其他为武器图标，则卡成功。`n视角水平，快速按空格为飞天，视角朝着地面，快速按空格为前进`n如果要下飞龙，为按2次下坐骑热键。
return
flymain:
hwnd := DllCall("GetForegroundWindow")
WinGet, ProcessName, ProcessName, ahk_id %hwnd%
exeName := "Gw2-64.exe"
if(ProcessName==exeName)
{
sendone(dnkey,1)
sleep 1400
sendone(dnkey,1)
sleep 90
send 1
sleep 90
send 1
sleep %flywait%
sendone(upkey,1)
}
return
save:
gui Submit
saveType := "Hotkeys"
IniWrite, %upkey%, %flyini%, %saveType%, upkey
IniWrite, %dnkey%, %flyini%, %saveType%, dnkey
IniWrite, %flykey%, %flyini%, %saveType%, flykey
IniWrite, %flywait%, %flyini%, %saveType%, flywait
GuiControl,, upkey, %upkey%
GuiControl,, dnkey, %dnkey%
goto kaishi
return
checkdxgi:
IfWinExist, 识别检测
{
WinActivate, 识别检测
}
{
Gui, DXGI检测:New,  +Resize , 识别检测
Gui, Add, Button,   h30 vdxgispeed gdxgispeed , 识别速度检测
Gui, Add, Button,   h30 vgetpbit ggetpbit ym , 抓取图片测试
Gui ,Show, w210 h80
}
return
dxgispeed:
ActivateSecondaryScreenWindow()
Gdip_DisposeImage(pBitmap)
if(findmode=="DXGI")
{
pBitmap := dxgi_getpic()
}
if(findmode=="GDIP")
{
pBitmap := gdip_getpic()
}
if(findmode=="WGC")
{
pBitmap := wgc_getpic()
}
DllCall("AllocConsole")
checktime := A_TickCount
successCount := 0
TryCount := 0
if(!pBitmap)
{
msgbox ,%findmode%模式不可用，请检查运行环境，或更换其他模式
DllCall("FreeConsole")
return
}
else
{
successCount++
TryCount++
Gdip_DisposeImage(pBitmap)
}
while(A_TickCount-checktime<5000)
{
lasttime := 5000 - (A_TickCount-checktime)
start := A_TickCount
tooltip,检测中，如出现跳动则表示可用`n剩余时间%lasttime% ms 成功次数：%successCount%,0,0
TryCount++
if(findmode=="DXGI")
{
pBitmap := dxgi_getpic()
}
if(findmode=="GDIP")
{
pBitmap := gdip_getpic()
}
if(findmode=="WGC")
{
pBitmap := wgc_getpic()
}
if (pBitmap)
{
successCount++
width := Gdip_GetImageWidth(pBitmap)
height := Gdip_GetImageHeight(pBitmap)
color := Getdxgicolor(pBitmap, 800, 500)
elapsed := A_TickCount - start
FileAppend, 第%successCount%次截图耗时：%elapsed%ms 颜色值：%color%`n, CONOUT$
Gdip_DisposeImage(pBitmap)
}
else
{
FileAppend, [%A_TickCount%] 截图失败`n, CONOUT$
}
Sleep 10
}
elapsedTotal := A_TickCount - checktime
fps := Round(successCount / (elapsedTotal / 1000), 2)
msg := ""
msg .= "模式: " . findmode . "`n"
msg .= "测试总用时: " . elapsedTotal . " ms`n"
msg .= "总尝试次数: " . TryCount . " 次`n"
msg .= "截图成功次数: " . successCount . " 次`n"
msg .= "平均帧率（每秒成功截图数）: " . fps . " FPS`n"
msgbox, %msg%
tooltip
DllCall("FreeConsole")
return
getpbit:
ActivateSecondaryScreenWindow()
msgbox ,3秒后将开始测试，请确保处于游戏窗口。
startTime := A_TickCount
while (A_TickCount - startTime < 3000)
{
ToolTip %  "倒计时"3000-(A_TickCount - startTime) "毫秒"
Sleep, 10
}
tooltip
sleep 100
if(findmode=="DXGI")
{
pBitmap := dxgi_getpic()
}
if(findmode=="GDIP")
{
pBitmap := gdip_getpic()
}
if(findmode=="WGC")
{
pBitmap := wgc_getpic()
}
if(pBitmap)
{
filePath :="getdxgi.png"
Gdip_SaveBitmapToFile(pBitmap, filePath, "PNG")
Run, %filePath%
Gdip_DisposeImage(pBitmap)
sleep 500
msgbox,截图成功，如出现游戏截图画面说明可用，点击确认后，缓存图片删除。
FileDelete, %filePath%
}
else
{
msgbox ,当前窗口无法实现截图功能，可更换其他窗口，或者使用其他模式。
}
return
showbd:
Clipboard := bdtext
msgbox % wptext
return
geturl:
MsgBox, 0x1,网盘, 即将打开网盘地址，是否打开
IfMsgBox, OK
{
Run, https://pan.baidu.com/s/1CKeAKBTAycUtny5yq6k2Lw?pwd=jgxr
}
return
getwin:
MsgBox, 0x1, 记录窗口大小, 记录游戏窗口模式大小，避免手动拖动造成坐标变化
IfMsgBox, OK
{
WinGetPos, X, Y, Width, Height, ahk_exe Gw2-64.exe
if (Width = "")
{
MsgBox, 未找到《激战2》窗口!
return
}
IniWrite, %Width%, %iniFilePath%, Hotkeys, winwidth
IniWrite, %Height%, %iniFilePath%, Hotkeys, winHeight
msgbox 记录成功`n窗口大小为 %Width% x %Height%`n如无意拖动窗口导致无法施法，可点击恢复窗口大小。
}
return
backwin:
iniread, winwidth, %iniFilePath%, Hotkeys, winwidth
iniread, winHeight, %iniFilePath%, Hotkeys, winHeight
WinGet, winID, ID, ahk_exe Gw2-64.exe
if (winID) {
WinMove, ahk_id %winID%, , 20, 20, %winwidth%, %winHeight%
MsgBox, 窗口大小已调整为 %winwidth% x %winHeight%
} else {
MsgBox, 未找到 Gw2-64.exe 对应的窗口。
}
return
tooltipbutton:
ActivateSecondaryScreenWindow()
loop {
tooltip "自定义开启提示框要显示的位置，按下鼠标右键，ESC可跳过"
types:="Hotkeys"
skill:="tooltip"
if GetKeyState("RButton", "P")
{
MouseGetPos, xpos, ypos
PixelGetColor, color, %xpos%, %ypos%, RGB
IniWrite, %xpos%, %iniFilePath%, %types%, %skill%x
IniWrite, %ypos%, %iniFilePath%, %types%, %skill%y
mousemove, xpos, ypos
tooltip 获取成功
sleep 500
tooltip
goto kaishi
break
}
if GetKeyState("esc", "P") {
tooltip
Break
}
}
return
getmieshi:
ActivateSecondaryScreenWindow()
loop {
tooltip "移动到蔑视绿条处，按下鼠标右键，ESC可跳过"
types:="mieshi"
skill:="mieshi"
if GetKeyState("RButton", "P")
{
MouseGetPos, xpos, ypos
mousemove, xpos, ypos - 300
sleep 250
PixelGetColor, color, %xpos%, %ypos%, RGB
IniWrite, %xpos%, %iniFilePath%, %types%, %skill%x
IniWrite, %ypos%, %iniFilePath%, %types%, %skill%y
IniWrite, %color%, %iniFilePath%, %types%, %skill%color
mousemove, xpos, ypos
tooltip 获取成功
sleep 500
tooltip
break
}
if GetKeyState("esc", "P") {
tooltip
break
}
}
return
bdlist1:
GuiControl, Choose, bdlist2, 0
GuiControl, Choose, bdlist3, 0
GuiControl, Choose, bdlist4, 0
GuiControlGet, bdlist1, , bdlist1
if (bdlist="{blank}" or InStr(bdlist, "-") or InStr(bdlist, " ") > 0)
{
}
else
{
saveType:="bdlist"
IniWrite, %bdlist1%, %iniFilePath%, %saveType%, bdlist
types := "alltime" . bdlist
IniRead, alltime, %iniFilePath%, %types%, alltime
if(alltime=="ERROR" or alltime=="")
{
alltime:=1
}
GuiControl, , alltime, %alltime%
}
goto kaishi
return
bdlist2:
GuiControl, Choose, bdlist1, 0
GuiControl, Choose, bdlist3, 0
GuiControl, Choose, bdlist4, 0
GuiControlGet, bdlist2, , bdlist2
if (bdlist2="{blank}" or InStr(bdlist2, "-") or InStr(bdlist2, " ") > 0)
{
}
else
{
saveType:="bdlist"
IniWrite, %bdlist2%, %iniFilePath%, %saveType%, bdlist
types := "alltime" . bdlist2
IniRead, alltime, %iniFilePath%, %types%, alltime
if(alltime=="ERROR" or alltime=="")
{
alltime:=1
}
GuiControl, , alltime, %alltime%
}
goto kaishi
return
bdlist3:
GuiControl, Choose, bdlist1, 0
GuiControl, Choose, bdlist2, 0
GuiControl, Choose, bdlist4, 0
GuiControlGet, bdlist3, , bdlist3
if (bdlist3="{blank}" or InStr(bdlist3, "-") or InStr(bdlist3, " ") > 0)
{
}
else
{
saveType:="bdlist"
IniWrite, %bdlist3%, %iniFilePath%, %saveType%, bdlist
types := "alltime" . bdlist3
IniRead, alltime, %iniFilePath%, %types%, alltime
if(alltime=="ERROR" or alltime=="")
{
alltime:=1
}
GuiControl, , alltime, %alltime%
}
goto kaishi
return
bdlist4:
GuiControl, Choose, bdlist1, 0
GuiControl, Choose, bdlist2, 0
GuiControl, Choose, bdlist3, 0
GuiControlGet, bdlist4, , bdlist4
if (bdlist3="{blank}" or InStr(bdlist4, "-") or InStr(bdlist4, " ") > 0)
{
}
else
{
saveType:="bdlist"
IniWrite, %bdlist4%, %iniFilePath%, %saveType%, bdlist
types := "alltime" . bdlist4
IniRead, alltime, %iniFilePath%, %types%, alltime
if(alltime=="ERROR" or alltime=="")
{
alltime:=1
}
GuiControl, , alltime, %alltime%
}
goto kaishi
return
ShowInputBox:
IfWinExist, 循环设置
{
WinActivate, 循环设置
}
{
Gui, 循环设置:New, -sysMenu +Resize , 循环设置
IniRead, qishou, %bdFilePath%, 循环设置, 起手
IniRead, xunhuan, %bdFilePath%, 循环设置, 主循环
IniRead, qwq1, %bdFilePath%, 切武器分类, 武器1切武器2
IniRead, qwq2, %bdFilePath%, 切武器分类, 武器2切武器1
Gui, Add, Text,w400 , 起手循环
Gui, Add, Edit, w380 h40 vqishou_loop, %qishou%
Gui, Add, Text,w400 , 主循环
Gui, Add, Edit, w380 h40 vmain_loop, %xunhuan%
Gui, Add, Text,w400 , 破蔑技能
Gui, Add, Edit, w380 h30 vpomie_loop, %pomie%
Gui, Add, Text, x10 y200 h20 , 武器组1切武器2
Gui, Add, Edit, x100 y195 w80 h20 vwpmode1,  %qwq1%
Gui, Add, Text, x10 y230 h20, 武器组2切武器1
Gui, Add, Edit, x100 y225 w80 h20 vwpmode2, %qwq2%
Gui, Add, Text, x10 y260 h20, 切武器延迟
Gui, Add, Edit, x100 y255 w80 h20 vwpmodesleep, %qwqwait%
Gui, Add, Button, x190 y260 h20 w40 gqwqhelp, 帮助
Gui, Add, Button, x10 y280 h30 w40 gsaveskill, 确定
Gui Add, Button,x60 y280 h30 w40 gcloseskill , 取消
Gui Add, Button,x260 y280 h30  gdefaultskill , 重置循环
gui,show
}
return
qwqhelp:
msgbox 取消了之前切武器延迟等待的方式，改为切武器按下后，100毫秒，执行武器组热键，也可根据自身电脑情况自行调节，可有效提高实际输出。`n默认值为120，也可适当降低，以不出现技能打断为准。
return
saveskill:
Gui, Submit
IniWrite, %qishou_loop%, %bdFilePath%, 循环设置, 起手
IniWrite, %main_loop%, %bdFilePath%, 循环设置, 主循环
IniWrite, %pomie_loop%, %bdFilePath%, 破蔑分类, 蔑视技能
IniWrite, %wpmode1%, %bdFilePath%, 切武器分类, 武器1切武器2
IniWrite, %wpmode2%, %bdFilePath%, 切武器分类, 武器2切武器1
IniWrite, %wpmodesleep%, %bdFilePath%, 切武器分类, 切武器延迟
Gui, Destroy
goto kaishi
return
closeskill:
Gui, Destroy
return
defaultskill:
IniDelete, %bdFilePath%, 循环设置, 起手
IniDelete, %bdFilePath%, 循环设置, 主循环
IniDelete, %bdFilePath%, 破蔑分类, 蔑视技能
IniDelete, %bdFilePath%, 破蔑分类, 蔑视技能
IniDelete, %bdFilePath%, 切武器分类, 武器1切武器2
IniDelete, %bdFilePath%, 切武器分类, 武器2切武器1
IniDelete, %bdFilePath%, 切武器分类, 切武器增加延迟
Gui, Destroy
goto kaishi
return
exitapp:
MsgBox, 0x1, 关闭, 你确定要退出该程序么
IfMsgBox, OK
{
IbSendDestroy()
Gdip_DeleteGraphics(pGraphics)
DeleteObject(hbm_buffer)
DeleteDC(hdc_buffer)
ReleaseDC(dest_hdc)
ReleaseDC(source_hdc)
Gdip_Shutdown(pToken)
ExitApp
}
IfMsgBox, Cancel
{
}
return
mousemode:
GuiControlGet, mousemode, , mousemode
saveType:="mousemode"
IniWrite, %mousemode%, %iniFilePath%, %saveType%, mousemode
return
rollkey:
Gui,rollkey: New, -MinimizeBox -MaximizeBox -sysMenu
Gui, Add, Text, vMyText x30 y10 Center, 请输入按键信息`n`n支持鼠标侧键及中键
Gui ,Show, w170 h85,设置热键
Gui Add, Button, x25 y55 gclick , 保存
Gui Add, Button, x70 y55 gexitclick , 取消
Gui Add, Button, x115 y55 gdefaultkey3 , 默认
whatkey:="rollkey"
saveType := "Hotkeys"
IniWrite, 1, %iniFilePath%, %saveType%, waitkey
OnMessage(0x100, "KeyHandler")
OnMessage(0x020B, "WM_XBUTTONDOWN1")
OnMessage(0x020C, "WM_XBUTTONDOWN2")
OnMessage(0x0207, "WM_MBUTTONDOWN")
return
qwqkey:
Gui,qwqkey: New, -MinimizeBox -MaximizeBox -sysMenu
Gui, Add, Text, vMyText x30 y10 Center, 请输入按键信息`n`n支持鼠标侧键及中键
Gui ,Show, w170 h85,设置热键
Gui Add, Button, x25 y55 gclick , 保存
Gui Add, Button, x70 y55 gexitclick , 取消
Gui Add, Button, x115 y55 gdefaultkey1 , 默认
whatkey:="qwqkey"
saveType := "Hotkeys"
IniWrite, 1, %iniFilePath%, %saveType%, waitkey
OnMessage(0x100, "KeyHandler")
OnMessage(0x020B, "WM_XBUTTONDOWN1")
OnMessage(0x020C, "WM_XBUTTONDOWN2")
OnMessage(0x0207, "WM_MBUTTONDOWN")
return
startkey:
Gui,startkey: New, -MinimizeBox -MaximizeBox -sysMenu
Gui, Add, Text, vMyText x30 y10 Center, 请输入按键信息`n`n支持鼠标侧键及中键
Gui ,Show, w170 h85,设置热键
Gui Add, Button, x25 y55 gclick , 保存
Gui Add, Button, x70 y55 gexitclick , 取消
Gui Add, Button, x115 y55 gdefaultkey2 , 默认
whatkey:="startkey"
saveType := "Hotkeys"
IniWrite, 1, %iniFilePath%, %saveType%, waitkey
Hotkey, %startkey%, startrun,OFF
OnMessage(0x100, "KeyHandler")
OnMessage(0x020B, "WM_XBUTTONDOWN1")
OnMessage(0x020C, "WM_XBUTTONDOWN2")
OnMessage(0x0207, "WM_MBUTTONDOWN")
Return
click:
saveType := "Hotkeys"
IniWrite, 0, %iniFilePath%, %saveType%, waitkey
Iniread, qwqkey, %iniFilePath%, %saveType%, qwqkey
Iniread, startkey, %iniFilePath%, %saveType%, startkey
Iniread, rollkey, %iniFilePath%, %saveType%, rollkey
OnMessage(0x100, "")
Gui, Destroy
goto kaishi
return
exitclick:
saveType := "Hotkeys"
IniWrite, 0, %iniFilePath%, %saveType%, waitkey
Gui, Destroy
OnMessage(0x100, "")
Iniread, qwqkey, %iniFilePath%, %saveType%, qwqkey
Iniread, startkey, %iniFilePath%, %saveType%, startkey
Iniread, rollkey, %iniFilePath%, %saveType%, rollkey
goto kaishi
return
defaultkey1:
whatkey:="qwqkey"
saveType := "Hotkeys"
GuiControl,qwqkey:, MyText, `n按键已重置
GuiControl, MyGui:, %whatkey%, ``
IniWrite, ``, %iniFilePath%, %saveType%, %whatkey%
IniRead, %whatkey%, %iniFilePath%, %saveType%, %whatkey%
OnMessage(0x100, "")
IniWrite, 0, %iniFilePath%, %saveType%, waitkey
Gui, Destroy
goto kaishi
return
defaultkey2:
whatkey:="startkey"
saveType := "Hotkeys"
GuiControl,startkey:, MyText, `n按键已重置
GuiControl, MyGui:, %whatkey%, Capslock
IniWrite, Capslock, %iniFilePath%, %saveType%, %whatkey%
OnMessage(0x100, "")
IniWrite, 0, %iniFilePath%, %saveType%, waitkey
Gui, Destroy
goto kaishi
return
defaultkey3:
whatkey:="rollkey"
saveType := "Hotkeys"
GuiControl,rollkey:, MyText, `n按键已重置
GuiControl, MyGui:, %whatkey%, v
IniWrite, v, %iniFilePath%, %saveType%, %whatkey%
IniRead, %whatkey%, %iniFilePath%, %saveType%, %whatkey%
OnMessage(0x100, "")
IniWrite, 0, %iniFilePath%, %saveType%, waitkey
Gui, Destroy
goto kaishi
return
ShowHelp:
msgbox 使用说明`n1，第一次打开，先选择对应职业的bd，然后点击保存按钮，随后进入游戏按下f9开启取色，根据文字提示获取游戏技能图标内的颜色，用于判断技能是否可用，移动后再次按f9保存。`n`n2，全局延迟默认为1.0，每降低0.05可间接提高输出，可根据电脑情况调节，请勿设置过低，否则会出现技能打断等情况。`n`n3，提示里的文字为启动后，游戏内置的文字显示，可删除也可保留，用于判断当前脚本状态。
Return
Savebutton:
gui Submit
saveType := "Hotkeys"
iniread, bdlist, %iniFilePath% , bdlist, bdlist
GuiControlGet, alltime, , alltime
IniWrite, %wp1key%, %iniFilePath%, %saveType%, wp1key
IniWrite, %wp2key%, %iniFilePath%, %saveType%, wp2key
IniWrite, %wp3key%, %iniFilePath%, %saveType%, wp3key
IniWrite, %wp4key%, %iniFilePath%, %saveType%, wp4key
IniWrite, %wp5key%, %iniFilePath%, %saveType%, wp5key
IniWrite, %ty1key%, %iniFilePath%, %saveType%, ty1key
IniWrite, %ty2key%, %iniFilePath%, %saveType%, ty2key
IniWrite, %ty3key%, %iniFilePath%, %saveType%, ty3key
IniWrite, %ty4key%, %iniFilePath%, %saveType%, ty4key
IniWrite, %ty5key%, %iniFilePath%, %saveType%, ty5key
IniWrite, %f1key%, %iniFilePath%, %saveType%, f1key
IniWrite, %f2key%, %iniFilePath%, %saveType%, f2key
IniWrite, %f3key%, %iniFilePath%, %saveType%, f3key
IniWrite, %f4key%, %iniFilePath%, %saveType%, f4key
IniWrite, %f5key%, %iniFilePath%, %saveType%, f5key
IniWrite, %savecolorkey%, %iniFilePath%, %saveType%, savecolorkey
IniWrite, %savekey%, %iniFilePath%, %saveType%, savekey
types := "alltime" . bdlist
IniWrite, %alltime%, %iniFilePath% , %types%, alltime
goto kaishi
return
aboutButton:
msgbox 本程序免费使用公开下载，代码免费开源`n 谨防购买上当受骗，相关bd可搜索星岬岛、ezgame等网站`n 唯一发布地址bilibili，百度云
Run, https://space.bilibili.com/1612761/dynamic
return
jump(jumptime)
{
tooltip "跳过"
sleep, jumptime
tooltip
}
getcolor(types,names,skill)
{
MouseGetPos, xpos, ypos
mousemove, xpos, ypos - 300
sleep 250
PixelGetColor, color, %xpos%, %ypos%, RGB
IniWrite, %xpos%, %bdFilePath%, %types%, %names%%skill%x
IniWrite, %ypos%, %bdFilePath%, %types%, %names%%skill%y
IniWrite, %color%, %bdFilePath%, %types%, %names%%skill%color
mousemove, xpos, ypos
tooltip
}
global whatkey
KeyHandler(wParam, lParam)
{
saveType := "Hotkeys"
key := GetKeyName("vk" . Format("{:X}", wParam))
if(key=="Backspace" && whatkey=="qwqkey")
{
GuiControl,%whatkey%:, MyText, 你的热键为`n`n空
GuiControl, MyGui:, %whatkey%, 空
key:=""
IniWrite, %key%, %iniFilePath%, %saveType%, %whatkey%
IniRead, %whatkey%, %iniFilePath%, %saveType%, %whatkey%
}
else
if(key=="NumpadEnd" && whatkey!="qwqkey")
{
key:="End"
GuiControl,%whatkey%:, MyText, 你的热键为`n`n%key%
GuiControl, MyGui:, %whatkey%, %key%
IniWrite, %key%, %iniFilePath%, %saveType%, %whatkey%
IniRead, %whatkey%, %iniFilePath%, %saveType%, %whatkey%
}
Else
if(key=="NumpadHome" && whatkey!="qwqkey")
{
key:="Home"
GuiControl,%whatkey%:, MyText, 你的热键为`n`n%key%
GuiControl, MyGui:, %whatkey%, %key%
IniWrite, %key%, %iniFilePath%, %saveType%, %whatkey%
IniRead, %whatkey%, %iniFilePath%, %saveType%, %whatkey%
}
Else
{
GuiControl,%whatkey%:, MyText, 你的热键为`n`n%key%
GuiControl, MyGui:, %whatkey%, %key%
IniWrite, %key%, %iniFilePath%, %saveType%, %whatkey%
IniRead, %whatkey%, %iniFilePath%, %saveType%, %whatkey%
}
return
}
WM_XBUTTONDOWN1(wParam, lParam)
{
if( wParam==65568)
{
saveType := "Hotkeys"
key:="Xbutton1"
GuiControl,%whatkey%:, MyText, 你的热键为`n`n%key%
GuiControl, MyGui:, %whatkey%, %key%
IniWrite, %key%, %iniFilePath%, %saveType%, %whatkey%
IniRead, %whatkey%, %iniFilePath%, %saveType%, %whatkey%
}
}
WM_XBUTTONDOWN2(wParam, lParam)
{
if( wParam==131072)
{
saveType := "Hotkeys"
key:="Xbutton2"
GuiControl,%whatkey%:, MyText, 你的热键为`n`n%key%
GuiControl, MyGui:, %whatkey%, %key%
IniWrite, %key%, %iniFilePath%, %saveType%, %whatkey%
IniRead, %whatkey%, %iniFilePath%, %saveType%, %whatkey%
}
}
WM_MBUTTONDOWN(wParam, lParam)
{
saveType := "Hotkeys"
key:="Mbutton"
GuiControl,%whatkey%:, MyText, 你的热键为`n`n%key%
GuiControl, MyGui:, %whatkey%, %key%
IniWrite, %key%, %iniFilePath%, %saveType%, %whatkey%
IniRead, %whatkey%, %iniFilePath%, %saveType%, %whatkey%
}
CreateThread(ByRef onoffVar, threadName) {
onoffVar := !onoffVar
return onoffVar ? new Thread(threadName) : ""
}
GetPixelColor(x,y)
{
PixelGetColor, color, x, y, RGB
StringRight color,color,8
return color
}
checkskill(skills, pBitmap ,ByRef skill_group) {
for index, skill in skills {
sname := skill[1]
sx := skill[2]
sy := skill[3]
scolor := skill[4]
hexColor:=Getdxgicolor(pBitmap, sx, sy)
if(hexColor==scolor )
{
skill_group.Push(skill)
}
}
}
findxy:
CoordMode, Mouse, Screen
MouseGetPos x, y
SysGet, MonitorCount, MonitorCount
currentMonitor := 0
Loop, %MonitorCount%
{
SysGet, Monitor, Monitor, %A_Index%
if (x >= MonitorLeft && x < MonitorRight && y >= MonitorTop && y < MonitorBottom)
{
currentMonitor := A_Index
break
}
}
if (currentMonitor > 0)
{
SysGet, Monitor, Monitor, %currentMonitor%
currentMonitorLeft := MonitorLeft
currentMonitorRight := MonitorRight
currentMonitorTop := MonitorTop
currentMonitorBottom := MonitorBottom
screenWidth := currentMonitorRight - currentMonitorLeft
screenHeight := currentMonitorBottom - currentMonitorTop
}
winX := x + 50
winY := y - 100 - (totalH//2)
if (winX + displayW + 180 > currentMonitorRight)
winX := x - displayW - 300
winY := winY < currentMonitorTop ? currentMonitorTop : (winY + totalH > currentMonitorBottom) ? currentMonitorBottom - totalH : winY
WinMove Magnifier,, %winX%, %winY%
capX := x - captureW//2
capX := capX < currentMonitorLeft ? currentMonitorLeft : (capX + captureW > currentMonitorRight) ? currentMonitorRight - captureW : capX
capY := y - captureH//2
capY := capY < currentMonitorTop ? currentMonitorTop : (capY + captureH > currentMonitorBottom) ? currentMonitorBottom - captureH : capY
dx := x - capX
dy := y - capY
destX := (displayW//2) - (dx * zoom)
destY := (displayH//2) - (dy * zoom)
Gdip_GraphicsClear(pGraphics)
StretchBlt(hdc_buffer, destX, destY, captureW*zoom, captureH*zoom, source_hdc, capX, capY, captureW, captureH, 0x00CC0020)
pCrossPen := Gdip_CreatePen(crossColor, 1)
Gdip_DrawLine(pGraphics, pCrossPen, displayW//2, 0, displayW//2, displayH)
Gdip_DrawLine(pGraphics, pCrossPen, 0, displayH//2, displayW, displayH//2)
Gdip_DeletePen(pCrossPen)
pCirclePen := Gdip_CreatePen(crossColor, 1)
radius := 25
Gdip_DrawEllipse(pGraphics, pCirclePen, displayW//2 - radius, displayH//2 - radius, radius * 2, radius * 2)
Gdip_DeletePen(pCirclePen)
BitBlt(dest_hdc, 5, 5, displayW, displayH, hdc_buffer, 0, 0)
WinGetActiveTitle, title
WinGet, hwnd, ID, %title%
VarSetCapacity(ptScreen, 8, 0)
DllCall("GetCursorPos", "ptr", &ptScreen)
VarSetCapacity(ptClient, 8, 0)
DllCall("ScreenToClient", "ptr", hwnd, "ptr", &ptScreen)
clientX := NumGet(ptScreen, 0, "Int")
clientY := NumGet(ptScreen, 4, "Int")
PixelGetColor, color, clientX, clientY, RGB
hexColor := SubStr(color, 3)
GuiControl,, InfoText, X:%clientX% Y:%clientY%  #%hexColor%
GuiControl,, wptext, %skilltext%
return
checkmieshi(pBitmap, mieshix, mieshiy, mieshicolor, mieshi_skill) {
getmieshi := Getdxgicolor(pBitmap, mieshix, mieshiy)
if(mieshicolor!="")
{
if (getmieshi == mieshicolor) {
for index,skill in mieshi_skill
{
sname := skill[1]
sX := skill[2]
sY := skill[3]
sColor := skill[4]
sKey := skill[5]
sSleep := skill[6]
hexColor := Getdxgicolor(pBitmap, sX, sY)
if (hexColor == sColor) {
sendloop(sKey, sSleep)
global cd
cd[sname].startcd := A_TickCount
}
}
}
}
else
{
tooltip ,检测到蔑视条颜色为空，请先按F10获取后在开启循环。
sleep 500
tooltip
}
}
stoptooltip()
{
Gui, MyFloatingWindow:hide
}
return
getpbitmap()
{
if(findmode="DXGI")
{
pbitmap:=dxgi_getpic()
}
if(findmode="GDIP")
{
pbitmap:=gdip_getpic()
}
if(findmode=="WGC")
{
pbitmap:=wgc_getpic()
}
return pbitmap
}
findbitcolor(pBitmap, x1, y1, x2, y2, targetColor, variation := 0)
{
if (x1 > x2)
temp := x1, x1 := x2, x2 := temp
if (y1 > y2)
temp := y1, y1 := y2, y2 := temp
width := x2 - x1 + 1
height := y2 - y1 + 1
PixelFormat := 0x26200A
VarSetCapacity(rect, 16, 0)
NumPut(x1, rect, 0, "Int")
NumPut(y1, rect, 4, "Int")
NumPut(width, rect, 8, "Int")
NumPut(height, rect, 12, "Int")
stride := 0
scan0 := 0
bitmapData := 0
VarSetCapacity(bitmapData, 16 + A_PtrSize * 2, 0)
res := DllCall("gdiplus\GdipBitmapLockBits"
, "UPtr", pBitmap
, "UPtr", &rect
, "UInt", 1
, "Int", PixelFormat
, "UPtr", &bitmapData)
if (res != 0)
return 0
stride := NumGet(bitmapData, 8, "Int")
scan0 := NumGet(bitmapData, 16, "UPtr")
targetR := (targetColor >> 16) & 0xFF
targetG := (targetColor >> 8) & 0xFF
targetB := targetColor & 0xFF
Loop, %height%
{
y := A_Index - 1
rowPtr := scan0 + y * stride
Loop, %width%
{
x := A_Index - 1
pixel := NumGet(rowPtr + x * 4, 0, "UInt")
pixelR := (pixel >> 16) & 0xFF
pixelG := (pixel >> 8) & 0xFF
pixelB := pixel & 0xFF
if (Abs(pixelR - targetR) <= variation
&& Abs(pixelG - targetG) <= variation
&& Abs(pixelB - targetB) <= variation)
{
DllCall("gdiplus\GdipBitmapUnlockBits", "UPtr", pBitmap, "UPtr", &bitmapData)
return {x: x1 + x, y: y1 + y}
}
}
}
DllCall("gdiplus\GdipBitmapUnlockBits", "UPtr", pBitmap, "UPtr", &bitmapData)
return 0
}
MyExitFunc(ExitReason, ExitCode)
{
global pToken, dxgiInitialized
if (dxgiInitialized)
{
DllCall("wincapture\dxgi_stop")
dxgiInitialized := false
}
if (pToken)
{
Gdip_Shutdown(pToken)
pToken := 0
}
ExitApp
}
getdxgicolor(pBitmap, x, y)
{
VarSetCapacity(rect, 16, 0)
NumPut(x, rect, 0, "Int")
NumPut(y, rect, 4, "Int")
NumPut(1, rect, 8, "Int")
NumPut(1, rect, 12, "Int")
VarSetCapacity(bitmapData, 16 + A_PtrSize * 2, 0)
res := DllCall("gdiplus\GdipBitmapLockBits"
, "UPtr", pBitmap
, "UPtr", &rect
, "UInt", 1
, "Int", 0x26200A
, "UPtr", &bitmapData)
if (res != 0)
return 0
scan0 := NumGet(bitmapData, 16, "UPtr")
pixel := NumGet(scan0+0, 0, "UInt")
blue  := (pixel & 0xFF)
green := (pixel >> 8) & 0xFF
red   := (pixel >> 16) & 0xFF
rgb := (red << 16) | (green << 8) | blue
DllCall("gdiplus\GdipBitmapUnlockBits", "UPtr", pBitmap, "UPtr", &bitmapData)
return "0x" Format("{:06X}", rgb)
}
GetgdiColor(pBitmap, sx, sy) {
argb := Gdip_GetPixel(pBitmap, sx, sy)
rgb := argb & 0xFFFFFF
return "0x" . Format("{:06X}", rgb)
}
ActivateSecondaryScreenWindow()
{
WinGet, windowList, List, ahk_exe Gw2-64.exe
Loop, %windowList%
{
thisID := windowList%A_Index%
WinGetPos, x, y, w, h, ahk_id %thisID%
if (x > A_ScreenWidth)
{
WinActivate, ahk_id %thisID%
return true
}
}
if (windowList > 0)
{
WinActivate, ahk_exe Gw2-64.exe
return true
}
return false
}
checkqwq(ByRef smode) {
global qwqkey, qwqwait, qwqwait, qwqkey1, qwqkey2, cd, qwqx, qwqy, qwqcolor, pBitmap
Gdip_DisposeImage(pBitmap)
pBitmap := getpbitmap()
getqwq := getdxgicolor(pBitmap, qwqx, qwqy)
if (smode == 0) {
if (getqwq == qwqcolor) {
sendone(qwqkey, qwqwait)
smode := 1
for index, skill in qwqkey1 {
sname := skill[1]
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
} else if (smode == 1) {
if (getqwq == qwqcolor) {
sendone(qwqkey, qwqwait)
smode := 0
for index, skill in qwqkey2 {
sname := skill[1]111111
skey := skill[5]
ssleep := skill[6]
sendone(skey, ssleep)
cd[sname].startcd := A_TickCount
}
}
}
return
}
hsleep(mis) {
seconds := mis / 1000.0
DllCall("QueryPerformanceFrequency", "Int64*", freq)
DllCall("QueryPerformanceCounter", "Int64*", start)
end := start + seconds * freq
Loop {
DllCall("QueryPerformanceCounter", "Int64*", now)
if (now >= end)
break
remainingMs := (end - now) * 1000 / freq
if (remainingMs > 1) {
Sleep, 0
} else {
DllCall("Sleep", "UInt", 0)
}
}
}
sendbreak(sname,skey,ssleep)
{
getcolorname:=sname . "color"
getcolor := %getcolorName%
getxname:=sname . "x"
getx:=%getxname%
getyname:=sname . "y"
gety:=%getyname%
sendone(skey, 30)
while(Getdxgicolor(pBitmap, sx, sy)==getcolor)
{
sendone(skey, 10)
}
hsleep(ssleep*alltime)
}
Sendone(key, loopCount)
{
comboKey := ""
mainKey := ""
if (SubStr(key, 1, 1) == "!" || SubStr(key, 1, 1) == "^" || SubStr(key, 1, 1) == "+" || SubStr(key, 1, 1) == "#") {
comboKey := SubStr(key, 1, 1)
mainKey := SubStr(key, 2)
} else {
mainKey := key
}
specialKeys := "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f11,f12,Tab,Numpad0,Numpad1,Numpad2,Numpad3,Numpad4,Numpad5,Numpad6,Numpad7,Numpad8,Numpad9"
if mainKey
{
if (InStr("," . specialKeys . ",", "," . mainKey . ",")) {
mainKey := "{" . mainKey . "}"
}
}
finalKey := comboKey . mainKey
if(key=="Shift")
{
IbSend("{Shift down}")
IbSend("{Shift up}")
}
else
if(key=="Control")
{
IbSend("{Control down}")
IbSend("{Control up}")
}
else
{
ibsend(finalKey)
}
hsleep(loopCount)
}
SendLoop(key, loopCount)
{
comboKey := ""
mainKey := ""
if (SubStr(key, 1, 1) == "!" || SubStr(key, 1, 1) == "^" || SubStr(key, 1, 1) == "+" || SubStr(key, 1, 1) == "#") {
comboKey := SubStr(key, 1, 1)
mainKey := SubStr(key, 2)
} else {
mainKey := key
}
specialKeys := "f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f11,f12,Tab,Numpad0,Numpad1,Numpad2,Numpad3,Numpad4,Numpad5,Numpad6,Numpad7,Numpad8,Numpad9"
if mainKey
{
if (InStr("," . specialKeys . ",", "," . mainKey . ",")) {
mainKey := "{" . mainKey . "}"
}
}
finalKey := comboKey . mainKey
if(key=="Shift")
{
IbSend("{Shift down}")
IbSend("{Shift up}")
}
else
if(key=="Control")
{
IbSend("{Control down}")
IbSend("{Control up}")
}
else
{
ibsend(finalKey)
}
Sleep, loopCount
a:=loopCount/8
if(a<=20)
{
a:=20
}
sleep %a%
}